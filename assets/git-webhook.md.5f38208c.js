import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.cd6e3458.js";const d=JSON.parse('{"title":"Git WebHooks","description":"当代码仓库发生某些事件（提交、合并、讨论）时，触发已经定义好的WebHooks，将数据提交到WebHooks服务所在的服务器，服务端对数据解析，执行对应的脚本，实现自动部署等一系列操作。","frontmatter":{"title":"Git WebHooks","description":"当代码仓库发生某些事件（提交、合并、讨论）时，触发已经定义好的WebHooks，将数据提交到WebHooks服务所在的服务器，服务端对数据解析，执行对应的脚本，实现自动部署等一系列操作。","time":"2019-09-23T00:00:00.000Z","category":"运维","tags":["Git","Node.js"]},"headers":[],"relativePath":"git-webhook.md","filePath":"git-webhook.md"}'),p={name:"git-webhook.md"},o=l(`<h1 id="git-webhooks" tabindex="-1">Git WebHooks <a class="header-anchor" href="#git-webhooks" aria-label="Permalink to &quot;Git WebHooks&quot;">​</a></h1><blockquote><p>方跃明 2020-09-23</p></blockquote><p>当代码仓库发生某些事件（提交、合并、讨论）时，触发已经定义好的WebHooks，将数据提交到WebHooks服务所在的服务器，服务端对数据解析，执行对应的脚本，实现自动部署等一系列操作。</p><h2 id="代码实现" tabindex="-1">代码实现 <a class="header-anchor" href="#代码实现" aria-label="Permalink to &quot;代码实现&quot;">​</a></h2><p>此处以码云签名密钥方式为例，实现代码使用<code>Egg.js</code>框架。</p><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// config/config.default.js</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;use strict&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">appInfo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>
<span class="line"><span style="color:#E1E4E8;">  config.keys </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> appInfo.name </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;_1597542673364_3462&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// CSRF</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// https://eggjs.org/zh-cn/core/security.html</span></span>
<span class="line"><span style="color:#E1E4E8;">  config.security </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    csrf: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      enable: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    domainWhiteList: [ </span><span style="color:#9ECBFF;">&#39;*&#39;</span><span style="color:#E1E4E8;"> ], </span><span style="color:#6A737D;">// FIXME: only for development</span></span>
<span class="line"><span style="color:#E1E4E8;">  };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// WebHooks</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// https://gitee.com/help/categories/40</span></span>
<span class="line"><span style="color:#E1E4E8;">  config.hooks </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [{</span></span>
<span class="line"><span style="color:#E1E4E8;">    userAgent: </span><span style="color:#9ECBFF;">&#39;git-oschina-hook&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 服务商识别串</span></span>
<span class="line"><span style="color:#E1E4E8;">    repository: { </span><span style="color:#6A737D;">// 仓库</span></span>
<span class="line"><span style="color:#E1E4E8;">      url: </span><span style="color:#9ECBFF;">&#39;https://gitee.com/oschina/git-osc&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    ref: </span><span style="color:#9ECBFF;">&#39;refs/heads/test_version&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 触发的分支</span></span>
<span class="line"><span style="color:#E1E4E8;">    hook_name: </span><span style="color:#9ECBFF;">&#39;push_hooks&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 触发的事件</span></span>
<span class="line"><span style="color:#E1E4E8;">    secret: </span><span style="color:#9ECBFF;">&#39;this is secret&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 签名密钥</span></span>
<span class="line"><span style="color:#E1E4E8;">    exec: </span><span style="color:#9ECBFF;">&#39;bash ~/bash/webhook/git-osc-push.sh&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 执行的脚本</span></span>
<span class="line"><span style="color:#E1E4E8;">  }];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> config;</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// config/config.default.js</span></span>
<span class="line"><span style="color:#032F62;">&#39;use strict&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#E36209;">appInfo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">config</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {};</span></span>
<span class="line"><span style="color:#24292E;">  config.keys </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> appInfo.name </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;_1597542673364_3462&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// CSRF</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// https://eggjs.org/zh-cn/core/security.html</span></span>
<span class="line"><span style="color:#24292E;">  config.security </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    csrf: {</span></span>
<span class="line"><span style="color:#24292E;">      enable: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    domainWhiteList: [ </span><span style="color:#032F62;">&#39;*&#39;</span><span style="color:#24292E;"> ], </span><span style="color:#6A737D;">// FIXME: only for development</span></span>
<span class="line"><span style="color:#24292E;">  };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// WebHooks</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// https://gitee.com/help/categories/40</span></span>
<span class="line"><span style="color:#24292E;">  config.hooks </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [{</span></span>
<span class="line"><span style="color:#24292E;">    userAgent: </span><span style="color:#032F62;">&#39;git-oschina-hook&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 服务商识别串</span></span>
<span class="line"><span style="color:#24292E;">    repository: { </span><span style="color:#6A737D;">// 仓库</span></span>
<span class="line"><span style="color:#24292E;">      url: </span><span style="color:#032F62;">&#39;https://gitee.com/oschina/git-osc&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    ref: </span><span style="color:#032F62;">&#39;refs/heads/test_version&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 触发的分支</span></span>
<span class="line"><span style="color:#24292E;">    hook_name: </span><span style="color:#032F62;">&#39;push_hooks&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 触发的事件</span></span>
<span class="line"><span style="color:#24292E;">    secret: </span><span style="color:#032F62;">&#39;this is secret&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 签名密钥</span></span>
<span class="line"><span style="color:#24292E;">    exec: </span><span style="color:#032F62;">&#39;bash ~/bash/webhook/git-osc-push.sh&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 执行的脚本</span></span>
<span class="line"><span style="color:#24292E;">  }];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> config;</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="控制器" tabindex="-1">控制器 <a class="header-anchor" href="#控制器" aria-label="Permalink to &quot;控制器&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// app/controller/index.js</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;use strict&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Controller</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;egg&#39;</span><span style="color:#E1E4E8;">).Controller;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HomeController</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Controller</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">ctx</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">app</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">service</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">header</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">body</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">query</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ctx.request;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#FFAB70;">repository</span><span style="color:#E1E4E8;">: { </span><span style="color:#79B8FF;">url</span><span style="color:#E1E4E8;"> }, </span><span style="color:#79B8FF;">hook_name</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">timestamp</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">sign</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">refs</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> body;</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">({ header, body, query });</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">hook</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> app.config.hooks.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">h</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> h.repository.url </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> url </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> h.hook_name </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> hook_name);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">hook) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      ctx.body </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        errcode: </span><span style="color:#79B8FF;">404</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        errmsg: </span><span style="color:#9ECBFF;">&#39;hooks not found&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        errinfo: { url, hook_name },</span></span>
<span class="line"><span style="color:#E1E4E8;">      };</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">secret</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">exec</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> hook;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (hook.refs </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> hook.refs </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> refs) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      ctx.body </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        errcode: </span><span style="color:#79B8FF;">403</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        errmsg: </span><span style="color:#9ECBFF;">&#39;branch not match&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        errinfo: refs,</span></span>
<span class="line"><span style="color:#E1E4E8;">      };</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">text</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> timestamp </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> secret;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">hmac</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> service.webhook.</span><span style="color:#B392F0;">sign</span><span style="color:#E1E4E8;">(secret, text);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (hmac </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> sign) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      ctx.body </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        errcode: </span><span style="color:#79B8FF;">401</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        errmsg: </span><span style="color:#9ECBFF;">&#39;sign not match&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        errinfo: { sign },</span></span>
<span class="line"><span style="color:#E1E4E8;">      };</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">stdout</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">stderr</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> service.webhook.</span><span style="color:#B392F0;">exec</span><span style="color:#E1E4E8;">(exec);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (stderr) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      ctx.body </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        errcode: </span><span style="color:#79B8FF;">502</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        errmsg: </span><span style="color:#9ECBFF;">&#39;exec failed&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        errinfo: stderr,</span></span>
<span class="line"><span style="color:#E1E4E8;">      };</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    ctx.logger.</span><span style="color:#B392F0;">info</span><span style="color:#E1E4E8;">(stdout);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">res</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      errcode: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      errmsg: </span><span style="color:#9ECBFF;">&#39;ok&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    };</span></span>
<span class="line"><span style="color:#E1E4E8;">    ctx.body </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> res;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> HomeController;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// app/controller/index.js</span></span>
<span class="line"><span style="color:#032F62;">&#39;use strict&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Controller</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;egg&#39;</span><span style="color:#24292E;">).Controller;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HomeController</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Controller</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">ctx</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">app</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">service</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">header</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">body</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">query</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ctx.request;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#E36209;">repository</span><span style="color:#24292E;">: { </span><span style="color:#005CC5;">url</span><span style="color:#24292E;"> }, </span><span style="color:#005CC5;">hook_name</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">timestamp</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">sign</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">refs</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> body;</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">({ header, body, query });</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">hook</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> app.config.hooks.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(</span><span style="color:#E36209;">h</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> h.repository.url </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> url </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> h.hook_name </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> hook_name);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">hook) {</span></span>
<span class="line"><span style="color:#24292E;">      ctx.body </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        errcode: </span><span style="color:#005CC5;">404</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        errmsg: </span><span style="color:#032F62;">&#39;hooks not found&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        errinfo: { url, hook_name },</span></span>
<span class="line"><span style="color:#24292E;">      };</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">secret</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">exec</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> hook;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (hook.refs </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> hook.refs </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> refs) {</span></span>
<span class="line"><span style="color:#24292E;">      ctx.body </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        errcode: </span><span style="color:#005CC5;">403</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        errmsg: </span><span style="color:#032F62;">&#39;branch not match&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        errinfo: refs,</span></span>
<span class="line"><span style="color:#24292E;">      };</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">text</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> timestamp </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> secret;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">hmac</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> service.webhook.</span><span style="color:#6F42C1;">sign</span><span style="color:#24292E;">(secret, text);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (hmac </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> sign) {</span></span>
<span class="line"><span style="color:#24292E;">      ctx.body </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        errcode: </span><span style="color:#005CC5;">401</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        errmsg: </span><span style="color:#032F62;">&#39;sign not match&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        errinfo: { sign },</span></span>
<span class="line"><span style="color:#24292E;">      };</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">stdout</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">stderr</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> service.webhook.</span><span style="color:#6F42C1;">exec</span><span style="color:#24292E;">(exec);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (stderr) {</span></span>
<span class="line"><span style="color:#24292E;">      ctx.body </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        errcode: </span><span style="color:#005CC5;">502</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        errmsg: </span><span style="color:#032F62;">&#39;exec failed&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        errinfo: stderr,</span></span>
<span class="line"><span style="color:#24292E;">      };</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    ctx.logger.</span><span style="color:#6F42C1;">info</span><span style="color:#24292E;">(stdout);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">res</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      errcode: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      errmsg: </span><span style="color:#032F62;">&#39;ok&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    };</span></span>
<span class="line"><span style="color:#24292E;">    ctx.body </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> res;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> HomeController;</span></span></code></pre></div><h3 id="相关服务" tabindex="-1">相关服务 <a class="header-anchor" href="#相关服务" aria-label="Permalink to &quot;相关服务&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// app/service/webhook.js</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;use strict&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">crypto</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;crypto&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">util</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;util&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">exec</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> util.</span><span style="color:#B392F0;">promisify</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;child_process&#39;</span><span style="color:#E1E4E8;">).exec);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Service</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;egg&#39;</span><span style="color:#E1E4E8;">).Service;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WebhookService</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Service</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">sign</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">secret</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">text</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">hmac</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> crypto.</span><span style="color:#B392F0;">createHmac</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;sha256&#39;</span><span style="color:#E1E4E8;">, secret).</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(text).</span><span style="color:#B392F0;">digest</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;base64&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> hmac;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">exec</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">exec</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">args);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> WebhookService;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// app/service/webhook.js</span></span>
<span class="line"><span style="color:#032F62;">&#39;use strict&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">crypto</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;crypto&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">util</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;util&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">exec</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> util.</span><span style="color:#6F42C1;">promisify</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;child_process&#39;</span><span style="color:#24292E;">).exec);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Service</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;egg&#39;</span><span style="color:#24292E;">).Service;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WebhookService</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Service</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">sign</span><span style="color:#24292E;">(</span><span style="color:#E36209;">secret</span><span style="color:#24292E;">, </span><span style="color:#E36209;">text</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">hmac</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> crypto.</span><span style="color:#6F42C1;">createHmac</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;sha256&#39;</span><span style="color:#24292E;">, secret).</span><span style="color:#6F42C1;">update</span><span style="color:#24292E;">(text).</span><span style="color:#6F42C1;">digest</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;base64&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> hmac;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">exec</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">...</span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">exec</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">args);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> WebhookService;</span></span></code></pre></div><h2 id="服务器" tabindex="-1">服务器 <a class="header-anchor" href="#服务器" aria-label="Permalink to &quot;服务器&quot;">​</a></h2><h3 id="部署webhooks" tabindex="-1">部署WebHooks <a class="header-anchor" href="#部署webhooks" aria-label="Permalink to &quot;部署WebHooks&quot;">​</a></h3><p>将以上代码部署到服务器上，并启动服务，假设运行于：<a href="https://webhook.your.server" target="_blank" rel="noreferrer">https://webhook.your.server</a>。</p><h3 id="创建公钥" tabindex="-1">创建公钥 <a class="header-anchor" href="#创建公钥" aria-label="Permalink to &quot;创建公钥&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span></span>
<span class="line"><span style="color:#B392F0;">ssh-keygen</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rsa</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-C</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;xxxxx@xxxxx.com&quot;</span></span>
<span class="line"><span style="color:#6A737D;"># 一路回车</span></span>
<span class="line"><span style="color:#6A737D;"># 公钥文件：~/.ssh/id_rsa.pub</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">cd</span></span>
<span class="line"><span style="color:#6F42C1;">ssh-keygen</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rsa</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-C</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;xxxxx@xxxxx.com&quot;</span></span>
<span class="line"><span style="color:#6A737D;"># 一路回车</span></span>
<span class="line"><span style="color:#6A737D;"># 公钥文件：~/.ssh/id_rsa.pub</span></span></code></pre></div><h3 id="执行脚本" tabindex="-1">执行脚本 <a class="header-anchor" href="#执行脚本" aria-label="Permalink to &quot;执行脚本&quot;">​</a></h3><p>以<code>Egg.js</code>项目为例</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># ~/bash/webhook/git-osc-push.sh</span></span>
<span class="line"><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-xe</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/projects/git-osc-push</span></span>
<span class="line"><span style="color:#B392F0;">yarn</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stop</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pull</span></span>
<span class="line"><span style="color:#B392F0;">yarn</span></span>
<span class="line"><span style="color:#B392F0;">yarn</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span></span>
<span class="line"><span style="color:#79B8FF;">exit</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># ~/bash/webhook/git-osc-push.sh</span></span>
<span class="line"><span style="color:#005CC5;">set</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-xe</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/projects/git-osc-push</span></span>
<span class="line"><span style="color:#6F42C1;">yarn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stop</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pull</span></span>
<span class="line"><span style="color:#6F42C1;">yarn</span></span>
<span class="line"><span style="color:#6F42C1;">yarn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span></span>
<span class="line"><span style="color:#005CC5;">exit</span></span></code></pre></div><h3 id="下拉代码仓库" tabindex="-1">下拉代码仓库 <a class="header-anchor" href="#下拉代码仓库" aria-label="Permalink to &quot;下拉代码仓库&quot;">​</a></h3><p>以SSH格式clone或下拉仓库，若跳出公钥确认信息，回复<code>yes</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git@gitee.com:name/repo.git</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git@gitee.com:name/repo.git</span></span></code></pre></div><h2 id="代码仓库" tabindex="-1">代码仓库 <a class="header-anchor" href="#代码仓库" aria-label="Permalink to &quot;代码仓库&quot;">​</a></h2><h3 id="添加部署公钥" tabindex="-1">添加部署公钥 <a class="header-anchor" href="#添加部署公钥" aria-label="Permalink to &quot;添加部署公钥&quot;">​</a></h3><p>将上面生成的公钥，添加到对应仓库的部署公钥管理里，并启用</p><h3 id="设置webhooks" tabindex="-1">设置WebHooks <a class="header-anchor" href="#设置webhooks" aria-label="Permalink to &quot;设置WebHooks&quot;">​</a></h3><p>进入对应仓库（<code>name/repo</code>），WebHooks设置，添加一个WebHooks</p><ul><li>URL： <a href="https://webhook.your.server" target="_blank" rel="noreferrer">https://webhook.your.server</a></li><li>签名密钥：<code>this is secret</code></li><li>选择事件：如PUSH</li></ul><p>至此完成部署和配置，当对应仓库有PUSH事件时，将触发WebHooks实现自动部署。</p>`,29),e=[o];function c(t,r,E,y,i,F){return n(),a("div",null,e)}const C=s(p,[["render",c]]);export{d as __pageData,C as default};
