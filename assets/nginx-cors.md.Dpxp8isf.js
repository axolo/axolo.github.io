import{_ as s,c as i,o as a,a5 as n}from"./chunks/framework.b2lEul5q.js";const E=JSON.parse('{"title":"nginx 同源调试","description":"开发调试时，对于多个不同源的独立前端应用，推荐使用 nginx 配置代理来实现同源调试。","frontmatter":{"title":"nginx 同源调试","description":"开发调试时，对于多个不同源的独立前端应用，推荐使用 nginx 配置代理来实现同源调试。","time":"2023-09-11T00:00:00.000Z","category":"运维","tags":["nginx","cors"]},"headers":[],"relativePath":"nginx-cors.md","filePath":"nginx-cors.md"}'),t={name:"nginx-cors.md"},e=n(`<h1 id="nginx-同源调试" tabindex="-1">nginx 同源调试 <a class="header-anchor" href="#nginx-同源调试" aria-label="Permalink to &quot;nginx 同源调试&quot;">​</a></h1><blockquote><p>方跃明 2023-09-11</p></blockquote><p>由于同源策略的限制，跨源资源共享（<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS" target="_blank" rel="noreferrer">CORS</a>）默认禁止，比如A源禁止B源访问其<code>Cookie</code>。</p><p>此时，需要请求资源管理方修改策略允许访问，比如修改<code>Access-Control-Allow-Origin</code>。</p><p>或者，本地使用工具将资源代理为同源，比如<code>Vite</code>的<a href="https://cn.vitejs.dev/config/server-options.html#server-proxy" target="_blank" rel="noreferrer">server.proxy</a>。</p><p>开发调试时，对于多个不同源的独立前端应用，推荐使用 <a href="https://nginx.org/" target="_blank" rel="noreferrer">nginx</a> 配置代理来实现同源。</p><div class="tip custom-block"><p class="custom-block-title">本地HTTPS调试</p><p>除代理同源外，<code>nginx</code>配合<code>hosts</code>可以接管互联网域名，结合 SSL 证书配置，实现本地 HTTP 调试。</p></div><h2 id="目标" tabindex="-1">目标 <a class="header-anchor" href="#目标" aria-label="Permalink to &quot;目标&quot;">​</a></h2><p>配置代理实现应用A和应用B同源，B应用可以读取A应用的<code>Cookie</code>，实现免登。</p><table tabindex="0"><thead><tr><th>应用</th><th>代理前</th><th>代理后</th><th>说明</th></tr></thead><tbody><tr><td>应用A</td><td><code>http://localhost:8080/</code></td><td><code>http://localhost/app/</code></td><td><code>/</code> =&gt; <code>/app/</code></td></tr><tr><td>应用B</td><td><code>http://localhost:5173/cms/</code></td><td><code>http://localhost/cms/</code></td><td></td></tr></tbody></table><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><p>以下所有操作均在 Windows 11 环境下进行，其他操作系统请自行适配。</p><h3 id="vue" tabindex="-1">vue <a class="header-anchor" href="#vue" aria-label="Permalink to &quot;vue&quot;">​</a></h3><blockquote><p>应用A的.env.development</p></blockquote><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VUE_APP_PUBLIC_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=./</span></span></code></pre></div><blockquote><p>应用B的.env.development</p></blockquote><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_PUBLIC_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/cms/</span></span></code></pre></div><h3 id="nginx" tabindex="-1">nginx <a class="header-anchor" href="#nginx" aria-label="Permalink to &quot;nginx&quot;">​</a></h3><blockquote><p>nginx/conf/nginx.conf</p></blockquote><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> localhost;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  html;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      index </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> index.html index.htm;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$uri $uri/ /index.html;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 引入同源调试配置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    include </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">conf.d/location.conf;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>nginx/conf/conf.d/location.conf</p></blockquote><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 应用A</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /app/ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://localhost:8080/;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 应用B</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /cms/ </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://localhost:5173/cms/;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="运行" tabindex="-1">运行 <a class="header-anchor" href="#运行" aria-label="Permalink to &quot;运行&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 应用A根目录</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serve</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 运行应用A（Vue CLI）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 应用B根目录</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 运行应用B（Vite）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx根目录</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./nginx</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         # 或双击nginx.exe</span></span></code></pre></div><p>运行成功后，即可使用代理后的地址进行同源访问。</p>`,25),l=[e];function p(h,k,d,o,r,c){return a(),i("div",null,l)}const y=s(t,[["render",p]]);export{E as __pageData,y as default};
