<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://blog.fangyueming.cn/rss.xml" rel="self" type="application/rss+xml"/>
    <title>方跃明的博客</title>
    <link>https://blog.fangyueming.cn/</link>
    <description>WEB应用开发技术笔记</description>
    <language>zh-CN</language>
    <pubDate>Sun, 23 Jan 2022 02:52:29 GMT</pubDate>
    <lastBuildDate>Sun, 23 Jan 2022 02:52:29 GMT</lastBuildDate>
    <generator>@mr-hope/vuepress-plugin-feed</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <copyright>Copyright by 方跃明</copyright>
    <item>
      <title>博客主页</title>
      <link>https://blog.fangyueming.cn/</link>
      <guid>https://blog.fangyueming.cn/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">博客主页</source>
      <pubDate>Tue, 14 Dec 2021 13:18:38 GMT</pubDate>
    </item>
    <item>
      <title>CentOS 查看各种信息</title>
      <link>https://blog.fangyueming.cn/centos-info/</link>
      <guid>https://blog.fangyueming.cn/centos-info/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">CentOS 查看各种信息</source>
      <pubDate>Tue, 03 Apr 2012 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="centos-查看各种信息"> CentOS 查看各种信息</h1>
<div><pre><code><span>rpm</span> -ql nginx                 <span># 查看nginx软件包的安装位置</span>
<span>rpm</span> -qa                       <span># 查看所有安装的软件包</span>
<span>uname</span> -a                      <span># 查看内核/操作系统/CPU信息的linux系统信息命令</span>
<span>head</span> -n <span>1</span> /etc/issue          <span># 查看操作系统版本，是数字1不是字母L</span>
<span>cat</span> /proc/cpuinfo             <span># 查看CPU信息的linux系统信息命令</span>
<span>hostname</span>                      <span># 查看计算机名的linux系统信息命令</span>
lspci -tv                     <span># 列出所有PCI设备</span>
lsusb -tv                     <span># 列出所有USB设备的linux系统信息命令</span>
lsmod                         <span># 列出加载的内核模块</span>
<span>env</span>                           <span># 查看环境变量资源</span>
<span>free</span> -m                       <span># 查看内存使用量和交换区使用量</span>
<span>df</span> -h                         <span># 查看各分区使用情况</span>
<span>du</span> -sh                        <span># 查看指定目录的大小</span>
<span>grep</span> MemTotal /proc/meminfo   <span># 查看内存总量</span>
<span>grep</span> MemFree /proc/meminfo    <span># 查看空闲内存量</span>
<span>uptime</span>                        <span># 查看系统运行时间、用户数、负载</span>
<span>cat</span> /proc/loadavg             <span># 查看系统负载磁盘和分区</span>
<span>mount</span> <span>|</span> <span>column</span> -t             <span># 查看挂接的分区状态</span>
<span>fdisk</span> -l                      <span># 查看所有分区</span>
<span>swapon</span> -s                     <span># 查看所有交换分区</span>
hdparm -i /dev/hda            <span># 查看磁盘参数(仅适用于IDE设备)</span>
<span>dmesg</span> <span>|</span> <span>grep</span> IDE              <span># 查看启动时IDE设备检测状况网络</span>
<span>ifconfig</span>                      <span># 查看所有网络接口的属性</span>
iptables -L                   <span># 查看防火墙设置</span>
route -n                      <span># 查看路由表</span>
<span>netstat</span> -lntp                 <span># 查看所有监听端口</span>
<span>netstat</span> -antp                 <span># 查看所有已经建立的连接</span>
<span>netstat</span> -s                    <span># 查看网络统计信息进程</span>
<span>ps</span> -ef                        <span># 查看所有进程</span>
<span>top</span>                           <span># 实时显示进程状态用户</span>
w                             <span># 查看活动用户</span>
<span>id</span>                            <span># 查看指定用户信息</span>
last                          <span># 查看用户登录日志</span>
<span>cut</span> -d: -f1 /etc/passwd       <span># 查看系统所有用户</span>
<span>cut</span> -d: -f1 /etc/group        <span># 查看系统所有组</span>
<span>crontab</span> -l                    <span># 查看当前用户的计划任务服务</span>
<span>chkconfig</span> –list               <span># 列出所有系统服务</span>
<span>chkconfig</span> –list <span>|</span> <span>grep</span> on     <span># 列出所有启动的系统服务程序</span>
<span>cat</span> /proc/cpuinfo             <span># 查看CPU相关参数的linux系统命令</span>
<span>cat</span> /proc/partitions          <span># 查看linux硬盘和分区信息的系统信息命令</span>
<span>cat</span> /proc/meminfo             <span># 查看linux系统内存信息的linux系统命令</span>
<span>cat</span> /proc/version             <span># 查看版本，类似uname -r</span>
<span>cat</span> /proc/ioports             <span># 查看设备io端口</span>
<span>cat</span> /proc/interrupts          <span># 查看中断</span>
<span>cat</span> /proc/pci                 <span># 查看pci设备的信息</span>
<span>cat</span> /proc/swaps               <span># 查看所有swap分区的信息</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>CentOS 快速安装常用开发工具</title>
      <link>https://blog.fangyueming.cn/centos-develop/</link>
      <guid>https://blog.fangyueming.cn/centos-develop/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">CentOS 快速安装常用开发工具</source>
      <pubDate>Mon, 11 May 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="centos-快速安装常用开发工具"> CentOS 快速安装常用开发工具</h1>
<h2 id="docker"> Docker</h2>
<div><pre><code><span># https://docs.docker.com/engine/install/centos/</span>
yum <span>install</span> -y yum-utils
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
yum <span>install</span> docker-ce docker-ce-cli containerd.io
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h2 id="mysql-8-x"> MySQL 8.x</h2>
<div><pre><code><span># 安装官方仓库</span>
yum localinstall https://repo.mysql.com/mysql80-community-release-el7-1.noarch.rpm
<span># 安装 MySQL Server</span>
yum <span>install</span> mysql-community-server
<span># 启动MySQL</span>
systemctl start mysqld
<span># 检查服务状态</span>
systemctl status mysqld
<span># 查看初始密码</span>
<span>grep</span> <span>'temporary password'</span> /var/log/mysqld.log
mysql -uroot -p
<span># 输入密码进入mysql命令行</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><h2 id="node-js"> Node.js</h2>
<div><pre><code><span># https://github.com/nodesource/distributions#rpm</span>
<span>curl</span> -sL https://rpm.nodesource.com/setup_16.x <span>|</span> <span>bash</span> -
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h2 id="yarn"> Yarn</h2>
<div><pre><code><span># https://yarn.bootcss.com/docs/install/#centos-stable</span>
<span>curl</span> --silent --location https://dl.yarnpkg.com/rpm/yarn.repo <span>|</span> <span>sudo</span> <span>tee</span> /etc/yum.repos.d/yarn.repo
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h2 id="git"> Git</h2>
<div><pre><code><span># https://stackoverflow.com/questions/21820715/how-to-install-latest-version-of-git-on-centos-7-x-6-x</span>
yum <span>install</span> http://opensource.wandisco.com/centos/7/git/x86_64/wandisco-git-release-7-2.noarch.rpm
yum <span>install</span> <span>git</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h2 id="nginx"> NGiNX</h2>
<div><pre><code><span># https://www.nginx.com/resources/wiki/start/topics/tutorials/install/</span>
<span>vim</span> /etc/yum.repos.d/nginx.repo
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><div><pre><code><span><span>[</span><span>nginx</span><span>]</span></span>
<span>name</span><span>=</span><span>nginx repo</span>
<span>baseurl</span><span>=</span><span>https://nginx.org/packages/centos/$releasever/$basearch/</span>
<span>gpgcheck</span><span>=</span><span>0</span>
<span>enabled</span><span>=</span><span>1</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><blockquote>
<p>方跃明
2020-05-11</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>CentOS防火墙</title>
      <link>https://blog.fangyueming.cn/centos-firewall/</link>
      <guid>https://blog.fangyueming.cn/centos-firewall/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">CentOS防火墙</source>
      <pubDate>Wed, 25 Dec 2019 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="centos防火墙"> CentOS防火墙</h1>
<p>CentOS使用防火墙系统firewalld，大多数服务需要开启防火墙端口才能被正确访问。</p>
<h2 id="放行"> 放行</h2>
<div><pre><code><span># 开启普通端口</span>
firewall-cmd --zone<span>=</span>public --add-port<span>=</span><span>80</span>/tcp --permanent
<span># 开启NAT转发，比如Docker Proxy</span>
firewall-cmd --zone<span>=</span>public --add-masquerade --permanent
<span># 重载防火墙使配置立即生效</span>
firewall-cmd --reload
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><table>
<thead>
<tr>
<th>参数</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>--zone</td>
<td>作用域，public = 公共区域</td>
</tr>
<tr>
<td>--add-port=80/tcp</td>
<td>添加端口，格式为：端口/通讯协议</td>
</tr>
<tr>
<td>--permanent</td>
<td>永久生效，没有此参数重启后失效</td>
</tr>
</tbody>
</table>
<h2 id="服务"> 服务</h2>
<div><pre><code>systemctl start   firewalld   <span># 启动</span>
systemctl stop    firewalld   <span># 停止</span>
systemctl restart firewalld   <span># 重启</span>
systemctl status  firewalld   <span># 状态</span>
systemctl disable firewalld   <span># 禁用</span>
systemctl <span>enable</span>  firewalld   <span># 自启动</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h2 id="命令"> 命令</h2>
<div><pre><code>firewall-cmd --version                            <span># 查看版本</span>
firewall-cmd --help                               <span># 查看帮助</span>
firewall-cmd --state                              <span># 状态</span>
firewall-cmd --reload                             <span># 更新防火墙规则</span>
firewall-cmd --complete-reload                    <span># 更新防火墙规则（断开连接）</span>
firewall-cmd --list-all                           <span># 列出所有规则</span>
firewall-cmd --list-port                          <span># 列出所有放行端口</span>
firewall-cmd --panic-on                           <span># 拒绝所有包</span>
firewall-cmd --panic-off                          <span># 取消拒绝状态</span>
firewall-cmd --query-panic                        <span># 查看是否拒绝</span>
firewall-cmd --get-active-zones                   <span># 查看区域信息</span>
firewall-cmd --set-default-zone<span>=</span>public            <span># 设置默认区域</span>
firewall-cmd --get-zone-of-interface<span>=</span>eth0         <span># 查看指定接口所属区域</span>
firewall-cmd --zone<span>=</span>dmz --list-ports              <span># 查看所有打开的端口</span>
firewall-cmd --zone<span>=</span>public --add-interface<span>=</span>eth0   <span># 指定区域加入接口</span>
firewall-cmd --zone<span>=</span>dmz --add-port<span>=</span><span>8080</span>/tcp       <span># 加入一个端口到区域</span>
firewall-cmd --zone<span>=</span>work --add-service<span>=</span>smtp       <span># 添加一个服务</span>
firewall-cmd --zone<span>=</span>work --remove-service<span>=</span>smtp    <span># 移除一个服务</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><blockquote>
<p>方跃明
2019-12-25</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>CentOS安装KVM</title>
      <link>https://blog.fangyueming.cn/centos-kvm/</link>
      <guid>https://blog.fangyueming.cn/centos-kvm/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">CentOS安装KVM</source>
      <pubDate>Fri, 04 Apr 2014 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="centos安装kvm"> CentOS安装KVM</h1>
<p>很多人都使用Openstack，通过nova来管理KVM，对于KVM本身其实很陌生，本文理论联系实践，加深对KVM的认识。先弄清楚几个概念和关系：</p>
<h2 id="openstack、kvm、qemu-kvm、libvirt的关系"> Openstack、kvm、qemu-kvm、libvirt的关系</h2>
<ul>
<li>KVM是最底层的hypervisor，它是用来模拟CPU的运行，它缺少了对network和周边I/O的支持，是没法直接用的。</li>
<li>QEMU-KVM就是建基于KVM上面的，它提供了完整的网络和I/O支持。</li>
<li>Openstack不直接控制qemu-kvm，它使用一个叫libvirt的库间接控制qemu-lvm。</li>
<li>libvirt提供了跨VM平台的功能，除了QEMU的模拟器，还可以控制vmware、virtualbox、xen等。为了实现openstack的跨VM特性，openstack使用libvirt，而不直接用qemu-kvm。libvirt还提供了一些高级的功能，例如pool/vol管理。</li>
</ul>
<p><img src="./openstack.png" alt="centos-kvm-openstack" /></p>
<h2 id="虚拟机服务器和客户端的关系"> 虚拟机服务器和客户端的关系</h2>
<table>
<thead>
<tr>
<th>位置</th>
<th style="text-align:center">组件</th>
</tr>
</thead>
<tbody>
<tr>
<td>服务端</td>
<td style="text-align:center">kvm、qemu-kvm、libvirt、python-virtinst、virt-viewer</td>
</tr>
<tr>
<td>客户端</td>
<td style="text-align:center">virt-manager</td>
</tr>
</tbody>
</table>
<p>一般来说，服务器端尽可能的只安装必要的服务器组件，以避免性能问题、误操作和漏洞攻击等等，而管理服务器的客户端软件安装在客户端。当然，服务端和客户端在同一个操作系统的情况也是允许的，经常用在实验环境，但部署在生产环境应该极力避免。</p>
<h2 id="部署kvm"> 部署KVM</h2>
<h3 id="一、前提条件"> 一、前提条件</h3>
<p>检查CPU虚拟化是否支持kvm；最小化安装CentOS；关闭SELinux、关闭iptables或者打开相应的防火墙端口。</p>
<p>检查CPU是否支持虚拟化，用以下命令，其中vmx对应intel，svm对应amd，运行后如果有对应输出则支持虚拟化，无输出则表面不支持虚拟化。</p>
<div><pre><code><span>cat</span> /proc/cpuinfo <span>|</span> <span>grep</span> -E <span>'(vmx|svm)'</span>
</code></pre>
<div><span>1</span><br></div></div><p>在/etc/sysconfig/selinux中设置参数selinux=0，关闭SELinux。</p>
<h3 id="二、服务器端安装kvm服务"> 二、服务器端安装KVM服务</h3>
<p>安装kvm服务端及相关组件，其中python-virtinst用于在创建虚拟机时编辑配置文件， virt-viewer用于客户端管理器管理虚拟机时开启图形控制台，防止黑屏。</p>
<div><pre><code>yum <span>install</span> kvm qemu-kvm libvirt  python-virtinst  virt-viewer
</code></pre>
<div><span>1</span><br></div></div><p>启动libvirt服务</p>
<div><pre><code>/etc/init.d/libvirtd start
</code></pre>
<div><span>1</span><br></div></div><p>查看kvm服务是否正常，目前没任何虚拟机，所以没有内容显示
进入virsh后，可以使用virsh的相关指令。help为帮助，exit退出virsh。</p>
<div><pre><code><span>virsh</span>
list
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h3 id="三、服务器端网络设置"> 三、服务器端网络设置</h3>
<p>虚拟机接入网络常用有两种方式，一种是NAT一种是Brigde，一般采用Brigde方式。</p>
<p><img src="./network-brige.png" alt="network-brige" /></p>
<p>桥接模式需要设置，首先，创建一个文件“/etc/sysconfig/network-scripts/ifcfg-br0”：</p>
<div><pre><code><span># /etc/sysconfig/network-scripts/ifcfg-br0</span>
<span>DEVICE</span><span>=</span><span>br0</span>
<span>ONBOOT</span><span>=</span><span>yes</span>
<span>TYPE</span><span>=</span><span>Bridge             #注意大小写</span>
<span>BOOTPROTO</span><span>=</span><span>static</span>
<span>IPADDR</span><span>=</span><span>192.168.255.180</span>
<span>NETMASK</span><span>=</span><span>255.255.255.0</span>
<span>GATEWAY</span><span>=</span><span>192.168.255.254</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>其次，修改“/etc/sysconfig/network-scripts/ifcfg-eth0”：</p>
<div><pre><code><span># /etc/sysconfig/network-scripts/ifcfg-eth0</span>
<span>DEVICE</span><span>=</span><span>eth0</span>
<span>NM_CONTROLLED</span><span>=</span><span>no    #必须关闭NM_CONTROLLED</span>
<span>BOOTPROTO</span><span>=</span><span>none      #由于是桥接，BOOTPROTO=none，不要配置IP等信息</span>
<span>ONBOOT</span><span>=</span><span>yes          #启动时连接网卡</span>
<span>BRIDGE</span><span>=</span><span>br0          #桥接到br0</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>重启网络服务</p>
<div><pre><code>/etc/init.d/network restart
</code></pre>
<div><span>1</span><br></div></div><p>查看桥接网络</p>
<div><pre><code>brctl show
</code></pre>
<div><span>1</span><br></div></div><table>
<thead>
<tr>
<th>bridge name</th>
<th>bridge id</th>
<th>STP enabled</th>
<th>interfaces</th>
</tr>
</thead>
<tbody>
<tr>
<td>br0</td>
<td>8000.00e081de016c</td>
<td>no</td>
<td>eth0</td>
</tr>
<tr>
<td>virbr0</td>
<td>8000.5254009219a2</td>
<td>yes</td>
<td>virbr0-nic</td>
</tr>
</tbody>
</table>
<p>四、kvm与virt-manager的关系**</p>
<p>virt-manager图形化管理工具一般装在客户端桌面系统上，管理kvm host的虚拟网络、存储、网络接口，vm的创建、配置、删除、启动关机等。</p>
<p><img src="./virt-manager-client.png" alt="virt-manager客户端" /></p>
<h3 id="五、客户端安装及使用virt-manager"> 五、客户端安装及使用virt-manager</h3>
<ul>
<li>客户端需要CentOS桌面系统。在“主菜单”→“系统”→“管理”→“添加/删除软件”中查找“virt-manager”，找到后，点击“应用”，进行安装。</li>
<li>安装完成后，打开方式位于“主菜单”→“系统工具”→“虚拟系统管理器”。</li>
</ul>
<p><img src="./virt-manager-install.png" alt="安装virt-manager" /></p>
<p><img src="./virt-manager-connection.png" alt="连接KVM服务器" /></p>
<p><img src="./vm.png" alt="虚拟机配置" /></p>
<h3 id="六、vnc的使用"> 六、VNC的使用</h3>
<p>对应KVM服务器一般采用OpenStack、CloudStack等等工具利用浏览器来进行管理，这些工具安装配置更加复杂。
而virt-manager虽然简单，但目前为止还没有Windows版本。对于习惯Windows的用户，随时随地就能使用Linux桌面比较困难。因此需要VNC连接到Linux桌面客户端再利用virt-manager管理虚拟服务器。
建议在装有virt-manager的Linux桌面上安装VNC服务器，并开启VNC服务，以便Windows用户使用VNC客户端进行控制。</p>
<h3 id="七、需要进阶掌握的内容"> 七、需要进阶掌握的内容</h3>
<ol>
<li>libvirt命令行</li>
<li>深入理解kvm相关概念</li>
<li>linux相关概念、命令及shell编程</li>
</ol>
<blockquote>
<p>方跃明
2014-04-04</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>DELETE方法传递参数</title>
      <link>https://blog.fangyueming.cn/delete-with-body/</link>
      <guid>https://blog.fangyueming.cn/delete-with-body/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">DELETE方法传递参数</source>
      <pubDate>Tue, 01 Oct 2019 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="delete方法传递参数"> DELETE方法传递参数</h1>
<div><p>注意</p>
<p><a href="https://tools.ietf.org/html/rfc2616" target="_blank" rel="noopener noreferrer">RFC2616</a>不建议DELETE方法甚至是GET方法body携带参数。</p>
</div>
<h2 id="约束"> 约束</h2>
<p>尽管如此，实际业务中还是有可能不可回避的遇到，具体实现有以下约束：</p>
<ul>
<li>参数必须被<code>data</code>包裹才能正确传递，请务必遵循。</li>
<li>请求头的<code>Content-Type</code>必须是<code>application/json</code></li>
</ul>
<h2 id="请求"> 请求</h2>
<div><pre><code><span>curl</span> -X DELETE <span>'/car/:id'</span>
-H <span>'Content-Type: application/json'</span> <span>\</span>
-d <span>'{ "data": { "deletedBy": "测试删除车辆17" } }'</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">必须</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>headers</td>
<td style="text-align:center">是</td>
<td>Content-Type: application/json</td>
</tr>
<tr>
<td>:id</td>
<td style="text-align:center">是</td>
<td>车辆id</td>
</tr>
<tr>
<td>deletedBy</td>
<td style="text-align:center"></td>
<td>停用原因</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>Docker Mysql</title>
      <link>https://blog.fangyueming.cn/docker-mysql/</link>
      <guid>https://blog.fangyueming.cn/docker-mysql/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">Docker Mysql</source>
      <pubDate>Fri, 18 Jun 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="docker-mysql"> Docker Mysql</h1>
<h2 id="install"> Install</h2>
<div><pre><code><span>#!/bin/bash</span>
<span>#author: Yueming Fang</span>

<span>name</span><span>=</span>mysql

docker run -d --name <span>${name}</span> <span>\</span>
-v /root/docker/<span>${name}</span>/conf:/etc/mysql/conf.d <span>\</span>
-v /root/docker/<span>${name}</span>/logs:/usr/local/mysql/logs <span>\</span>
-v /root/docker/<span>${name}</span>/data:/var/lib/mysql <span>\</span>
-v /etc/localtime:/etc/localtime <span>\</span>
-e <span>MYSQL_ROOT_PASSWORD</span><span>=</span>password <span>\</span>
-p <span>3306</span>:3306 <span>\</span>
mysql:latest
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><h2 id="backup"> Backup</h2>
<div><pre><code><span>#!/bin/bash</span>
<span># Author: Yueming Fang</span>
<span># Update: 2021-06-18</span>
<span>#</span>
<span># Usage:</span>
<span>#</span>
<span># 1. add user to mysql</span>
<span>#</span>
<span># create user 'backup'@'localhost' identified by 'backup';</span>
<span># grant SELECT, RELOAD, LOCK TABLES, REPLICATION CLIENT, SHOW VIEW, TRIGGER, PROCESS on *.* to 'backup'@'localhost';</span>
<span>#</span>
<span># 2. my.cnf</span>
<span>#</span>
<span># [mysqldump]</span>
<span># user = backup</span>
<span># password = backup</span>
<span>#</span>
<span># 3. bash</span>
<span>#</span>
<span># ./mysql-backup db1</span>
<span>#</span>
<span># 4. crontab -e</span>
<span>#</span>
<span># 0 1 * * * bash /root/bash/mysql-backup.sh db1</span>

<span># define</span>
<span>set</span> -ex
<span>date</span><span>=</span><span><span>`</span><span>date</span> +%Y%m%d<span>`</span></span>
<span>dir</span><span>=</span>/root/backup/mysql/<span>${date}</span>
<span>db</span><span>=</span><span>$1</span>

<span>echo</span> <span>${db}</span> <span>=</span><span>\</span><span>></span> <span>${dir}</span> <span>..</span>.

<span># create dir</span>
<span>if</span> <span>[</span> <span>!</span> -d <span>${dir}</span> <span>]</span><span>;</span> <span>then</span> <span>mkdir</span> -p <span>${dir}</span><span>;</span> <span>fi</span>

<span># rm file of backup a week ago</span>
<span># find ${dir} -ctime +7 -type f | xargs rm -rf</span>

<span># rm dir of backup a week ago</span>
<span>find</span> /root/backup/mysql/ -ctime +7 -type d <span>|</span> <span>xargs</span> <span>rm</span> -rf

<span># backup everyday</span>
<span># db1 => /root/backup/mysql/20210314/db1-20210314.sql.gz</span>
<span># db2 => /root/backup/mysql/20210314/db2-20210314.sql.gz</span>
<span># ...</span>
docker <span>exec</span> mysql mysqldump --skip-opt --databases <span>${db}</span> <span>|</span> <span>gzip</span> <span>></span> <span>${dir}</span>/<span>${db}</span>-<span>${date}</span>.sql.gz
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br></div></div><h2 id="cli"> CLI</h2>
<div><pre><code>docker <span>exec</span> -it mysql <span>bash</span>
</code></pre>
<div><span>1</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>钉钉云推送自建RDS最佳实践</title>
      <link>https://blog.fangyueming.cn/ding-cloud-push/</link>
      <guid>https://blog.fangyueming.cn/ding-cloud-push/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">钉钉云推送自建RDS最佳实践</source>
      <pubDate>Mon, 08 Apr 2019 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="钉钉云推送自建rds最佳实践"> 钉钉云推送自建RDS最佳实践</h1>
<p>钉钉云推送常规建设方法请参见<a href="https://open-doc.dingtalk.com/microapp/ln6dmh/ib4xrf" target="_blank" rel="noopener noreferrer">钉钉云推送自建RDS官方文档</a>。</p>
<p>缺陷如下：</p>
<ol>
<li><code>MySQL</code>版本必须为5.6或5.7，若应用使用同一数据库引擎，则无法使用<code>MySQL 8.x</code>的<code>CTE</code>等新特性；</li>
<li>跨服务器触发应用数据库操作很困难，需要应用使用轮询来处理推送数据，浪费资源，时效性差。</li>
</ol>
<p>最佳实践：</p>
<ol>
<li>钉钉云推送数据表使用<code>FEDERATED</code>引擎连接应用数据库对应表；</li>
<li>应用数据库的云推送数据表上建立触发器，同步钉钉云推送数据变更操作。</li>
</ol>
<p>流程如下：</p>
<div><pre><code>+------------+    +-----------------+    +---------------------+    +-------------+
|  DingTalk  |    | Dingtalk RDS    |    | App Database        |    | Data Sync   |
|  Cloud     | =&gt; | [FEDERATED]     | =&gt; | [TABLE]             | =&gt; | [TRIGGER]   |
|  Push      |    | ding_cloud_push |    | dingtalk_cloud_push |    | other table |
+------------+    +-----------------+    +---------------------+    +-------------+
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id="应用数据库"> 应用数据库</h2>
<h3 id="安装mysql8-x"> 安装MySQL8.x</h3>
<p>参见<a href="./mysql-8-install.html">安装MySQL 8.x</a></p>
<h3 id="创建钉钉云推送数据表"> 创建钉钉云推送数据表</h3>
<p>根据钉钉自建RDS文档格式创建钉钉云推送数据表，请留意表可以不同名，不兼容部分有细微改动。</p>
<div><pre><code><span>CREATE</span> <span>TABLE</span> <span>`</span>dingtalk_cloud_push<span>`</span> <span>(</span>
  <span>`</span>id<span>`</span> <span>bigint</span><span>(</span><span>20</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>AUTO_INCREMENT</span> <span>COMMENT</span> <span>'ID'</span><span>,</span>
  <span>`</span>gmt_create<span>`</span> <span>datetime</span> <span>NOT</span> <span>NULL</span> <span>COMMENT</span> <span>'创建时间'</span><span>,</span>
  <span>`</span>gmt_modified<span>`</span> <span>datetime</span> <span>NOT</span> <span>NULL</span> <span>COMMENT</span> <span>'更新时间'</span><span>,</span>
  <span>`</span>subscribe_id<span>`</span> <span>varchar</span><span>(</span><span>64</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>COMMENT</span> <span>'订阅方ID'</span><span>,</span>
  <span>`</span>corp_id<span>`</span> <span>varchar</span><span>(</span><span>64</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>COMMENT</span> <span>'企业ID'</span><span>,</span>
  <span>`</span>biz_id<span>`</span> <span>varchar</span><span>(</span><span>128</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>COMMENT</span> <span>'业务ID'</span><span>,</span>
  <span>`</span>biz_type<span>`</span> <span>int</span><span>(</span><span>11</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>COMMENT</span> <span>'业务类型'</span><span>,</span>
  <span>`</span>biz_data<span>`</span> <span>text</span> <span>NOT</span> <span>NULL</span> <span>COMMENT</span> <span>'业务数据'</span><span>,</span>
  <span>`</span>open_cursor<span>`</span> <span>bigint</span><span>(</span><span>20</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>COMMENT</span> <span>'对账游标'</span><span>,</span>
  <span>`</span><span>status</span><span>`</span> <span>int</span><span>(</span><span>11</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>COMMENT</span> <span>'处理状态0为未处理。其他状态开发者自行定义'</span><span>,</span>
  <span>PRIMARY</span> <span>KEY</span> <span>(</span><span>`</span>id<span>`</span><span>)</span><span>,</span>
  <span>UNIQUE</span> <span>KEY</span> <span>`</span>uk_subscribe_corp_biz<span>`</span> <span>(</span><span>`</span>subscribe_id<span>`</span><span>,</span><span>`</span>corp_id<span>`</span><span>,</span><span>`</span>biz_id<span>`</span><span>,</span><span>`</span>biz_type<span>`</span><span>)</span>
<span>)</span> <span>AUTO_INCREMENT</span><span>=</span><span>0</span> <span>DEFAULT</span> <span>CHARSET</span><span>=</span>utf8mb4 <span>COMMENT</span><span>=</span><span>'钉钉云推送高优先级数据'</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div><h3 id="创建触发器"> 创建触发器</h3>
<p>触发器根据具体需求改为应用需要的内容，此处仅为示例。</p>
<div><pre><code><span>DELIMITER</span> $$
<span>CREATE</span> <span>TRIGGER</span> dingtalk_cloud_push_update
BEFORE <span>INSERT</span> <span>ON</span> dingtalk_cloud_push <span>FOR EACH ROW</span>
<span>BEGIN</span>
  <span>INSERT</span> <span>INTO</span> test <span>(</span>method<span>,</span> <span>data</span><span>)</span> <span>values</span> <span>(</span><span>'insert'</span><span>,</span> new<span>.</span>biz_data<span>)</span><span>;</span>
<span>END</span>$$
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h2 id="钉钉云推送数据库"> 钉钉云推送数据库</h2>
<h3 id="安装mysql5-7"> 安装MySQL5.7</h3>
<p>参见<a href="./mysql-second.html">MySQL多版本共存</a></p>
<h3 id="启用federated"> 启用FEDERATED</h3>
<p>修改<code>MySQL</code>配置文件<code>my.cnf</code>启用<code>FEDERATED</code>引擎后重启<code>MySQL</code>服务。</p>
<div><pre><code><span><span>[</span><span>mysqld</span><span>]</span></span>
federated
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h3 id="创建federated表"> 创建FEDERATED表</h3>
<p>此表被钉钉云推送RDS直接访问，其数据库名称、表名称、字符集、表结构符合钉钉云推送相关格式。</p>
<div><pre><code><span>CREATE</span> <span>DATABASE</span> ding_cloud_push <span>DEFAULT</span> <span>CHARACTER</span> <span>SET</span> utf8mb4 <span>COLLATE</span> utf8mb4_general_ci<span>;</span>
<span>CREATE</span> <span>TABLE</span> <span>`</span>open_sync_biz_data<span>`</span> <span>(</span>
  <span>`</span>id<span>`</span> <span>bigint</span><span>(</span><span>20</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>AUTO_INCREMENT</span> <span>COMMENT</span> <span>'ID'</span><span>,</span>
  <span>`</span>gmt_create<span>`</span> <span>datetime</span> <span>NOT</span> <span>NULL</span> <span>COMMENT</span> <span>'创建时间'</span><span>,</span>
  <span>`</span>gmt_modified<span>`</span> <span>datetime</span> <span>NOT</span> <span>NULL</span> <span>COMMENT</span> <span>'更新时间'</span><span>,</span>
  <span>`</span>subscribe_id<span>`</span> <span>varchar</span><span>(</span><span>64</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>COMMENT</span> <span>'订阅方ID'</span><span>,</span>
  <span>`</span>corp_id<span>`</span> <span>varchar</span><span>(</span><span>64</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>COMMENT</span> <span>'企业ID'</span><span>,</span>
  <span>`</span>biz_id<span>`</span> <span>varchar</span><span>(</span><span>128</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>COMMENT</span> <span>'业务ID'</span><span>,</span>
  <span>`</span>biz_type<span>`</span> <span>int</span><span>(</span><span>11</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>COMMENT</span> <span>'业务类型'</span><span>,</span>
  <span>`</span>biz_data<span>`</span> <span>text</span> <span>NOT</span> <span>NULL</span> <span>COMMENT</span> <span>'业务数据'</span><span>,</span>
  <span>`</span>open_cursor<span>`</span> <span>bigint</span><span>(</span><span>20</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>COMMENT</span> <span>'对账游标'</span><span>,</span>
  <span>`</span><span>status</span><span>`</span> <span>int</span><span>(</span><span>11</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>COMMENT</span> <span>'处理状态0为未处理。其他状态开发者自行定义'</span><span>,</span>
  <span>PRIMARY</span> <span>KEY</span> <span>(</span><span>`</span>id<span>`</span><span>)</span><span>,</span>
  <span>UNIQUE</span> <span>KEY</span> <span>`</span>uk_subscribe_corp_biz<span>`</span> <span>(</span><span>`</span>subscribe_id<span>`</span><span>,</span><span>`</span>corp_id<span>`</span><span>,</span><span>`</span>biz_id<span>`</span><span>,</span><span>`</span>biz_type<span>`</span><span>)</span>
<span>)</span> <span>ENGINE</span><span>=</span>FEDERATED <span>AUTO_INCREMENT</span><span>=</span><span>0</span> <span>DEFAULT</span> <span>CHARSET</span><span>=</span>utf8mb4 <span>COMMENT</span><span>=</span><span>'高优先级数据'</span>
CONNECTION<span>=</span><span>'mysql://user:password@localhost:3306/appdb/dingtalk_cloud_push'</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Docker Portianer</title>
      <link>https://blog.fangyueming.cn/docker-portianer/</link>
      <guid>https://blog.fangyueming.cn/docker-portianer/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">Docker Portianer</source>
      <pubDate>Thu, 18 Jun 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="docker-portianer"> Docker Portianer</h1>
<h2 id="安装"> 安装</h2>
<div><pre><code><span>#!/bin/bash</span>
<span>#Author: Yueming Fang</span>

docker volume create portainer_data

docker run -d -p <span>9000</span>:9000 --name<span>=</span>portainer --restart<span>=</span>always <span>\</span>
-v /var/run/docker.sock:/var/run/docker.sock <span>\</span>
-v portainer_data:/data <span>\</span>
portainer/portainer-ce
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><h2 id="更新"> 更新</h2>
<div><pre><code>docker container update protainer
</code></pre>
<div><span>1</span><br></div></div><h2 id="修改端口"> 修改端口</h2>
<p>请避开常用端口，比如如Apache的FastCGI使用9000端口，若被占用，请指定参数重新安装。
或修改配置：</p>
<div><pre><code>docker stop portainer-container-id <span># 停止容器</span>
systemctl stop docker <span># 停止Docker服务</span>
<span>vim</span> /var/lib/docker/containers/portainer-container-id/hostconfig.json <span># 修改并保存</span>
<span>vim</span> /var/lib/docker/containers/portainer-container-id/config.v2.json <span># 修改并保存</span>
systemctl start docker <span># 启动Docker服务</span>
docker start portainer-container-id <span># 启动容器</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>比如：<code>HostPort</code>从<code>9000</code>改为<code>9900</code></p>
<h3 id="hostconfig-json"> hostconfig.json</h3>
<div><pre><code><span>{</span>
  <span>"PortBindings"</span><span>:</span>  <span>{</span>
    <span>"9000/tcp"</span><span>:</span><span>[</span><span>{</span>
      <span>"HostIp"</span><span>:</span><span>""</span><span>,</span>
      <span>"HostPort"</span><span>:</span><span>"9900"</span>
    <span>}</span><span>]</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id="config-v2-json"> config.v2.json</h3>
<div><pre><code><span>{</span>
  <span>"Ports"</span><span>:</span> <span>{</span>
    <span>"9000/tcp"</span><span>:</span> <span>[</span><span>{</span>
      <span>"HostIp"</span><span>:</span> <span>"0.0.0.0"</span><span>,</span>
      <span>"HostPort"</span><span>:</span> <span>"9900"</span>
    <span>}</span><span>]</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h2 id="后记"> 后记</h2>
<p>鉴于 <a href="https://www.portainer.io/" target="_blank" rel="noopener noreferrer">portainer</a> 更新频率相当高，欢迎访问官网，获得正确打开方式。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Egg.js实现OAuth2授权码方式鉴权</title>
      <link>https://blog.fangyueming.cn/egg-oauth/</link>
      <guid>https://blog.fangyueming.cn/egg-oauth/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">Egg.js实现OAuth2授权码方式鉴权</source>
      <pubDate>Tue, 07 Jan 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="egg-js实现oauth2授权码方式鉴权"> Egg.js实现OAuth2授权码方式鉴权</h1>
<p>OAuth2为<a href="https://baike.baidu.com/item/4A/1825" target="_blank" rel="noopener noreferrer">统一安全管理平台解决方案</a>（4A）中的<strong>认证</strong>环节解决方案。</p>
<table>
<thead>
<tr>
<th>英文名称</th>
<th>名称</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>Accounting</td>
<td>账号</td>
<td>唯一身份</td>
</tr>
<tr>
<td>Authentication</td>
<td>认证</td>
<td>你是谁？</td>
</tr>
<tr>
<td>Authorization</td>
<td>授权</td>
<td>你能干什么？</td>
</tr>
<tr>
<td>Audit</td>
<td>审计</td>
<td>你干了什么？</td>
</tr>
</tbody>
</table>
<blockquote>
<p>流程</p>
</blockquote>
<Mermaid id="mermaid-382ee201" data-code="graph%20LR%0Aclient((%E5%AE%A2%E6%88%B7%E7%AB%AF))%0Aoauth((%E6%8E%88%E6%9D%83%E7%AB%AF))%0Aresource((%E8%B5%84%E6%BA%90%E7%AB%AF))%0Aclient%20--%3E%20%20%20%7C1.%E5%B8%A6%E5%8F%82%E8%B7%B3%E8%BD%AC%E8%AF%B7%E6%B1%82%E6%8E%88%E6%9D%83%7C%20oauth%0Aoauth%20--%3E%20%20%20%20%7C2.%E8%8E%B7%E5%8F%96%E6%8E%88%E6%9D%83%E7%94%A8%E6%88%B7%7C%20resource%0Aresource%20--%3E%20%7C3.%E8%BF%94%E5%9B%9E%E6%8E%88%E6%9D%83%E7%94%A8%E6%88%B7%7C%20oauth%0Aoauth%20--%3E%20%20%20%20%7C4.%E6%90%BA%E5%B8%A6%E6%8E%88%E6%9D%83%E7%A0%81%E9%87%8D%E5%AE%9A%E5%90%91%E8%87%B3%7C%20client%0Aclient%20--%3E%20%20%20%7C5.%E5%B8%A6%E6%8E%88%E6%9D%83%E7%A0%81%E5%92%8C%E5%BF%85%E8%A6%81%E5%8F%82%E6%95%B0%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C%7C%20oauth%0Aoauth%20--%3E%20%20%20%20%7C6.%E8%BF%94%E5%9B%9E%E4%BB%A4%E7%89%8C%7C%20client%0Aclient%20--%3E%20%20%20%7C7.%E6%90%BA%E5%B8%A6%E4%BB%A4%E7%89%8C%E8%AE%BF%E9%97%AE%7C%20oauth%0Aoauth%20--%3E%20%20%20%20%7C8.%E6%A0%A1%E9%AA%8C%E4%BB%A4%E7%89%8C%7C%20resource%0Aresource%20--%3E%20%7C9.%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE%7C%20client%0A"></Mermaid><blockquote>
<p>服务</p>
</blockquote>
<table>
<thead>
<tr>
<th>项目</th>
<th>地址</th>
<th>实现</th>
</tr>
</thead>
<tbody>
<tr>
<td>数据端</td>
<td>http://localhost:3000</td>
<td><a href="https://github.com/typicode/json-server" target="_blank" rel="noopener noreferrer">json-server</a></td>
</tr>
<tr>
<td>资源端</td>
<td>http://127.0.0.1:7001</td>
<td>Egg.js，资源端与授权端共用为应用端</td>
</tr>
<tr>
<td>授权端</td>
<td>http://127.0.0.1:7001</td>
<td>Egg.js，资源端与授权端共用为应用端</td>
</tr>
<tr>
<td>客户端</td>
<td>http://127.0.0.1:8080</td>
<td>Vue.js</td>
</tr>
</tbody>
</table>
<blockquote>
<p>目录</p>
</blockquote>
<div><pre><code>|-- config                              # 配置
|   |-- config.default.js               #   应用配置
|   `-- plugin.js                       #   插件配置
|-- app                                 # 应用
|   |-- controller                      #   控制器
|   |   `-- auth                        #     鉴权
|   |       |-- code.js                 #       授权码
|   |       `-- token.js                #       令牌
|   |-- middleware                      #   中间件
|   |   `-- auth.js                     #     鉴权中间件
|   `-- router.js                       #   路由
|-- lib                                 # 第三方库
|   `-- plugin                          #   插件
|       `-- oauth                       #     OAuth2Server插件
|           |-- app.js                  #       插件应用
|           |-- config                  #       插件配置
|           |   `-- config.default.js   #         插件默认配置
|           `-- lib                     #       功能库
|               `-- oauth.js            #         功能实现
`-- mock                                # 模拟
    `-- oauth                           #   OAuth模拟实现
        |-- model.js                    #     OAuth2Server Model Specification
        |-- db                          #     数据服务（json-server）
        |   `-- oauth.json              #       数据
        `-- www                         #     客户端
            |-- login.html              #       跳转请求授权码
            `-- redirect.html           #       携带授权码重定向
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div><h2 id="数据"> 数据</h2>
<p>安装<a href="https://github.com/typicode/json-server" target="_blank" rel="noopener noreferrer">json-server</a>并启动数据服务。</p>
<h3 id="服务"> 服务</h3>
<div><pre><code><span>yarn</span> global <span>add</span> json-server
<span>cd</span> mock/oauth/db
json-server --watch oauth.json <span># 数据模型文件</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h3 id="模型"> 模型</h3>
<table>
<thead>
<tr>
<th>模型</th>
<th>说明</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>users</td>
<td>授权用户</td>
<td>需结合资源端</td>
</tr>
<tr>
<td>clients</td>
<td>授权客户端</td>
<td>需结合资源端</td>
</tr>
<tr>
<td>tokens</td>
<td>令牌</td>
<td>授权端发放和校验</td>
</tr>
<tr>
<td>codes</td>
<td>授权码</td>
<td>授权端</td>
</tr>
</tbody>
</table>
<Mermaid id="mermaid-64a56918" data-code="classDiagram%0A%0Atokens%20%22n%22%20--%3E%20%221%22%20clients%0Atokens%20%22n%22%20--%3E%20%221%22%20users%0Atokens%20%220..1%22%20--%3E%20%221%22%20codes%0Acodes%20%22n%22%20--%3E%20%221%22%20clients%0Acodes%20%22n%22%20--%3E%20%221%22%20users%0A%0Aclass%20users%20%7B%0A%20%20%2B%20id%0A%20%20%2B%20username%0A%20%20%2B%20password%0A%7D%0A%0Aclass%20clients%20%7B%0A%20%20%2B%20id%0A%20%20%2B%20secret%0A%20%20%2B%20grants%0A%20%20%2B%20redirectUris%0A%7D%0A%0Aclass%20tokens%20%7B%0A%20%20%2B%20id%0A%20%20%2B%20accessToken%0A%20%20%2B%20authorizationCode%0A%20%20%2B%20accessTokenExpiresAt%0A%20%20%2B%20refreshToken%0A%20%20%2B%20refreshTokenExpiresAt%0A%20%20%2B%20codeId%0A%20%20%2B%20userId%0A%20%20%2B%20clientId%0A%20%20%2B%20scope%0A%7D%0A%0Aclass%20codes%20%7B%0A%20%20%2B%20id%0A%20%20%2B%20authorizationCode%0A%20%20%2B%20redirectUri%0A%20%20%2B%20scope%0A%20%20%2B%20state%0A%20%20%2B%20userId%0A%20%20%2B%20clientId%0A%7D%0A"></Mermaid><blockquote>
<p>mock/oauth/db/oauth.json</p>
</blockquote>
<div><pre><code><span>{</span>
  <span>"clients"</span><span>:</span> <span>[</span><span>{</span>
    <span>"id"</span><span>:</span> <span>1</span><span>,</span>
    <span>"secret"</span><span>:</span> <span>"secret"</span><span>,</span>
    <span>"grants"</span><span>:</span> <span>[</span> <span>"authorization_code"</span> <span>]</span><span>,</span>
    <span>"redirectUris"</span><span>:</span> <span>[</span> <span>"http://127.0.0.1:8080/#/redirect"</span> <span>]</span><span>,</span>
    <span>"name"</span><span>:</span> <span>"client01"</span><span>,</span>
    <span>"logo"</span><span>:</span> <span>"http://127.0.0.1:8080/logo.png"</span><span>,</span>
    <span>"homepage"</span><span>:</span> <span>"http://127.0.0.1:8080"</span>
  <span>}</span><span>]</span><span>,</span>
  <span>"users"</span><span>:</span> <span>[</span><span>{</span>
    <span>"id"</span><span>:</span> <span>1</span><span>,</span>
    <span>"username"</span><span>:</span> <span>"user01"</span><span>,</span>
    <span>"password"</span><span>:</span> <span>"123456"</span>
  <span>}</span><span>]</span><span>,</span>
  <span>"tokens"</span><span>:</span> <span>[</span><span>{</span>
    <span>"accessToken"</span><span>:</span> <span>"4135e5ea8024023414f550305c941869960c9c87"</span><span>,</span>
    <span>"authorizationCode"</span><span>:</span> <span>"fb9d497f90eea632f308e016889715bad5671b0a"</span><span>,</span>
    <span>"accessTokenExpiresAt"</span><span>:</span> <span>"2020-01-07T13:59:58.601Z"</span><span>,</span>
    <span>"refreshToken"</span><span>:</span> <span>"df9824dbb371e6eb2e82b13c41fdc54a5c4c8bc8"</span><span>,</span>
    <span>"refreshTokenExpiresAt"</span><span>:</span> <span>"2020-01-21T11:59:58.601Z"</span><span>,</span>
    <span>"scope"</span><span>:</span> <span>[</span> <span>"read"</span><span>,</span> <span>"write"</span> <span>]</span><span>,</span>
    <span>"userId"</span><span>:</span> <span>"1"</span><span>,</span>
    <span>"clientId"</span><span>:</span> <span>"1"</span><span>,</span>
    <span>"id"</span><span>:</span> <span>1</span>
  <span>}</span><span>]</span><span>,</span>
  <span>"codes"</span><span>:</span> <span>[</span><span>{</span>
    <span>"authorizationCode"</span><span>:</span> <span>"fb9d497f90eea632f308e016889715bad5671b0a"</span><span>,</span>
    <span>"expiresAt"</span><span>:</span> <span>"2020-01-07T12:04:57.394Z"</span><span>,</span>
    <span>"redirectUri"</span><span>:</span> <span>"http://127.0.0.1:8080/#/redirect"</span><span>,</span>
    <span>"scope"</span><span>:</span> <span>""</span><span>,</span>
    <span>"userId"</span><span>:</span> <span>"1"</span><span>,</span>
    <span>"clientId"</span><span>:</span> <span>"1"</span><span>,</span>
    <span>"id"</span><span>:</span> <span>"1"</span>
  <span>}</span><span>]</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br></div></div><h2 id="插件"> 插件</h2>
<p>安装并配置<code>OAuth2 Server</code>，将其实现为应用插件，并实现需自行实现的<a href="https://oauth2-server.readthedocs.io/en/latest/model/overview.html" target="_blank" rel="noopener noreferrer">OAuth2Server model</a>。</p>
<h3 id="创建"> 创建</h3>
<div><pre><code><span>mkdir</span> lib/plugin/egg-oauth <span>&amp;&amp;</span> <span>cd</span> lib/plugin/egg-oauth
<span>npm</span> init egg --type<span>=</span>plugin
<span>npm</span> <span>install</span>
<span>npm</span> <span>install</span> oauth2-server --save <span># 注意：不是node-oauth2-server</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="配置"> 配置</h3>
<div><pre><code><span>// lib/plugin/egg-oauth/config/config.default.js</span>
exports<span>.</span>oauth <span>=</span> <span>{</span>
  <span>default</span><span>:</span> <span>{</span>
    allowBearerTokensInQueryString<span>:</span> <span>true</span><span>,</span>
    model<span>:</span> <span>'./app/extend/oauth'</span><span>,</span> <span>// relative path from app.baseDir</span>
  <span>}</span><span>,</span>
  client<span>:</span> <span>{</span><span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id="功能"> 功能</h3>
<div><pre><code><span>// lib/plugin/egg-oauth/lib/oauth.js</span>
<span>const</span> path <span>=</span> <span>require</span><span>(</span><span>'path'</span><span>)</span><span>;</span>
<span>const</span> OAuth2Server <span>=</span> <span>require</span><span>(</span><span>'oauth2-server'</span><span>)</span><span>;</span>
<span>class</span> <span>OAuth</span> <span>{</span>
  <span>constructor</span><span>(</span><span>options<span>,</span> app</span><span>)</span> <span>{</span>
    <span>this</span><span>.</span>app <span>=</span> app<span>;</span>
    <span>this</span><span>.</span>options <span>=</span> options<span>;</span>
    <span>this</span><span>.</span>OAuth2Server <span>=</span> OAuth2Server<span>;</span>
    <span>const</span> serverOptions <span>=</span> <span>{</span> <span>...</span>options <span>}</span><span>;</span>
    <span>if</span> <span>(</span><span>typeof</span> options<span>.</span>model <span>===</span> <span>'string'</span><span>)</span> <span>{</span>
      <span>const</span> model <span>=</span> <span>require</span><span>(</span>path<span>.</span><span>join</span><span>(</span>app<span>.</span>baseDir<span>,</span> options<span>.</span>model<span>)</span><span>)</span><span>(</span>options<span>,</span> app<span>)</span><span>;</span>
      Object<span>.</span><span>assign</span><span>(</span>serverOptions<span>,</span> <span>{</span> model <span>}</span><span>)</span><span>;</span>
    <span>}</span>
    <span>this</span><span>.</span>server <span>=</span> <span>new</span> <span>OAuth2Server</span><span>(</span>serverOptions<span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
module<span>.</span>exports <span>=</span> OAuth<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><h3 id="实现"> 实现</h3>
<div><pre><code><span>// lib/plugin/egg-oauth/app.js</span>
<span>const</span> OAuth <span>=</span> <span>require</span><span>(</span><span>'./lib/oauth'</span><span>)</span><span>;</span>
<span>const</span> <span>createOauth</span> <span>=</span> <span>(</span><span>options<span>,</span> app</span><span>)</span> <span>=></span> <span>{</span>
  <span>const</span> oauth <span>=</span> <span>new</span> <span>OAuth</span><span>(</span>options<span>,</span> app<span>)</span><span>;</span>
  <span>return</span> oauth<span>;</span>
<span>}</span><span>;</span>
module<span>.</span><span>exports</span> <span>=</span> <span>app</span> <span>=></span> <span>{</span>
  app<span>.</span><span>addSingleton</span><span>(</span><span>'oauth'</span><span>,</span> createOauth<span>)</span><span>;</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><h2 id="应用"> 应用</h2>
<p>OAuth插件配置和授权码获取页视图配置。</p>
<h3 id="配置-2"> 配置</h3>
<p>启用插件、中间件，并根据应用需要对其配置，可覆盖默认配置，比<code>model</code>。</p>
<div><pre><code><span>// app/config/plugin.js</span>
module<span>.</span>exprots <span>=</span> <span>{</span>
  handlebars<span>:</span> <span>{</span>
    enable<span>:</span> <span>true</span><span>,</span>
    <span>package</span><span>:</span> <span>'egg-view-handlebars'</span><span>,</span>
  <span>}</span><span>,</span>
  oauth<span>:</span> <span>{</span>
    enable<span>:</span> <span>true</span><span>,</span>
    path<span>:</span> path<span>.</span><span>join</span><span>(</span>__dirname<span>,</span> <span>'../lib/plugin/egg-oauth'</span><span>)</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>// app/config/config.default.js</span>
config<span>.</span>view <span>=</span> <span>{</span>
  defaultViewEngine<span>:</span> <span>'handlebars'</span><span>,</span>
  defaultExtension<span>:</span> <span>'.hbs'</span><span>,</span>
  mapping<span>:</span> <span>{</span>
    <span>'.hbs'</span><span>:</span> <span>'handlebars'</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>,</span>
config<span>.</span>oauth <span>=</span> <span>{</span>
  client<span>:</span> <span>{</span>
    model<span>:</span> <span>'./mock/oauth/model'</span><span>,</span>
    requireClientAuthentication<span>:</span> <span>{</span> password<span>:</span> <span>false</span> <span>}</span><span>,</span>
    accessTokenLifetime<span>:</span> <span>7200</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
config<span>.</span>auth <span>=</span> <span>{</span>
  ignore<span>:</span> <span>[</span> <span>'/auth/login'</span><span>,</span> <span>'/auth/code'</span><span>,</span> <span>'/auth/token'</span> <span>]</span><span>,</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><h3 id="oauth2-server-model-specification"> OAuth2 Server Model Specification</h3>
<p>实现OAuth2 Server指定的Model。</p>
<div><pre><code><span>// mock/oauth/model.js</span>
<span>const</span> url <span>=</span> <span>'http://localhost:3000'</span><span>;</span> <span>// json-server --watch db/oauth.json</span>

<span>class</span> <span>Model</span> <span>{</span>
  <span>constructor</span><span>(</span><span>options<span>,</span> app</span><span>)</span> <span>{</span>
    <span>this</span><span>.</span>options <span>=</span> options<span>;</span>
    <span>this</span><span>.</span>app <span>=</span> app<span>;</span>
  <span>}</span>

  <span>async</span> <span>getClient</span><span>(</span><span>clientId<span>,</span> clientSecret</span><span>)</span> <span>{</span>
    <span>const</span> <span>{</span> app <span>}</span> <span>=</span> <span>this</span><span>;</span>
    <span>const</span> <span>{</span> data<span>:</span> clients <span>}</span> <span>=</span> <span>await</span> app<span>.</span><span>curl</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span>/clients</span><span>`</span></span><span>,</span> <span>{</span>
      data<span>:</span> <span>{</span> id<span>:</span> clientId <span>}</span><span>,</span>
      dataType<span>:</span> <span>'json'</span><span>,</span>
    <span>}</span><span>)</span><span>;</span>
    <span>if</span> <span>(</span><span>!</span>clients<span>.</span>length<span>)</span> <span>return</span><span>;</span>
    <span>const</span> client <span>=</span> clients<span>[</span><span>0</span><span>]</span><span>;</span>
    <span>if</span> <span>(</span><span>!</span>client <span>||</span> <span>(</span>clientSecret <span>&amp;&amp;</span> client<span>.</span>secret <span>!==</span> clientSecret<span>)</span><span>)</span> <span>return</span><span>;</span>
    <span>return</span> client<span>;</span>
  <span>}</span>

  <span>async</span> <span>saveAuthorizationCode</span><span>(</span><span>code<span>,</span> client<span>,</span> user</span><span>)</span> <span>{</span>
    <span>const</span> <span>{</span> app <span>}</span> <span>=</span> <span>this</span><span>;</span>
    <span>// 务必将数据库格式化匹配数据模型后再存储</span>
    <span>const</span> data <span>=</span> <span>{</span>
      <span>...</span>code<span>,</span>
      expiresAt<span>:</span> code<span>.</span>expiresAt<span>.</span><span>toISOString</span><span>(</span><span>)</span><span>,</span>
      userId<span>:</span> user<span>.</span>id<span>,</span>
      clientId<span>:</span> client<span>.</span>id<span>,</span>
    <span>}</span><span>;</span>
    <span>await</span> app<span>.</span><span>curl</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span>/codes</span><span>`</span></span><span>,</span> <span>{</span> method<span>:</span> <span>'POST'</span><span>,</span> data<span>,</span> dataType<span>:</span> <span>'json'</span> <span>}</span><span>)</span><span>;</span>
    <span>return</span> code<span>;</span>
  <span>}</span>

  <span>async</span> <span>getAuthorizationCode</span><span>(</span><span>authorizationCode</span><span>)</span> <span>{</span>
    <span>const</span> <span>{</span> app <span>}</span> <span>=</span> <span>this</span><span>;</span>
    <span>// 以`authorizationCode`查询授权码`code`，关联用户`user`和客户端`client`返回</span>
    <span>const</span> <span>{</span> data<span>:</span> codes <span>}</span> <span>=</span> <span>await</span> app<span>.</span><span>curl</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span>/codes</span><span>`</span></span><span>,</span> <span>{</span>
      data<span>:</span> <span>{</span> authorizationCode<span>,</span> _expand<span>:</span> <span>[</span> <span>'user'</span><span>,</span> <span>'client'</span> <span>]</span> <span>}</span><span>,</span>
      dataType<span>:</span> <span>'json'</span><span>,</span>
    <span>}</span><span>)</span><span>;</span>
    <span>if</span> <span>(</span><span>!</span>codes<span>.</span>length<span>)</span> <span>return</span><span>;</span>
    <span>const</span> code <span>=</span> <span>{</span> <span>...</span>codes<span>[</span><span>0</span><span>]</span><span>,</span> expiresAt<span>:</span> <span>new</span> <span>Date</span><span>(</span>codes<span>[</span><span>0</span><span>]</span><span>.</span>expiresAt<span>)</span> <span>}</span><span>;</span>
    <span>return</span> code<span>;</span>
  <span>}</span>

  <span>async</span> <span>revokeAuthorizationCode</span><span>(</span><span>code</span><span>)</span> <span>{</span>
    <span>const</span> <span>{</span> app <span>}</span> <span>=</span> <span>this</span><span>;</span>
    <span>const</span> <span>{</span> authorizationCode <span>}</span> <span>=</span> code<span>;</span>
    <span>const</span> <span>{</span> data<span>:</span> codes <span>}</span> <span>=</span> <span>await</span> app<span>.</span><span>curl</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span>/codes</span><span>`</span></span><span>,</span> <span>{</span>
      data<span>:</span> <span>{</span> authorizationCode <span>}</span><span>,</span>
      dataType<span>:</span> <span>'json'</span><span>,</span>
    <span>}</span><span>)</span><span>;</span>
    <span>if</span> <span>(</span><span>!</span>codes<span>.</span>length<span>)</span> <span>return</span> <span>true</span><span>;</span>
    <span>const</span> res <span>=</span> <span>await</span> app<span>.</span><span>curl</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span>/codes/</span><span><span>${</span>codes<span>[</span><span>0</span><span>]</span><span>.</span>id<span>}</span></span><span>`</span></span><span>,</span> <span>{</span> method<span>:</span> <span>'DELETE'</span><span>,</span> dataType<span>:</span> <span>'json'</span> <span>}</span><span>)</span><span>;</span>
    <span>if</span> <span>(</span>res<span>.</span>status <span>===</span> <span>200</span><span>)</span> <span>return</span> <span>true</span><span>;</span>
    <span>return</span> res<span>;</span>
  <span>}</span>

  <span>async</span> <span>validateScope</span><span>(</span><span>user<span>,</span> client<span>,</span> scope</span><span>)</span> <span>{</span>
    <span>const</span> <span>{</span> app <span>}</span> <span>=</span> <span>this</span><span>;</span>
    <span>if</span> <span>(</span><span>!</span>scope<span>)</span> <span>return</span> client<span>.</span>scopes<span>;</span>
    <span>return</span> scope<span>.</span><span>split</span><span>(</span><span>','</span><span>)</span><span>.</span><span>filter</span><span>(</span><span>s</span> <span>=></span> client<span>.</span>scopes<span>.</span><span>includes</span><span>(</span>s<span>)</span><span>)</span><span>;</span>
  <span>}</span>

  <span>async</span> <span>saveToken</span><span>(</span><span>token<span>,</span> client<span>,</span> user</span><span>)</span> <span>{</span>
    <span>const</span> <span>{</span> app <span>}</span> <span>=</span> <span>this</span><span>;</span>
    <span>// 务必将数据库格式化匹配数据模型后再存储，实际应用需要验证client、user，此处省略</span>
    <span>const</span> data <span>=</span> <span>{</span>
      <span>...</span>token<span>,</span>
      accessTokenExpiresAt<span>:</span> token<span>.</span>accessTokenExpiresAt<span>.</span><span>toISOString</span><span>(</span><span>)</span><span>,</span>
      refreshTokenExpiresAt<span>:</span> token<span>.</span>refreshTokenExpiresAt<span>.</span><span>toISOString</span><span>(</span><span>)</span><span>,</span>
      userId<span>:</span> user<span>.</span>id<span>,</span>
      clientId<span>:</span> client<span>.</span>id<span>,</span>
    <span>}</span><span>;</span>
    <span>await</span> app<span>.</span><span>curl</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span>/tokens</span><span>`</span></span><span>,</span> <span>{</span> method<span>:</span> <span>'POST'</span><span>,</span> data<span>,</span> dataType<span>:</span> <span>'json'</span> <span>}</span><span>)</span><span>;</span>
    <span>return</span> <span>{</span> <span>...</span>token<span>,</span> client<span>,</span> user <span>}</span><span>;</span>
  <span>}</span>

  <span>async</span> <span>getAccessToken</span><span>(</span><span>accessToken</span><span>)</span> <span>{</span>
    <span>const</span> <span>{</span> app <span>}</span> <span>=</span> <span>this</span><span>;</span>
    <span>// 以`authorizationCode`查询授权码`code`，关联用户`user`和客户端`client`返回</span>
    <span>const</span> <span>{</span> data<span>:</span> tokens <span>}</span> <span>=</span> <span>await</span> app<span>.</span><span>curl</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span>/tokens</span><span>`</span></span><span>,</span> <span>{</span>
      data<span>:</span> <span>{</span> accessToken<span>,</span> _expand<span>:</span> <span>[</span> <span>'user'</span><span>,</span> <span>'client'</span> <span>]</span> <span>}</span><span>,</span>
      dataType<span>:</span> <span>'json'</span><span>,</span>
    <span>}</span><span>)</span><span>;</span>
    <span>if</span> <span>(</span><span>!</span>tokens<span>.</span>length<span>)</span> <span>return</span><span>;</span>
    <span>const</span> token <span>=</span> <span>{</span>
      <span>...</span>tokens<span>[</span><span>0</span><span>]</span><span>,</span>
      accessTokenExpiresAt<span>:</span> <span>new</span> <span>Date</span><span>(</span>tokens<span>[</span><span>0</span><span>]</span><span>.</span>accessTokenExpiresAt<span>)</span><span>,</span>
      refreshTokenExpiresAt<span>:</span> <span>new</span> <span>Date</span><span>(</span>tokens<span>[</span><span>0</span><span>]</span><span>.</span>refreshTokenExpiresAt<span>)</span><span>,</span>
    <span>}</span><span>;</span>
    <span>return</span> token<span>;</span>
  <span>}</span>

<span>}</span>

module<span>.</span><span>exports</span> <span>=</span> <span>(</span><span>options<span>,</span> app</span><span>)</span> <span>=></span> <span>new</span> <span>Model</span><span>(</span>options<span>,</span> app<span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br><span>84</span><br><span>85</span><br><span>86</span><br><span>87</span><br><span>88</span><br><span>89</span><br><span>90</span><br><span>91</span><br><span>92</span><br><span>93</span><br><span>94</span><br><span>95</span><br><span>96</span><br><span>97</span><br><span>98</span><br></div></div><h3 id="路由"> 路由</h3>
<p>定义授权码、令牌和授权用户信息路由。</p>
<div><pre><code><span>// app/router.js</span>
router<span>.</span><span>resources</span><span>(</span><span>'/auth/code'</span><span>,</span> controller<span>.</span>auth<span>.</span>code<span>)</span><span>;</span>
router<span>.</span><span>resources</span><span>(</span><span>'/auth/token'</span><span>,</span> controller<span>.</span>auth<span>.</span>token<span>)</span><span>;</span>
router<span>.</span><span>resources</span><span>(</span><span>'/auth/user'</span><span>,</span> controller<span>.</span>auth<span>.</span>user<span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="鉴权中间件"> 鉴权中间件</h3>
<p>可以简单的理解为验证请求携带的令牌是否正确，正确则通过，否则返回401错误。</p>
<div><pre><code><span>// app/middleware/auth.js</span>
module<span>.</span><span>exports</span> <span>=</span> <span>config</span> <span>=></span> <span>{</span>
  <span>return</span> <span>async</span> <span>(</span><span>ctx<span>,</span> next</span><span>)</span> <span>=></span> <span>{</span>
    <span>const</span> <span>{</span> oauth <span>}</span> <span>=</span> ctx<span>.</span>app<span>;</span>
    <span>const</span> <span>{</span> Request<span>,</span> Response <span>}</span> <span>=</span> oauth<span>.</span>OAuth2Server<span>;</span>
    <span>const</span> request <span>=</span> <span>new</span> <span>Request</span><span>(</span>ctx<span>.</span>request<span>)</span><span>;</span>
    <span>const</span> response <span>=</span> <span>new</span> <span>Response</span><span>(</span><span>{</span> headers<span>:</span> <span>{</span><span>}</span> <span>}</span><span>)</span><span>;</span>
    <span>const</span> authenticate <span>=</span> <span>await</span> oauth<span>.</span>server<span>.</span><span>authenticate</span><span>(</span>request<span>,</span> response<span>)</span><span>;</span>
    ctx<span>.</span>state<span>.</span>auth <span>=</span> authenticate<span>;</span>
    ctx<span>.</span>logger<span>.</span><span>info</span><span>(</span>config<span>)</span><span>;</span>
    <span>await</span> <span>next</span><span>(</span><span>)</span><span>;</span>
  <span>}</span><span>;</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><h3 id="授权码控制器"> 授权码控制器</h3>
<p><code>Authorization Code Grants</code>必须实现<code>authenticateHandler</code>，获取授权用户详情。
有多种实现方式，比如可以以资源端<code>Session</code>和<code>Cookie</code>方式实现免登获取。</p>
<p><img src="./oauth2.png" alt="oauth2" /></p>
<div><pre><code><span>// app/controller/auth/code.js</span>
<span>'use strict'</span><span>;</span>

<span>const</span> url <span>=</span> <span>'http://localhost:3000'</span><span>;</span>
<span>const</span> Controller <span>=</span> <span>require</span><span>(</span><span>'egg'</span><span>)</span><span>.</span>Controller<span>;</span>

<span>class</span> <span>CodeController</span> <span>extends</span> <span>Controller</span> <span>{</span>
  <span>async</span> <span>index</span><span>(</span><span>)</span> <span>{</span>
    <span>const</span> <span>{</span> app<span>,</span> ctx <span>}</span> <span>=</span> <span>this</span><span>;</span>
    <span>const</span> <span>{</span> querystring<span>,</span> query <span>}</span> <span>=</span> ctx<span>.</span>request<span>;</span>
    <span>// 从请求获取客户端详情，展示并提供允许和拒绝按钮供用户选择</span>
    <span>const</span> <span>{</span> data<span>:</span> clients <span>}</span> <span>=</span> <span>await</span> app<span>.</span><span>curl</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span>/clients</span><span>`</span></span><span>,</span> <span>{</span>
      data<span>:</span> <span>{</span> id<span>:</span> query<span>.</span>client_id <span>}</span><span>,</span>
      dataType<span>:</span> <span>'json'</span><span>,</span>
    <span>}</span><span>)</span><span>;</span>
    <span>if</span> <span>(</span><span>!</span>clients<span>.</span>length<span>)</span> <span>{</span> ctx<span>.</span>status <span>=</span> <span>403</span><span>;</span> <span>return</span><span>;</span> <span>}</span>
    <span>const</span> client <span>=</span> clients<span>[</span><span>0</span><span>]</span><span>;</span>
    <span>await</span> ctx<span>.</span><span>render</span><span>(</span><span>'auth/code/index.hbs'</span><span>,</span> <span>{</span> querystring<span>,</span> client <span>}</span><span>)</span><span>;</span>
  <span>}</span>

  <span>async</span> <span>create</span><span>(</span><span>)</span> <span>{</span>
    <span>const</span> <span>{</span> app<span>,</span> ctx <span>}</span> <span>=</span> <span>this</span><span>;</span>
    <span>const</span> <span>{</span> query <span>}</span> <span>=</span> ctx<span>.</span>request<span>;</span>
    <span>const</span> <span>{</span> oauth <span>}</span> <span>=</span> app<span>;</span>
    <span>const</span> request <span>=</span> <span>new</span> <span>oauth<span>.</span>OAuth2Server<span>.</span>Request</span><span>(</span>ctx<span>.</span>request<span>)</span><span>;</span>
    <span>const</span> response <span>=</span> <span>new</span> <span>oauth<span>.</span>OAuth2Server<span>.</span>Response</span><span>(</span><span>{</span> headers<span>:</span> <span>{</span><span>}</span> <span>}</span><span>)</span><span>;</span>
    <span>// 参数：用户名、密码（登录表单），返回：授权用户详情（user对象）</span>
    <span>const</span> authenticateHandler <span>=</span> <span>{</span>
      <span>async</span> <span>handle</span><span>(</span><span>req</span><span>)</span> <span>{</span>
        <span>const</span> <span>{</span> username<span>,</span> password <span>}</span> <span>=</span> req<span>.</span>body<span>;</span>
        <span>const</span> <span>{</span> data<span>:</span> users <span>}</span> <span>=</span> <span>await</span> app<span>.</span><span>curl</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span>/users</span><span>`</span></span><span>,</span> <span>{</span>
          data<span>:</span> <span>{</span> username <span>}</span><span>,</span>
          dataType<span>:</span> <span>'json'</span><span>,</span>
        <span>}</span><span>)</span><span>;</span>
        <span>if</span> <span>(</span><span>!</span>users<span>.</span>length<span>)</span> <span>return</span><span>;</span> <span>// 503</span>
        <span>const</span> user <span>=</span> users<span>[</span><span>0</span><span>]</span><span>;</span>
        <span>if</span> <span>(</span>password <span>!==</span> user<span>.</span>password<span>)</span> <span>return</span><span>;</span> <span>// 503</span>
        <span>return</span> user<span>;</span>
      <span>}</span><span>,</span>
    <span>}</span><span>;</span>
    <span>const</span> authorize <span>=</span> <span>await</span> oauth<span>.</span>server<span>.</span><span>authorize</span><span>(</span>request<span>,</span> response<span>,</span> <span>{</span> authenticateHandler <span>}</span><span>)</span><span>;</span>
    <span>const</span> <span>{</span> authorizationCode<span>,</span> redirectUri <span>}</span> <span>=</span> authorize<span>;</span>
    ctx<span>.</span><span>redirect</span><span>(</span><span><span>`</span><span><span>${</span>redirectUri<span>}</span></span><span>?code=</span><span><span>${</span>authorizationCode<span>}</span></span><span>&amp;state=</span><span><span>${</span>query<span>.</span>state<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>

module<span>.</span>exports <span>=</span> CodeController<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br></div></div><div><pre><code><span><span>&lt;!</span><span>DOCTYPE</span> <span>html</span><span>></span></span>
<span><span><span>&lt;</span>html</span> <span>lang</span><span><span>=</span><span>"</span>en<span>"</span></span><span>></span></span>
<span><span><span>&lt;</span>head</span><span>></span></span>
  <span><span><span>&lt;</span>meta</span> <span>charset</span><span><span>=</span><span>"</span>UTF-8<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>meta</span> <span>name</span><span><span>=</span><span>"</span>viewport<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>width=device-width, initial-scale=1.0<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>meta</span> <span>http-equiv</span><span><span>=</span><span>"</span>X-UA-Compatible<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>ie=edge<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>title</span><span>></span></span>授权应用<span><span><span>&lt;/</span>title</span><span>></span></span>
  <span><span><span>&lt;</span>link</span> <span>rel</span><span><span>=</span><span>"</span>stylesheet<span>"</span></span> <span>href</span><span><span>=</span><span>"</span>https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>link</span> <span>rel</span><span><span>=</span><span>"</span>stylesheet<span>"</span></span> <span>href</span><span><span>=</span><span>"</span>https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css<span>"</span></span><span>></span></span>
<span><span><span>&lt;/</span>head</span><span>></span></span>
<span><span><span>&lt;</span>body</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>id</span><span><span>=</span><span>"</span>login<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>card border-light<span>"</span></span><span>></span></span>
      <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>card-header<span>"</span></span><span>></span></span>
        授权应用
      <span><span><span>&lt;/</span>div</span><span>></span></span>
      <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>card-body<span>"</span></span><span>></span></span>
        <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>card-title text-center<span>"</span></span><span>></span></span>
          <span><span><span>&lt;</span>h5</span><span>></span></span>{{client.name}}<span><span><span>&lt;/</span>h5</span><span>></span></span>
          <span><span><span>&lt;</span>div</span><span>></span></span>向资源所有者申请授权码<span><span><span>&lt;/</span>div</span><span>></span></span>
          <span><span><span>&lt;</span>div</span><span>></span></span>
            <span><span><span>&lt;</span>img</span> <span>src</span><span><span>=</span><span>"</span>{{client.logo}}<span>"</span></span> <span>alt</span><span><span>=</span><span>"</span>{{client.name}}<span>"</span></span><span>></span></span>
            <span><span><span>&lt;</span>i</span> <span>class</span><span><span>=</span><span>"</span>exchange fa fa-exchange<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>i</span><span>></span></span>
            <span><span><span>&lt;</span>img</span> <span>src</span><span><span>=</span><span>"</span>/public/logo.png<span>"</span></span> <span>alt</span><span><span>=</span><span>"</span>Egg.js OAuth2Server<span>"</span></span><span>></span></span>
          <span><span><span>&lt;/</span>div</span><span>></span></span>
        <span><span><span>&lt;/</span>div</span><span>></span></span>
        <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>card-text<span>"</span></span><span>></span></span>
          <span><span><span>&lt;</span>form</span> <span>class</span><span><span>=</span><span>"</span>form<span>"</span></span> <span>method</span><span><span>=</span><span>"</span>POST<span>"</span></span> <span>action</span><span><span>=</span><span>"</span>/auth/code?{{querystring}}<span>"</span></span><span>></span></span>
            <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>form-group<span>"</span></span><span>></span></span>
              <span><span><span>&lt;</span>label</span> <span>class</span><span><span>=</span><span>"</span>sr-only<span>"</span></span> <span>for</span><span><span>=</span><span>"</span>username<span>"</span></span><span>></span></span>Username<span><span><span>&lt;/</span>label</span><span>></span></span>
              <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>input-group<span>"</span></span><span>></span></span>
                <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>input-group-prepend<span>"</span></span><span>></span></span>
                  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>input-group-text<span>"</span></span><span>></span></span><span><span><span>&lt;</span>i</span> <span>class</span><span><span>=</span><span>"</span>fa fa-user<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>i</span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
                <span><span><span>&lt;/</span>div</span><span>></span></span>
                <span><span><span>&lt;</span>input</span> <span>class</span><span><span>=</span><span>"</span>form-control<span>"</span></span> <span>id</span><span><span>=</span><span>"</span>username<span>"</span></span> <span>name</span><span><span>=</span><span>"</span>username<span>"</span></span> <span>placeholder</span><span><span>=</span><span>"</span>用户名/手机/邮箱<span>"</span></span> <span>required</span><span>></span></span>
              <span><span><span>&lt;/</span>div</span><span>></span></span>
            <span><span><span>&lt;/</span>div</span><span>></span></span>
            <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>form-group<span>"</span></span><span>></span></span>
              <span><span><span>&lt;</span>label</span> <span>class</span><span><span>=</span><span>"</span>sr-only<span>"</span></span> <span>for</span><span><span>=</span><span>"</span>password<span>"</span></span><span>></span></span>Password<span><span><span>&lt;/</span>label</span><span>></span></span>
              <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>input-group<span>"</span></span><span>></span></span>
                <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>input-group-prepend<span>"</span></span><span>></span></span>
                  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>input-group-text<span>"</span></span><span>></span></span><span><span><span>&lt;</span>i</span> <span>class</span><span><span>=</span><span>"</span>fa fa-lock<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>i</span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
                <span><span><span>&lt;/</span>div</span><span>></span></span>
                <span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>password<span>"</span></span> <span>class</span><span><span>=</span><span>"</span>form-control<span>"</span></span> <span>id</span><span><span>=</span><span>"</span>password<span>"</span></span> <span>name</span><span><span>=</span><span>"</span>password<span>"</span></span> <span>placeholder</span><span><span>=</span><span>"</span>密码将被加密发送<span>"</span></span> <span>required</span><span>></span></span>
              <span><span><span>&lt;/</span>div</span><span>></span></span>
            <span><span><span>&lt;/</span>div</span><span>></span></span>
            <span><span><span>&lt;</span>button</span> <span>type</span><span><span>=</span><span>"</span>submit<span>"</span></span> <span>class</span><span><span>=</span><span>"</span>btn btn-block btn-success submit<span>"</span></span><span>></span></span>同意并授权<span><span><span>&lt;/</span>button</span><span>></span></span>
          <span><span><span>&lt;/</span>form</span><span>></span></span>
        <span><span><span>&lt;/</span>div</span><span>></span></span>
      <span><span><span>&lt;/</span>div</span><span>></span></span>
    <span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>body</span><span>></span></span>
<span><span><span>&lt;/</span>html</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br></div></div><h3 id="令牌控制器"> 令牌控制器</h3>
<div><pre><code><span>const</span> Controller <span>=</span> <span>require</span><span>(</span><span>'egg'</span><span>)</span><span>.</span>Controller<span>;</span>
<span>class</span> <span>TokenController</span> <span>extends</span> <span>Controller</span> <span>{</span>
  <span>async</span> <span>create</span><span>(</span><span>)</span> <span>{</span>
    <span>const</span> <span>{</span> app<span>,</span> ctx <span>}</span> <span>=</span> <span>this</span><span>;</span>
    <span>const</span> <span>{</span> oauth <span>}</span> <span>=</span> app<span>;</span>
    <span>const</span> request <span>=</span> <span>new</span> <span>oauth<span>.</span>OAuth2Server<span>.</span>Request</span><span>(</span>ctx<span>.</span>request<span>)</span><span>;</span>
    <span>const</span> response <span>=</span> <span>new</span> <span>oauth<span>.</span>OAuth2Server<span>.</span>Response</span><span>(</span><span>{</span> headers<span>:</span> <span>{</span><span>}</span> <span>}</span><span>)</span><span>;</span>
    <span>const</span> token <span>=</span> <span>await</span> oauth<span>.</span>server<span>.</span><span>token</span><span>(</span>request<span>,</span> response<span>)</span><span>;</span>
    <span>const</span> res <span>=</span> <span>{</span>
      access_token<span>:</span> token<span>.</span>accessToken<span>,</span>
      expires_in<span>:</span> oauth<span>.</span>server<span>.</span>options<span>.</span>accessTokenLifetime<span>,</span>
    <span>}</span><span>;</span>
    ctx<span>.</span>body <span>=</span> res<span>;</span>
  <span>}</span>
<span>}</span>
module<span>.</span>exports <span>=</span> TokenController<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><h3 id="授权详情控制器"> 授权详情控制器</h3>
<p>返回必要的用户信息，很多客户端框架需要此信息，如：<a href="https://auth.nuxtjs.org" target="_blank" rel="noopener noreferrer">Nuxt.js Auth</a>。</p>
<div><pre><code><span>// app/controller/auth/user.js</span>
<span>const</span> Controller <span>=</span> <span>require</span><span>(</span><span>'egg'</span><span>)</span><span>.</span>Controller<span>;</span>
<span>class</span> <span>UserController</span> <span>extends</span> <span>Controller</span> <span>{</span>
  <span>async</span> <span>index</span><span>(</span><span>)</span> <span>{</span>
    <span>const</span> <span>{</span> ctx <span>}</span> <span>=</span> <span>this</span><span>;</span>
    <span>const</span> res <span>=</span> ctx<span>.</span>state<span>.</span>auth<span>;</span>
    ctx<span>.</span>body <span>=</span> res<span>;</span>
  <span>}</span>
<span>}</span>
module<span>.</span>exports <span>=</span> UserController<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><h2 id="客户端"> 客户端</h2>
<p>模拟环境以<a href="https://cn.vuejs.org" target="_blank" rel="noopener noreferrer">Vue.js</a>实现，代码过多。简单起见，本文仅展示部分关键代码。</p>
<h3 id="请求授权码"> 请求授权码</h3>
<div><pre><code><span><span><span>&lt;</span>a</span> <span>href</span><span><span>=</span><span>"</span>http://127.0.0.1:7001/auth/code?response_type=code&amp;client_id=1&amp;state=ok&amp;redirect_uri=http%3A%2F%2F127.0.0.1%3A8080%2F%23%2Fredirect<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>button</span><span>></span></span>跳转授权端申请授权码<span><span><span>&lt;/</span>button</span><span>></span></span>
<span><span><span>&lt;/</span>a</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><table>
<thead>
<tr>
<th>参数</th>
<th>必须</th>
<th>说明</th>
<th>参考值</th>
</tr>
</thead>
<tbody>
<tr>
<td>response_type</td>
<td>是</td>
<td>响应类型，code = 授权码方式</td>
<td>code</td>
</tr>
<tr>
<td>client_id</td>
<td>是</td>
<td>客户端ID，应用在授权端注册的客户端ID</td>
<td>1</td>
</tr>
<tr>
<td>state</td>
<td>是</td>
<td>内部状态，客户端自定义，原封不动返回</td>
<td>ok</td>
</tr>
<tr>
<td>redirect_uri</td>
<td>否</td>
<td>授权码客户端接收地址，必须允许的成员</td>
<td>http://127.0.0.1:8080/#/redirect</td>
</tr>
<tr>
<td>scope</td>
<td>否</td>
<td>存取范围，资源端自定义</td>
<td>read</td>
</tr>
</tbody>
</table>
<h3 id="请求令牌"> 请求令牌</h3>
<div><pre><code><span>import</span> qs <span>from</span> <span>'qs'</span>
<span>import</span> axios <span>from</span> <span>'axios'</span>
<span>export</span> <span>default</span> <span>{</span>
  <span>created</span><span>(</span><span>)</span> <span>{</span>
    <span>const</span> <span>{</span> code<span>,</span> state <span>}</span> <span>=</span> <span>this</span><span>.</span>$route<span>.</span>query
    <span>const</span> data <span>=</span> <span>{</span>
      code<span>,</span>
      state<span>,</span>
      grant_type<span>:</span> <span>'authorization_code'</span><span>,</span>
      redirect_uri<span>:</span> <span>'http://127.0.0.1:8080/#/redirect'</span><span>,</span>
      client_id<span>:</span> <span>'1'</span><span>,</span>
      client_secret<span>:</span> <span>'secret'</span>
    <span>}</span>
    <span>axios</span><span>(</span><span>{</span>
      method<span>:</span> <span>'POST'</span><span>,</span>
      url<span>:</span> <span>'http://127.0.0.1:7001/auth/token'</span><span>,</span>
      headers<span>:</span> <span>{</span> <span>'Content-Type'</span><span>:</span> <span>'application/x-www-form-urlencoded'</span> <span>}</span><span>,</span>
      data<span>:</span> qs<span>.</span><span>stringify</span><span>(</span>data<span>)</span> <span>// 请务必注意格式转换</span>
    <span>}</span><span>)</span><span>.</span><span>then</span><span>(</span><span>res</span> <span>=></span> <span>{</span>
      console<span>.</span><span>info</span><span>(</span>res<span>)</span>
    <span>}</span><span>.</span><span>catch</span><span>(</span><span>err</span> <span>=></span> <span>{</span>
      console<span>.</span><span>err</span><span>(</span>err<span>)</span>
    <span>}</span><span>)</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div><table>
<thead>
<tr>
<th>参数</th>
<th>值</th>
<th>必须</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>headers</td>
<td>Content-Type=application/x-www-form-urlencoded</td>
<td>是</td>
<td>请求头</td>
</tr>
<tr>
<td>method</td>
<td>POST</td>
<td>是</td>
<td>必须是POST方法，请务必注意格式转换</td>
</tr>
<tr>
<td>grant_type</td>
<td>authorization_code</td>
<td>是</td>
<td>authorization_code = 授权码方式</td>
</tr>
<tr>
<td>client_id</td>
<td>1</td>
<td>是</td>
<td>客户端ID</td>
</tr>
<tr>
<td>client_secret</td>
<td>secret</td>
<td>是</td>
<td>客户端密钥，默认情况不能为空</td>
</tr>
<tr>
<td>code</td>
<td>934ab7ed580db30c58492414969b2dc3b38736ce</td>
<td>是</td>
<td>跳转链接携带的授权码</td>
</tr>
<tr>
<td>state</td>
<td>ok</td>
<td>否</td>
<td>客户端自定义状态</td>
</tr>
<tr>
<td>redirect_uri</td>
<td>http://127.0.0.1:8080/#/redirect</td>
<td>否</td>
<td>跳转链接</td>
</tr>
</tbody>
</table>
<h3 id="访问接口"> 访问接口</h3>
<p>请求头携带令牌访问资源服务器。</p>
<div><pre><code><span>curl</span> <span>'http://127.0.0.1:7001'</span> <span>\</span>
-H <span>'Authorization: Bearer 0e55b110f79023e7073a1a80db9fc72b5414ab53'</span>
<span># 正确则返回数据：hi, egg，错误一般返回401错误</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>若配置<code>allowBearerTokensInQueryString</code>为<code>true</code>，还可以携带请求参数访问，如下：</p>
<div><pre><code><span>curl</span> <span>'http://127.0.0.1:7001?access_token=0e55b110f79023e7073a1a80db9fc72b5414ab53'</span>
</code></pre>
<div><span>1</span><br></div></div><h2 id="总结"> 总结</h2>
<ul>
<li>深刻理解OAuth2原理和各种模式的授权流程</li>
<li>务必熟读<a href="https://oauth2-server.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener noreferrer">oauth2-server官方文档</a></li>
<li>注意必须实现的<code>Handler</code>，如：授权码模式<code>authorize</code>必须<code>authenticateHandler</code></li>
<li>注意必要参数和必要返回，以及它们的格式，OAuth的实现是有前后依赖</li>
</ul>
<blockquote>
<p>参考</p>
</blockquote>
<ul>
<li><a href="https://oauth2-server.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener noreferrer">node-oauth2-server</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2019/04/oauth_design.html" target="_blank" rel="noopener noreferrer">OAuth场景释疑</a></li>
<li><a href="https://www.cnblogs.com/vipzhou/p/8125924.html" target="_blank" rel="noopener noreferrer">Node.js实现OAuth2授权实现参考</a></li>
<li><a href="https://blog.csdn.net/m0_37263637/article/details/79081932" target="_blank" rel="noopener noreferrer">Node.js实现OAuth2授权码鉴权</a></li>
<li><a href="https://eggjs.org/zh-cn/advanced/plugin.html" target="_blank" rel="noopener noreferrer">Egg.js插件开发</a></li>
</ul>
<blockquote>
<p>方跃明 2020-01-07 杭州</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>前端概念图</title>
      <link>https://blog.fangyueming.cn/frontend-map/</link>
      <guid>https://blog.fangyueming.cn/frontend-map/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">前端概念图</source>
      <pubDate>Sun, 19 Dec 2021 03:19:43 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="前端概念图"> 前端概念图</h1>
<h2 id="图示"> 图示</h2>
<Mermaid id="mermaid-1a962850" data-code="graph%20LR%0AB(URL)%0AS(API%20Sever)%0AC(Action)%0AD(Data)%0AV(View)%0AS%20--%3E%7Cresponse%7C%20D%0AD%20--%3E%7Crequest%7C%20S%0AB%20--%3E%7Crouter%7C%20D%0AD%20--%3E%7Crender%7C%20V%0AV%20--%3E%7Cevent%7C%20C%0AC%20--%3E%7Cdispatch%7C%20D%0A"></Mermaid><h2 id="概念"> 概念</h2>
<table>
<thead>
<tr>
<th>概念</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>URL</td>
<td>访问什么页面</td>
</tr>
<tr>
<td>Data</td>
<td>显示什么信息</td>
</tr>
<tr>
<td>View</td>
<td>页面长成什么样</td>
</tr>
<tr>
<td>Action</td>
<td>对页面做了什么操作</td>
</tr>
<tr>
<td>API Server</td>
<td>Data数据的来源</td>
</tr>
</tbody>
</table>
<h2 id="参考"> 参考</h2>
<p><a href="https://github.com/sorrycc/blog/issues/1" target="_blank" rel="noopener noreferrer">https://github.com/sorrycc/blog/issues/1</a></p>
<p><img src="https://camo.githubusercontent.com/27dc8a7706005007aa24e557dc06eed9d66cb926f5704fcec9dea222935a3d56/68747470733a2f2f6f732e616c697061796f626a656374732e636f6d2f726d73706f7274616c2f43684d775a42755a6c614c725377652e706e67" alt="前端概念图" /></p>
<blockquote>
<p>方跃明
2020-02-07</p>
</blockquote>
]]></content:encoded>
      <enclosure url="https://camo.githubusercontent.com/27dc8a7706005007aa24e557dc06eed9d66cb926f5704fcec9dea222935a3d56/68747470733a2f2f6f732e616c697061796f626a656374732e636f6d2f726d73706f7274616c2f43684d775a42755a6c614c725377652e706e67" type="image/"/>
    </item>
    <item>
      <title>前端常用工具</title>
      <link>https://blog.fangyueming.cn/frontend-tools/</link>
      <guid>https://blog.fangyueming.cn/frontend-tools/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">前端常用工具</source>
      <pubDate>Fri, 02 Mar 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="前端常用工具"> 前端常用工具</h1>
<h2 id="基础"> 基础</h2>
<table>
<thead>
<tr>
<th>技术栈</th>
<th>说明</th>
<th>链接</th>
</tr>
</thead>
<tbody>
<tr>
<td>Koa</td>
<td>Node.js后端框架</td>
<td><a href="https://koajs.com" target="_blank" rel="noopener noreferrer">https://koajs.com</a></td>
</tr>
<tr>
<td>Egg.js</td>
<td>Node.js后端框架</td>
<td><a href="https://eggjs.org/zh-cn/index.html" target="_blank" rel="noopener noreferrer">https://eggjs.org/zh-cn/index.html</a></td>
</tr>
<tr>
<td>React</td>
<td>JavaScript前端库</td>
<td><a href="https://zh-hans.reactjs.org" target="_blank" rel="noopener noreferrer">https://zh-hans.reactjs.org</a></td>
</tr>
<tr>
<td>Nex.js</td>
<td>React通用应用框架</td>
<td><a href="https://nextjs.org" target="_blank" rel="noopener noreferrer">https://nextjs.org</a></td>
</tr>
<tr>
<td>Vue.js</td>
<td>渐进式JavaScript框架</td>
<td><a href="https://cn.vuejs.org" target="_blank" rel="noopener noreferrer">https://cn.vuejs.org</a></td>
</tr>
<tr>
<td>Nuxt.js</td>
<td>Vue.js通用应用框架</td>
<td><a href="https://zh.nuxtjs.org" target="_blank" rel="noopener noreferrer">https://zh.nuxtjs.org</a></td>
</tr>
<tr>
<td>Docker</td>
<td>Linux容器</td>
<td><a href="https://www.docker.com" target="_blank" rel="noopener noreferrer">https://www.docker.com</a></td>
</tr>
</tbody>
</table>
<h2 id="混合应用"> 混合应用</h2>
<table>
<thead>
<tr>
<th>名称</th>
<th>说明</th>
<th>链接</th>
</tr>
</thead>
<tbody>
<tr>
<td>uniapp</td>
<td>Vue H5、App、小程序</td>
<td><a href="https://uniapp.dcloud.io" target="_blank" rel="noopener noreferrer">https://uniapp.dcloud.io</a></td>
</tr>
<tr>
<td>ionic</td>
<td>H5、App</td>
<td><a href="https://ionicframework.com" target="_blank" rel="noopener noreferrer">https://ionicframework.com</a></td>
</tr>
<tr>
<td>Taro</td>
<td>React H5、App、小程序</td>
<td><a href="https://taro.aotu.io" target="_blank" rel="noopener noreferrer">https://taro.aotu.io</a></td>
</tr>
<tr>
<td>WEEX</td>
<td>Vue H5、App</td>
<td><a href="https://weex.apache.org/cn" target="_blank" rel="noopener noreferrer">https://weex.apache.org/cn</a></td>
</tr>
</tbody>
</table>
<h2 id="前端"> 前端</h2>
<table>
<thead>
<tr>
<th>名称</th>
<th>说明</th>
<th>链接</th>
</tr>
</thead>
<tbody>
<tr>
<td>http-server</td>
<td>HTTP服务器</td>
<td><a href="https://github.com/http-party/http-server" target="_blank" rel="noopener noreferrer">https://github.com/http-party/http-server</a></td>
</tr>
<tr>
<td>JSON Server</td>
<td>JSON数据库</td>
<td><a href="https://github.com/typicode/json-server" target="_blank" rel="noopener noreferrer">https://github.com/typicode/json-server</a></td>
</tr>
<tr>
<td>Husky</td>
<td>Git Hooks</td>
<td><a href="https://github.com/typicode/husky" target="_blank" rel="noopener noreferrer">https://github.com/typicode/husky</a></td>
</tr>
<tr>
<td>jsonplaceholder</td>
<td>在线模拟数据</td>
<td><a href="https://jsonplaceholder.typicode.com" target="_blank" rel="noopener noreferrer">https://jsonplaceholder.typicode.com</a></td>
</tr>
<tr>
<td>placeholder</td>
<td>在线模拟图片</td>
<td><a href="https://placeholder.com" target="_blank" rel="noopener noreferrer">https://placeholder.com</a></td>
</tr>
<tr>
<td>VuePress</td>
<td>文档编制</td>
<td><a href="https://vuepress.vuejs.org/zh" target="_blank" rel="noopener noreferrer">https://vuepress.vuejs.org/zh</a></td>
</tr>
<tr>
<td>Electron</td>
<td>桌面应用</td>
<td><a href="https://electronjs.org" target="_blank" rel="noopener noreferrer">https://electronjs.org</a></td>
</tr>
<tr>
<td>Ant Design Pro</td>
<td>后台管理</td>
<td><a href="https://github.com/ant-design/ant-design-pro" target="_blank" rel="noopener noreferrer">https://github.com/ant-design/ant-design-pro</a></td>
</tr>
<tr>
<td>AntV</td>
<td>高级图表</td>
<td><a href="https://antv.vision/zh" target="_blank" rel="noopener noreferrer">https://antv.vision/zh</a></td>
</tr>
<tr>
<td>Chart.js</td>
<td>简单图表</td>
<td><a href="https://www.chartjs.org" target="_blank" rel="noopener noreferrer">https://www.chartjs.org</a></td>
</tr>
<tr>
<td>Socket.io</td>
<td>Web Socket</td>
<td><a href="https://socket.io" target="_blank" rel="noopener noreferrer">https://socket.io</a></td>
</tr>
<tr>
<td>Geolib</td>
<td>地理坐标</td>
<td><a href="https://github.com/manuelbieh/geolib" target="_blank" rel="noopener noreferrer">https://github.com/manuelbieh/geolib</a></td>
</tr>
<tr>
<td>AreaCity</td>
<td>行政区域</td>
<td><a href="https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov" target="_blank" rel="noopener noreferrer">https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov</a></td>
</tr>
<tr>
<td>TOAST UI Editor</td>
<td>所见即所得编辑器</td>
<td><a href="https://github.com/nhn/tui.editor" target="_blank" rel="noopener noreferrer">https://github.com/nhn/tui.editor</a></td>
</tr>
<tr>
<td>Hotkeys</td>
<td>热键</td>
<td><a href="https://github.com/jaywcjlove/hotkeys" target="_blank" rel="noopener noreferrer">https://github.com/jaywcjlove/hotkeys</a></td>
</tr>
<tr>
<td>clipboard.js</td>
<td>剪贴板</td>
<td><a href="https://github.com/zenorocha/clipboard.js" target="_blank" rel="noopener noreferrer">https://github.com/zenorocha/clipboard.js</a></td>
</tr>
<tr>
<td>Cropper.js</td>
<td>图片剪裁</td>
<td><a href="https://github.com/fengyuanchen/cropperjs" target="_blank" rel="noopener noreferrer">https://github.com/fengyuanchen/cropperjs</a></td>
</tr>
<tr>
<td>vue-cropper</td>
<td>Vue图片剪裁</td>
<td><a href="https://github.com/xyxiao001/vue-cropper" target="_blank" rel="noopener noreferrer">https://github.com/xyxiao001/vue-cropper</a></td>
</tr>
<tr>
<td>Vue.Draggable</td>
<td>Vue拖拽</td>
<td><a href="https://github.com/SortableJS/Vue.Draggable" target="_blank" rel="noopener noreferrer">https://github.com/SortableJS/Vue.Draggable</a></td>
</tr>
</tbody>
</table>
<h2 id="后端"> 后端</h2>
<table>
<thead>
<tr>
<th>名称</th>
<th>说明</th>
<th>链接</th>
</tr>
</thead>
<tbody>
<tr>
<td>forever</td>
<td>Node.js服务</td>
<td><a href="https://github.com/foreversd/forever" target="_blank" rel="noopener noreferrer">https://github.com/foreversd/forever</a></td>
</tr>
<tr>
<td>semver</td>
<td>版本管理</td>
<td><a href="https://semver.org" target="_blank" rel="noopener noreferrer">https://semver.org</a></td>
</tr>
<tr>
<td>nodemon</td>
<td>开发热更新</td>
<td><a href="https://github.com/remy/nodemon" target="_blank" rel="noopener noreferrer">https://github.com/remy/nodemon</a></td>
</tr>
<tr>
<td>globby</td>
<td>文件加载</td>
<td><a href="https://github.com/sindresorhus/globby" target="_blank" rel="noopener noreferrer">https://github.com/sindresorhus/globby</a></td>
</tr>
<tr>
<td>node-cron</td>
<td>定时任务</td>
<td><a href="https://github.com/kelektiv/node-cron" target="_blank" rel="noopener noreferrer">https://github.com/kelektiv/node-cron</a></td>
</tr>
<tr>
<td>MinIO</td>
<td>对象存储</td>
<td><a href="https://github.com/minio/minio" target="_blank" rel="noopener noreferrer">https://github.com/minio/minio</a></td>
</tr>
<tr>
<td>Nodemailer</td>
<td>邮件发送</td>
<td><a href="https://nodemailer.com" target="_blank" rel="noopener noreferrer">https://nodemailer.com</a></td>
</tr>
<tr>
<td>Sequelize</td>
<td>ORM</td>
<td><a href="https://github.com/sequelize/sequelize" target="_blank" rel="noopener noreferrer">https://github.com/sequelize/sequelize</a></td>
</tr>
<tr>
<td>oauth2-server</td>
<td>授权</td>
<td><a href="https://github.com/oauthjs/node-oauth2-server" target="_blank" rel="noopener noreferrer">https://github.com/oauthjs/node-oauth2-server</a></td>
</tr>
<tr>
<td>node-casbin</td>
<td>访问控制</td>
<td><a href="https://github.com/casbin/node-casbin" target="_blank" rel="noopener noreferrer">https://github.com/casbin/node-casbin</a></td>
</tr>
<tr>
<td>node-cache-manager</td>
<td>缓存</td>
<td><a href="https://github.com/BryanDonovan/node-cache-manager" target="_blank" rel="noopener noreferrer">https://github.com/BryanDonovan/node-cache-manager</a></td>
</tr>
<tr>
<td>log4js</td>
<td>日志</td>
<td><a href="https://github.com/log4js-node/log4js-node" target="_blank" rel="noopener noreferrer">https://github.com/log4js-node/log4js-node</a></td>
</tr>
</tbody>
</table>
<h2 id="运维"> 运维</h2>
<table>
<thead>
<tr>
<th>名称</th>
<th>说明</th>
<th>链接</th>
</tr>
</thead>
<tbody>
<tr>
<td>IGG</td>
<td>谷歌学术助手</td>
<td><a href="https://iguge.app" target="_blank" rel="noopener noreferrer">https://iguge.app</a></td>
</tr>
<tr>
<td>ghelper</td>
<td>谷歌上网助手</td>
<td><a href="https://googlehelper.net" target="_blank" rel="noopener noreferrer">https://googlehelper.net</a></td>
</tr>
<tr>
<td>Iosevka</td>
<td>编程字体</td>
<td><a href="https://github.com/be5invis/Iosevka" target="_blank" rel="noopener noreferrer">https://github.com/be5invis/Iosevka</a></td>
</tr>
<tr>
<td>frp</td>
<td>内网穿透</td>
<td><a href="https://github.com/fatedier/frp" target="_blank" rel="noopener noreferrer">https://github.com/fatedier/frp</a></td>
</tr>
<tr>
<td>WebVirtCloud</td>
<td>QEMU/KVM虚拟机</td>
<td><a href="https://github.com/retspen/webvirtcloud" target="_blank" rel="noopener noreferrer">https://github.com/retspen/webvirtcloud</a></td>
</tr>
<tr>
<td>Matomo</td>
<td>访问统计分析</td>
<td><a href="https://github.com/matomo-org/matomo" target="_blank" rel="noopener noreferrer">https://github.com/matomo-org/matomo</a></td>
</tr>
<tr>
<td>NodeSource</td>
<td>Node.js安装</td>
<td><a href="https://github.com/nodesource/distributions" target="_blank" rel="noopener noreferrer">https://github.com/nodesource/distributions</a></td>
</tr>
<tr>
<td>ScreenToGif</td>
<td>屏幕捕获</td>
<td><a href="https://www.screentogif.com" target="_blank" rel="noopener noreferrer">https://www.screentogif.com</a></td>
</tr>
<tr>
<td>NSSM</td>
<td>Windows服务</td>
<td><a href="https://nssm.cc" target="_blank" rel="noopener noreferrer">https://nssm.cc</a></td>
</tr>
<tr>
<td>pm2</td>
<td>后台运行Node.js</td>
<td><a href="https://pm2.keymetrics.io" target="_blank" rel="noopener noreferrer">https://pm2.keymetrics.io</a></td>
</tr>
<tr>
<td>forever</td>
<td>后台运行Node.js</td>
<td><a href="https://github.com/foreverjs/forever" target="_blank" rel="noopener noreferrer">https://github.com/foreverjs/forever</a></td>
</tr>
</tbody>
</table>
<blockquote>
<p>方跃明
2021-12-22</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>家用宽带联机开发环境部署</title>
      <link>https://blog.fangyueming.cn/frp-ddns/</link>
      <guid>https://blog.fangyueming.cn/frp-ddns/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">家用宽带联机开发环境部署</source>
      <pubDate>Mon, 18 May 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="家用宽带联机开发环境部署"> 家用宽带联机开发环境部署</h1>
<p>利用家庭宽带低成本、低功耗部署联机开发环境。
当然，若有阿里云等公网环境，路由服务器合一，略改即可支持。</p>
<div><pre><code>                  +-----------+
                  | frpc      |
                  | developer |
                  +-----------+
                       |
                     ddns
                       |
+--------+        +--------+          +--------+
| dns    |        | frps   |          | web    |
| domain |&lt;- ns -&gt;| router |&lt;- http -&gt;| client |
+--------+        +--------+          +--------+
                       |
                     cname
                       |
                 +-----------+
                 | frpc      |
                 | server    |
                 +-----------+
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><h2 id="条件"> 条件</h2>
<table>
<thead>
<tr>
<th>项目</th>
<th>推荐</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>家用宽带</td>
<td>电信宽带</td>
<td>要求ISP开通光猫桥接模式（或破解光猫）必须暴露公网IP</td>
</tr>
<tr>
<td>动态域名</td>
<td>花生壳</td>
<td>通过DDNS客户端动态绑定IP实现域名访问</td>
</tr>
<tr>
<td>服务器</td>
<td>工控机</td>
<td>x86服务器，建议使用低功耗被动散热低噪音迷你机</td>
</tr>
<tr>
<td>路由器</td>
<td>OpenWRT</td>
<td>可选，内置或支持安装或刷机后可安装frp的家庭路由器</td>
</tr>
<tr>
<td>页面服务</td>
<td>GitHub Pages</td>
<td>可选，静态页面托管，直接支持80端口访问</td>
</tr>
<tr>
<td>开发机</td>
<td>个人电脑</td>
<td>可选，移动办公即时接入、随时随地为客户提供即时演示</td>
</tr>
</tbody>
</table>
<h2 id="思路"> 思路</h2>
<ul>
<li>frp将本地端口映射到远程服务器端口（请求转发到本地开发环境便于调试）</li>
<li>Ngrok接管远程服务器端口普通端口转换为80、443等端口（微信开发需要）</li>
</ul>
<h2 id="frps"> frps</h2>
<div><pre><code><span><span>[</span><span>common</span><span>]</span></span>
<span>bind_port</span> <span>=</span> <span>7000</span>
<span>dashboard_port</span> <span>=</span> <span>7500</span>
<span>dashboard_user</span> <span>=</span> <span>admin</span>
<span>dashboard_pwd</span> <span>=</span> <span>admin</span>
<span>vhost_http_port</span> <span>=</span> <span>8080</span>
<span>token</span> <span>=</span> <span>your-token</span>
<span>subdomain_host</span> <span>=</span> <span>your.domain</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h2 id="frpc-server"> frpc server</h2>
<p>服务器端配置，建议安装为服务</p>
<div><pre><code><span><span>[</span><span>common</span><span>]</span></span>
<span>server_addr</span> <span>=</span> <span>frps-server-host</span>
<span>server_port</span> <span>=</span> <span>7000</span>
<span>token</span> <span>=</span> <span>your-token</span>

<span><span>[</span><span>ssh</span><span>]</span></span>
<span>type</span> <span>=</span> <span>tcp</span>
<span>local_ip</span> <span>=</span> <span>127.0.0.1</span>
<span>local_port</span> <span>=</span> <span>22</span>
<span>remote_port</span> <span>=</span> <span>22</span>

<span><span>[</span><span>msyql</span><span>]</span></span>
<span>type</span> <span>=</span> <span>tcp</span>
<span>local_ip</span> <span>=</span> <span>127.0.0.1</span>
<span>local_port</span> <span>=</span> <span>3306</span>
<span>remote_port</span> <span>=</span> <span>3306</span>

<span><span>[</span><span>api</span><span>]</span></span>
<span>type</span> <span>=</span> <span>http</span>
<span>subdomain</span> <span>=</span> <span>api # http://api.your.domain:8080</span>
<span>local_port</span> <span>=</span> <span>80</span>
<span>proxy_protocol_version</span> <span>=</span> <span>v2</span>

<span><span>[</span><span>web</span><span>]</span></span>
<span>type</span> <span>=</span> <span>http</span>
<span>subdomain</span> <span>=</span> <span>web # http://web.your.domain:8080</span>
<span>local_port</span> <span>=</span> <span>80</span>
<span>proxy_protocol_version</span> <span>=</span> <span>v2</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br></div></div><h2 id="frpc-developer"> frpc developer</h2>
<p>开发机端配置，建议命令行运行</p>
<div><pre><code><span><span>[</span><span>common</span><span>]</span></span>
<span>server_addr</span> <span>=</span> <span>frps-server-host</span>
<span>server_port</span> <span>=</span> <span>7000</span>
<span>token</span> <span>=</span> <span>your-token</span>

<span><span>[</span><span>dev-api</span><span>]</span></span>
<span>type</span> <span>=</span> <span>http</span>
<span>local_ip</span> <span>=</span> <span>127.0.0.1</span>
<span>local_port</span> <span>=</span> <span>7001</span>
<span>custom_domains</span> <span>=</span> <span>api.ddns.domain # http://api.ddns.domain:8080</span>
<span>proxy_protocol_version</span> <span>=</span> <span>v2</span>

<span><span>[</span><span>dev-web</span><span>]</span></span>
<span>type</span> <span>=</span> <span>http</span>
<span>local_ip</span> <span>=</span> <span>127.0.0.1</span>
<span>local_port</span> <span>=</span> <span>3000</span>
<span>custom_domains</span> <span>=</span> <span>web.ddns.domain # http://web.ddns.domain:8080</span>
<span>proxy_protocol_version</span> <span>=</span> <span>v2</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><h2 id="端口映射"> 端口映射</h2>
<p>在路由器上配置端口映射开放外网访问。</p>
<h2 id="客户托管"> 客户托管</h2>
<h3 id="开发版"> 开发版</h3>
<p>客户域名解析添加<code>CNAME</code>到服务器端相应的域名，并使用<code>nginx</code>反向代理。</p>
<h3 id="静态页"> 静态页</h3>
<p>使用<code>Pages</code>服务，可支持<code>HTTPS</code>（涉及跨域谨慎使用）。</p>
<h2 id="ngrok"> Ngrok</h2>
<p><a href="https://baike.baidu.com/item/ngrok/13986278" target="_blank" rel="noopener noreferrer">Ngrok</a> 释义</p>
<blockquote>
<p>方跃明
2020-05-18</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>frp内网穿透</title>
      <link>https://blog.fangyueming.cn/frp/</link>
      <guid>https://blog.fangyueming.cn/frp/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">frp内网穿透</source>
      <pubDate>Thu, 18 Jun 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="frp内网穿透"> frp内网穿透</h1>
<p>内网穿透利器，官网：<a href="https://github.com/fatedier/frp" target="_blank" rel="noopener noreferrer">https://github.com/fatedier/frp</a></p>
<h2 id="frps"> frps</h2>
<p>frp服务端</p>
<div><pre><code>frps -c frps.ini
</code></pre>
<div><span>1</span><br></div></div><h3 id="配置"> 配置</h3>
<div><pre><code><span><span>[</span><span>common</span><span>]</span></span>
<span>bind_port</span> <span>=</span> <span>7000</span>
<span>dashboard_port</span> <span>=</span> <span>7500</span>
<span>vhost_http_port</span> <span>=</span> <span>8080</span>
<span>token</span> <span>=</span> <span>frps-token</span>
<span>subdomain_host</span> <span>=</span> <span>your.domain</span>
<span># dashboard 用户名密码，默认都为 admin</span>
<span>dashboard_user</span> <span>=</span> <span>admin</span>
<span>dashboard_pwd</span> <span>=</span> <span>admin</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><h3 id="端口"> 端口</h3>
<p>frps所在系统的防火墙需放行以下端口</p>
<table>
<thead>
<tr>
<th style="text-align:right">端口</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">7000</td>
<td>frps server</td>
</tr>
<tr>
<td style="text-align:right">7500</td>
<td>frps dashboard</td>
</tr>
<tr>
<td style="text-align:right">8080</td>
<td>frps vhost http</td>
</tr>
<tr>
<td style="text-align:right">*</td>
<td>frpc remote port</td>
</tr>
</tbody>
</table>
<div><pre><code><span>## 防火墙放行端口</span>
firewall-cmd --zone<span>=</span>public --add-port<span>=</span><span>7000</span>/tcp --permanent  <span># success</span>
firewall-cmd --zone<span>=</span>public --add-port<span>=</span><span>3306</span>/tcp --permanent  <span># success</span>
firewall-cmd --reload
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="服务"> 服务</h3>
<div><pre><code><span><span>[</span><span>Unit</span><span>]</span></span>
<span>Description</span><span>=</span><span>Frp Server Service</span>
<span>After</span><span>=</span><span>network.target</span>

<span><span>[</span><span>Service</span><span>]</span></span>
<span>Type</span><span>=</span><span>simple</span>
<span>User</span><span>=</span><span>nobody</span>
<span>Restart</span><span>=</span><span>on-failure</span>
<span>RestartSec</span><span>=</span><span>5s</span>
<span>ExecStart</span><span>=</span><span>/usr/bin/frps -c /etc/frp/frps.ini</span>
<span># 创建软链接</span>
<span># ln -s /etc/frp/frps /usr/bin/frps</span>
<span># ln -s /etc/frp/frpc /usr/bin/frpc</span>
<span># 或，修改以下内容指向正确位置</span>
<span># ExecStart=/etc/frp/frps -c /etc/frp/frps.ini</span>

<span><span>[</span><span>Install</span><span>]</span></span>
<span>WantedBy</span><span>=</span><span>multi-user.target</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><div><pre><code><span># 创建软链接，设置为自动启动，并启动frpc</span>
<span>ln</span> -s /etc/frp/systemd/frps.service /etc/systemd/system/frps.service
systemctl <span>enable</span> frps
systemctl start frps
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h2 id="frpc"> frpc</h2>
<p>frp客户端</p>
<div><pre><code>frpc -c frpc.ini
</code></pre>
<div><span>1</span><br></div></div><h3 id="配置-2"> 配置</h3>
<p>通常，除了http外，需在frps所在系统的防火墙和路由器放行客户端配置的端口</p>
<p><strong>注意：</strong> 客户端无需放行端口，这就是“内网穿透”</p>
<div><pre><code><span><span>[</span><span>common</span><span>]</span></span>
<span>server_addr</span> <span>=</span> <span>frps-server</span>
<span>server_port</span> <span>=</span> <span>7000</span>
<span>token</span> <span>=</span> <span>frps-token</span>

<span><span>[</span><span>ssh</span><span>]</span></span>
<span>type</span> <span>=</span> <span>tcp</span>
<span>local_ip</span> <span>=</span> <span>127.0.0.1</span>
<span>local_port</span> <span>=</span> <span>22</span>
<span>remote_port</span> <span>=</span> <span>22</span>

<span><span>[</span><span>msyql</span><span>]</span></span>
<span>type</span> <span>=</span> <span>tcp</span>
<span>local_ip</span> <span>=</span> <span>127.0.0.1</span>
<span>local_port</span> <span>=</span> <span>3306</span>
<span>remote_port</span> <span>=</span> <span>3306</span>

<span><span>[</span><span>dev</span><span>]</span></span>
<span>type</span> <span>=</span> <span>http</span>
<span>subdomain</span> <span>=</span> <span>dev</span>
<span>local_port</span> <span>=</span> <span>80</span>
<span>proxy_protocol_version</span> <span>=</span> <span>v2</span>

<span><span>[</span><span>egg</span><span>]</span></span>
<span>type</span> <span>=</span> <span>tcp</span>
<span>local_ip</span> <span>=</span> <span>127.0.0.1</span>
<span>local_port</span> <span>=</span> <span>7001</span>
<span>remote_port</span> <span>=</span> <span>7001</span>
<span>proxy_protocol_version</span> <span>=</span> <span>v2</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div><h3 id="服务-2"> 服务</h3>
<p>类似frps</p>
<blockquote>
<p>方跃明
2020-06-18</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>Git提交规范</title>
      <link>https://blog.fangyueming.cn/git-commitlint/</link>
      <guid>https://blog.fangyueming.cn/git-commitlint/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">Git提交规范</source>
      <pubDate>Thu, 02 Jan 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="git提交规范"> Git提交规范</h1>
<p><code>Husky</code>接管Git钩子在commit-msg时利用<code>commitlint</code>检查提交规范。</p>
<h2 id="参考"> 参考</h2>
<ul>
<li><a href="https://juejin.im/post/5d1f1e595188254b732b60a3" target="_blank" rel="noopener noreferrer">规范构建</a></li>
<li><a href="https://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html" target="_blank" rel="noopener noreferrer">编写指南</a></li>
<li><a href="https://github.com/conventional-changelog/commitlint" target="_blank" rel="noopener noreferrer">commitlint</a></li>
<li><a href="https://github.com/typicode/husky" target="_blank" rel="noopener noreferrer">Husky</a></li>
</ul>
<h2 id="实现"> 实现</h2>
<h3 id="安装开发依赖"> 安装开发依赖</h3>
<div><pre><code><span>yarn</span> <span>install</span> -D husky
<span>yarn</span> <span>install</span> -D @commitlint/cli
<span>yarn</span> <span>install</span> -D @commitlint/config-conventional
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h3 id="配置package-json"> 配置<code>package.json</code></h3>
<div><pre><code><span>{</span>
  <span>"husky"</span><span>:</span> <span>{</span>
      <span>"hooks"</span><span>:</span> <span>{</span>
        <span>"commit-msg"</span><span>:</span> <span>"commitlint -E HUSKY_GIT_PARAMS"</span>
      <span>}</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h2 id="commit规范"> commit规范</h2>
<div><pre><code>type<span>(</span>scope?<span>)</span>: subject  <span>#scope is optional</span>
</code></pre>
<div><span>1</span><br></div></div><h2 id="生成changelog"> 生成CHANGELOG</h2>
<h3 id="安装依赖"> 安装依赖</h3>
<div><pre><code><span>yarn</span> <span>install</span> -D conventional-changelog
<span>yarn</span> <span>install</span> -D conventional-changelog-cli
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h3 id="package-json"> package.json</h3>
<div><pre><code><span>"scripts"</span><span>:</span> <span>{</span>
  <span>"changelog"</span><span>:</span> <span>"conventional-changelog -p angular -i CHANGELOG.md -s -r 0"</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h3 id="生成"> 生成</h3>
<div><pre><code><span>yarn</span> changelog  <span># 在项目根目录生成CHANGELOG.md</span>
</code></pre>
<div><span>1</span><br></div></div><h3 id="git钩子执行eslint"> Git钩子执行ESLint</h3>
<p>详见<a href="https://juejin.im/post/5d1f1e595188254b732b60a3" target="_blank" rel="noopener noreferrer">规范构建教程</a></p>
<blockquote>
<p>方跃明
2020-01-02</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>Git排除忽略子目录</title>
      <link>https://blog.fangyueming.cn/git-ignore-exclude/</link>
      <guid>https://blog.fangyueming.cn/git-ignore-exclude/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">Git排除忽略子目录</source>
      <pubDate>Mon, 09 Sep 2019 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="git排除忽略子目录"> Git排除忽略子目录</h1>
<p>想忽略某个目录，但又不想忽略这个目录下的某个子目录？</p>
<p>排除此目录，改为忽略*，然后忽略子目录。</p>
<div><pre><code># exclude ignore cn
!app/

app/*
!app/locale/

app/locale/*
!app/locale/cn/
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h2 id="示例"> 示例</h2>
<p>uni-app项目忽略unpackage下但排除h5和res</p>
<div><pre><code>unpackage
|-- cache
|-- dist
|   |-- build
|   |   |-- .automator
|   |   |-- app-plus
|   |   `-- h5              # 排除
|   |       `-- static
|   |           |-- js
|   |           |-- pages
|   |           `-- styles
|   `-- dev
|-- release
|   `-- apk
`-- res                     # 排除
    `-- icons
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><div><pre><code># uni-app dist
!unpackage/
unpackage/*
!unpackage/res

!unpackage/dist
unpackage/dist/*

!unpackage/dist/build
unpackage/dist/build/*

!unpackage/dist/build/h5
!unpackage/dist/build/README.md
!unpackage/dist/build/.gitignore
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div><blockquote>
<p>方跃明
2019-09-09</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>Chrome inspect开发钉钉应用</title>
      <link>https://blog.fangyueming.cn/chrome-inspect/</link>
      <guid>https://blog.fangyueming.cn/chrome-inspect/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">Chrome inspect开发钉钉应用</source>
      <pubDate>Sun, 07 Apr 2019 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="chrome-inspect开发钉钉应用"> Chrome inspect开发钉钉应用</h1>
<p><code>Chrome inspect</code>是<code>Chrome</code>浏览器基于<code>webkit remote debug</code>的实现，支持<code>Android</code>模拟器和<code>Android</code>真实设备。</p>
<p>但由于国情所致，国内<code>Android</code>大部分手机对于<code>Google Mobile Service</code>的支持甚是微弱，很多设备甚至完全阉割，且无法安装。</p>
<p>因此，推荐使用未被阉割的<code>Android</code>模拟器进行开发。</p>
<div><p>提示</p>
<p>由于国情所致，下载和访问页面可能产生不可预期的错误，请自行解决。</p>
</div>
<h2 id="钉钉开发版"> 钉钉开发版</h2>
<p>钉钉正式版不支持<code>Chrome inspect</code>，请在<a href="https://open-doc.dingtalk.com/microapp/kn6zg7" target="_blank" rel="noopener noreferrer">钉钉开发者工具</a>中下载钉钉开发版。</p>
<h2 id="真机调试"> 真机调试</h2>
<p>真机使用USB连接到电脑，打开开发者模式，允许调试，才能被<code>Chrome inspect</code>发现。</p>
<p><img src="./android-develop.jpg" alt="开发者模式" /></p>
<p><img src="./android-allow-debug.jpg" alt="允许调试" /></p>
<h2 id="模拟器"> 模拟器</h2>
<p>推荐<a href="https://www.genymotion.com/download" target="_blank" rel="noopener noreferrer">下载</a>对开发支持良好的 <a href="https://www.genymotion.com" target="_blank" rel="noopener noreferrer">Genymotion</a> Android模拟器，若无<code>VirtualBox</code>环境请选择<code>with VirtualBox</code>的安装包。
一般使用默认安装方式，安装时请注意选择<code>Personal User</code>免费使用，土豪随意。</p>
<div><p>友情提示</p>
<p>请勿下载夜神、mumu之类的模拟器（<s>游戏机</s>）。</p>
</div>
<h2 id="虚拟机"> 虚拟机</h2>
<p>打开<code>Genymotion</code>模拟器，请选择较高版本的虚拟设备模板，点击右侧菜单<code>INSTALL</code>，下载完成自动安装。</p>
<p><img src="./vm-install.jpg" alt="安装虚拟机" /></p>
<p>回到<code>Genymotion</code>模拟器，启动虚拟机，默认已经打开开发者模式。</p>
<p>将钉钉开发版拖入虚拟机中，完成安装，打开钉钉应用，进入钉钉微应用。</p>
<p><img src="./vm-run.jpg" alt="虚拟机启动" /></p>
<div><p>离线下载</p>
<p>若网络环境慢需要离线下载模板包，请打开<code>C:\Users\your-name\AppData\Local\Genymobile\genymotion.log</code>日志，查找<code>.ova</code>（<code>VirtualBox</code>模板格式）字符串。
得到你想离线下载的文件链接，使用迅雷极速版等符合国情的下载工具下载，完成后双击导入<code>VirtualBox</code>。</p>
</div>
<p>若错误请根据错误提示解决问题，比如网络配置错误：</p>
<p><img src="./vm-setting.jpg" alt="虚拟机网络配置" /></p>
<h2 id="chrome-inspect"> Chrome inspect</h2>
<p>使用<code>Chrome</code>浏览器打开<code>chrome://inspect/#devices</code>新标签页，将<code>Remote Target</code>下对应设备的对应页面<code>inspect</code>到桌面端的<code>Chrome</code>。</p>
<p><img src="./inspect-device.jpg" alt="Chrome inspect" /></p>
<p>正常情况进入调试页面。</p>
<p><img src="./inspect-debug.jpg" alt="Chrome debug" /></p>
<div><p>谨防受骗</p>
<p>国情问题，很可能会弹出空白页面或者404错误页面（<code>HTTP/1.1 404 Not Found</code>）。
据说有<code>Chrome inspect</code>对应的<code>WebView</code>离线工具解决，可能需要付费，请务必谨慎。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Git WebHooks</title>
      <link>https://blog.fangyueming.cn/git-webhook/</link>
      <guid>https://blog.fangyueming.cn/git-webhook/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">Git WebHooks</source>
      <pubDate>Mon, 23 Sep 2019 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="git-webhooks"> Git WebHooks</h1>
<p>当代码仓库发生某些事件（提交、合并、讨论）时，触发已经定义好的WebHooks，将数据提交到WebHooks服务所在的服务器，服务端对数据解析，执行对应的脚本，实现自动部署等一系列操作。</p>
<h2 id="代码实现"> 代码实现</h2>
<p>此处以码云签名密钥方式为例，实现代码使用<code>Egg.js</code>框架。</p>
<h3 id="配置"> 配置</h3>
<div><pre><code><span>// config/config.default.js</span>
<span>'use strict'</span><span>;</span>

module<span>.</span><span>exports</span> <span>=</span> <span>appInfo</span> <span>=></span> <span>{</span>
  <span>const</span> config <span>=</span> exports <span>=</span> <span>{</span><span>}</span><span>;</span>
  config<span>.</span>keys <span>=</span> appInfo<span>.</span>name <span>+</span> <span>'_1597542673364_3462'</span><span>;</span>

  <span>// CSRF</span>
  <span>// https://eggjs.org/zh-cn/core/security.html</span>
  config<span>.</span>security <span>=</span> <span>{</span>
    csrf<span>:</span> <span>{</span>
      enable<span>:</span> <span>false</span><span>,</span>
    <span>}</span><span>,</span>
    domainWhiteList<span>:</span> <span>[</span> <span>'*'</span> <span>]</span><span>,</span> <span>// FIXME: only for development</span>
  <span>}</span><span>;</span>

  <span>// WebHooks</span>
  <span>// https://gitee.com/help/categories/40</span>
  config<span>.</span>hooks <span>=</span> <span>[</span><span>{</span>
    userAgent<span>:</span> <span>'git-oschina-hook'</span><span>,</span> <span>// 服务商识别串</span>
    repository<span>:</span> <span>{</span> <span>// 仓库</span>
      url<span>:</span> <span>'https://gitee.com/oschina/git-osc'</span><span>,</span>
    <span>}</span><span>,</span>
    ref<span>:</span> <span>'refs/heads/test_version'</span><span>,</span> <span>// 触发的分支</span>
    hook_name<span>:</span> <span>'push_hooks'</span><span>,</span> <span>// 触发的事件</span>
    secret<span>:</span> <span>'this is secret'</span><span>,</span> <span>// 签名密钥</span>
    exec<span>:</span> <span>'bash ~/bash/webhook/git-osc-push.sh'</span><span>,</span> <span>// 执行的脚本</span>
  <span>}</span><span>]</span><span>;</span>

  <span>return</span> config<span>;</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br></div></div><h3 id="控制器"> 控制器</h3>
<div><pre><code><span>// app/controller/index.js</span>
<span>'use strict'</span><span>;</span>

<span>const</span> Controller <span>=</span> <span>require</span><span>(</span><span>'egg'</span><span>)</span><span>.</span>Controller<span>;</span>

<span>class</span> <span>HomeController</span> <span>extends</span> <span>Controller</span> <span>{</span>
  <span>async</span> <span>create</span><span>(</span><span>)</span> <span>{</span>
    <span>const</span> <span>{</span> ctx<span>,</span> app<span>,</span> service <span>}</span> <span>=</span> <span>this</span><span>;</span>
    <span>const</span> <span>{</span> header<span>,</span> body<span>,</span> query <span>}</span> <span>=</span> ctx<span>.</span>request<span>;</span>
    <span>const</span> <span>{</span> repository<span>:</span> <span>{</span> url <span>}</span><span>,</span> hook_name<span>,</span> timestamp<span>,</span> sign<span>,</span> refs <span>}</span> <span>=</span> body<span>;</span>
    console<span>.</span><span>log</span><span>(</span><span>{</span> header<span>,</span> body<span>,</span> query <span>}</span><span>)</span><span>;</span>
    <span>const</span> hook <span>=</span> app<span>.</span>config<span>.</span>hooks<span>.</span><span>find</span><span>(</span><span>h</span> <span>=></span> h<span>.</span>repository<span>.</span>url <span>===</span> url <span>&amp;&amp;</span> h<span>.</span>hook_name <span>===</span> hook_name<span>)</span><span>;</span>
    <span>if</span> <span>(</span><span>!</span>hook<span>)</span> <span>{</span>
      ctx<span>.</span>body <span>=</span> <span>{</span>
        errcode<span>:</span> <span>404</span><span>,</span>
        errmsg<span>:</span> <span>'hooks not found'</span><span>,</span>
        errinfo<span>:</span> <span>{</span> url<span>,</span> hook_name <span>}</span><span>,</span>
      <span>}</span><span>;</span>
      <span>return</span><span>;</span>
    <span>}</span>
    <span>const</span> <span>{</span> secret<span>,</span> exec <span>}</span> <span>=</span> hook<span>;</span>
    <span>if</span> <span>(</span>hook<span>.</span>refs <span>&amp;&amp;</span> hook<span>.</span>refs <span>!==</span> refs<span>)</span> <span>{</span>
      ctx<span>.</span>body <span>=</span> <span>{</span>
        errcode<span>:</span> <span>403</span><span>,</span>
        errmsg<span>:</span> <span>'branch not match'</span><span>,</span>
        errinfo<span>:</span> refs<span>,</span>
      <span>}</span><span>;</span>
      <span>return</span><span>;</span>
    <span>}</span>
    <span>const</span> text <span>=</span> timestamp <span>+</span> <span>'\n'</span> <span>+</span> secret<span>;</span>
    <span>const</span> hmac <span>=</span> service<span>.</span>webhook<span>.</span><span>sign</span><span>(</span>secret<span>,</span> text<span>)</span><span>;</span>
    <span>if</span> <span>(</span>hmac <span>!==</span> sign<span>)</span> <span>{</span>
      ctx<span>.</span>body <span>=</span> <span>{</span>
        errcode<span>:</span> <span>401</span><span>,</span>
        errmsg<span>:</span> <span>'sign not match'</span><span>,</span>
        errinfo<span>:</span> <span>{</span> sign <span>}</span><span>,</span>
      <span>}</span><span>;</span>
      <span>return</span><span>;</span>
    <span>}</span>
    <span>const</span> <span>{</span> stdout<span>,</span> stderr <span>}</span> <span>=</span> <span>await</span> service<span>.</span>webhook<span>.</span><span>exec</span><span>(</span>exec<span>)</span><span>;</span>
    <span>if</span> <span>(</span>stderr<span>)</span> <span>{</span>
      ctx<span>.</span>body <span>=</span> <span>{</span>
        errcode<span>:</span> <span>502</span><span>,</span>
        errmsg<span>:</span> <span>'exec failed'</span><span>,</span>
        errinfo<span>:</span> stderr<span>,</span>
      <span>}</span><span>;</span>
      <span>return</span><span>;</span>
    <span>}</span>
    ctx<span>.</span>logger<span>.</span><span>info</span><span>(</span>stdout<span>)</span><span>;</span>
    <span>const</span> res <span>=</span> <span>{</span>
      errcode<span>:</span> <span>0</span><span>,</span>
      errmsg<span>:</span> <span>'ok'</span><span>,</span>
    <span>}</span><span>;</span>
    ctx<span>.</span>body <span>=</span> res<span>;</span>
  <span>}</span>
<span>}</span>

module<span>.</span>exports <span>=</span> HomeController<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br></div></div><h3 id="相关服务"> 相关服务</h3>
<div><pre><code><span>// app/service/webhook.js</span>
<span>'use strict'</span><span>;</span>

<span>const</span> crypto <span>=</span> <span>require</span><span>(</span><span>'crypto'</span><span>)</span><span>;</span>
<span>const</span> util <span>=</span> <span>require</span><span>(</span><span>'util'</span><span>)</span><span>;</span>
<span>const</span> exec <span>=</span> util<span>.</span><span>promisify</span><span>(</span><span>require</span><span>(</span><span>'child_process'</span><span>)</span><span>.</span>exec<span>)</span><span>;</span>
<span>const</span> Service <span>=</span> <span>require</span><span>(</span><span>'egg'</span><span>)</span><span>.</span>Service<span>;</span>

<span>class</span> <span>WebhookService</span> <span>extends</span> <span>Service</span> <span>{</span>
  <span>sign</span><span>(</span><span>secret<span>,</span> text</span><span>)</span> <span>{</span>
    <span>const</span> hmac <span>=</span> crypto<span>.</span><span>createHmac</span><span>(</span><span>'sha256'</span><span>,</span> secret<span>)</span><span>.</span><span>update</span><span>(</span>text<span>)</span><span>.</span><span>digest</span><span>(</span><span>'base64'</span><span>)</span><span>;</span>
    <span>return</span> hmac<span>;</span>
  <span>}</span>

  <span>exec</span><span>(</span><span><span>...</span>args</span><span>)</span> <span>{</span>
    <span>return</span> <span>exec</span><span>(</span><span>...</span>args<span>)</span><span>;</span>
  <span>}</span>
<span>}</span>

module<span>.</span>exports <span>=</span> WebhookService<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><h2 id="服务器"> 服务器</h2>
<h3 id="部署webhooks"> 部署WebHooks</h3>
<p>将以上代码部署到服务器上，并启动服务，假设运行于：https://webhook.your.server。</p>
<h3 id="创建公钥"> 创建公钥</h3>
<div><pre><code><span>cd</span>
ssh-keygen -t rsa -C <span>"xxxxx@xxxxx.com"</span>
<span># 一路回车</span>
<span># 公钥文件：~/.ssh/id_rsa.pub</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="执行脚本"> 执行脚本</h3>
<p>以<code>Egg.js</code>项目为例</p>
<div><pre><code><span># ~/bash/webhook/git-osc-push.sh</span>
<span>set</span> -xe
<span>cd</span> ~/projects/git-osc-push
<span>yarn</span> stop
<span>git</span> pull
<span>yarn</span>
<span>yarn</span> start
<span>exit</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id="下拉代码仓库"> 下拉代码仓库</h3>
<p>以SSH格式clone或下拉仓库，若跳出公钥确认信息，回复<code>yes</code></p>
<div><pre><code><span>git</span> clone git@gitee.com:name/repo.git
</code></pre>
<div><span>1</span><br></div></div><h2 id="代码仓库"> 代码仓库</h2>
<h3 id="添加部署公钥"> 添加部署公钥</h3>
<p>将上面生成的公钥，添加到对应仓库的部署公钥管理里，并启用</p>
<h3 id="设置webhooks"> 设置WebHooks</h3>
<p>进入对应仓库（<code>name/repo</code>），WebHooks设置，添加一个WebHooks</p>
<ul>
<li>URL： https://webhook.your.server</li>
<li>签名密钥：<code>this is secret</code></li>
<li>选择事件：如PUSH</li>
</ul>
<p>至此完成部署和配置，当对应仓库有PUSH事件时，将触发WebHooks实现自动部署。</p>
<blockquote>
<p>方跃明
2020-09-23</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>图解Git常用操作</title>
      <link>https://blog.fangyueming.cn/git/</link>
      <guid>https://blog.fangyueming.cn/git/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">图解Git常用操作</source>
      <pubDate>Sat, 28 Apr 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="图解git常用操作"> 图解Git常用操作</h1>
<h2 id="git"> git</h2>
<p>你真的需要记住那么多Git操作吗？
也许阮一峰老师的<a href="http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html" target="_blank" rel="noopener noreferrer">《常用Git命令清单》</a>就够了。
<img src="./git.png" alt="Git常见操作图解" /></p>
<h2 id="git-subtree"> git subtree</h2>
<p>项目包含子项目这么办？是时候让你出场了！show time！</p>
<ul>
<li><a href="https://segmentfault.com/a/1190000012002151" target="_blank" rel="noopener noreferrer">git subtree教程</a></li>
<li><a href="https://segmentfault.com/a/1190000003969060" target="_blank" rel="noopener noreferrer">用 Git Subtree 在多个 Git 项目间双向同步子项目</a></li>
</ul>
<p><img src="./git-subtree.png" alt="git subtree" /></p>
<div><pre><code><span># 克隆主项目仓库到本地</span>
<span>git</span> clone https://coding.net/axolo/lcoamaxy
<span># 建立子项目，并从远程克隆子项目到本地对应目录</span>
<span>git</span> subtree <span>add</span> --prefix<span>=</span>www origin coding-pages
<span># 主项目正常提交</span>
<span>git</span> <span>add</span> --all
<span>git</span> commit -m <span>"use git subtree"</span>
<span>git</span> push
<span># 提交子项目的变更到远程仓库</span>
<span>git</span> subtree push -P www/ origin coding-pages
<span># 从远程获取子项目的变更</span>
<span>git</span> subtree pull -P www/ origin coding-pages
<span># 在子项目生成新分支hotfix-001</span>
<span>git</span> subtree push -P www/ origin hotfix-001
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div><blockquote>
<p>方跃明
2018-4-28</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>localhost开启HTTPS</title>
      <link>https://blog.fangyueming.cn/https-localhost/</link>
      <guid>https://blog.fangyueming.cn/https-localhost/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">localhost开启HTTPS</source>
      <pubDate>Sat, 28 Mar 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="localhost开启https"> localhost开启HTTPS</h1>
<p>以下操作均处于Windows环境</p>
<h2 id="证书工具"> 证书工具</h2>
<ul>
<li><a href="https://golang.org/dl/" target="_blank" rel="noopener noreferrer">Go语言环境</a></li>
<li><a href="https://github.com/jsha/minica" target="_blank" rel="noopener noreferrer">minica</a></li>
</ul>
<p>下载并安装Go语言安装包，编译<code>minica</code>为可执行文件：<code>minica.exe</code></p>
<div><pre><code><span>git</span> clone https://github.com/jsha/minica.git
<span>cd</span> minica
go build
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h3 id="生成证书"> 生成证书</h3>
<div><pre><code><span># 若根证书存在，同时生成根证书和叶证书（localhost）</span>
./minica --domains localhost
<span># 若根证书存在，为其生成叶证书（localhost.com）</span>
./minica --domains localhost.com
<span># 执行成功localhost.com目录下有对应证书</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><pre><code>|-- minica.exe          # 可执行文件
|-- minica.pem          # minica根证书
|-- minica-key.pem      # minica根证书私钥
|-- localhost           # 域名：localhost
|   |-- cert.pem        #   域名叶证书
|   `-- key.pem         #   域名叶证书私钥
`-- localhost.com       # 域名：localhost.com
    |-- cert.pem        #   域名叶证书
    `-- key.pem         #   域名叶证书私钥
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><h2 id="信任根证书"> 信任根证书</h2>
<ul>
<li>生成：进入<a href="https://console.cloud.tencent.com/ssl" target="_blank" rel="noopener noreferrer">腾讯云控制台SSL管理</a>，上传证书，将根证书和根证书私钥填入，生成证书</li>
<li>导入：下载此证书包，打开IIS目录，双击pfx证书填入对应导入密码，导入</li>
<li>信任：存储位置选择“受信任的根证书颁发机构”</li>
</ul>
<blockquote>
<p>阿里云可以导入本地证书，生成可导入格式，但无法被下载</p>
</blockquote>
<h2 id="配置https"> 配置HTTPS</h2>
<p>以http-server为例，将叶证书拷贝到对应目录，如<code>certs/localhost</code>下，以HTTPS协议运行。</p>
<div><pre><code>http-server -S -C ./certs/localhost/cert.pem -K ./certs/localhost/key.pem
<span># Starting up http-server, serving ./ through https</span>
<span># Available on: https://127.0.0.1:8080</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>访问https://localhost:8080，成功判定如下：
显示连接安全、证书有效、证书路径localhost在minica下、该证书没有问题。</p>
<h2 id="局域网客户端"> 局域网客户端</h2>
<ul>
<li>参照<strong>再次</strong>生成<code>localhost.com</code>的叶证书</li>
<li>在需要的局域网客户端上导入并信任根证书</li>
<li>需改<code>hosts</code>将<code>lcoalhost.com</code>指向对应IP</li>
<li>局域网客户端访问<code>https://localhost.com:8080</code></li>
</ul>
<blockquote>
<p>方跃明
2020-03-28</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>iOS开发环境搭建</title>
      <link>https://blog.fangyueming.cn/ios-develop/</link>
      <guid>https://blog.fangyueming.cn/ios-develop/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">iOS开发环境搭建</source>
      <pubDate>Wed, 01 Jan 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="ios开发环境搭建"> iOS开发环境搭建</h1>
<h2 id="全局"> 全局</h2>
<div><pre><code>xcode-select --install <span># 安装xcode开发依赖</span>
gcc --version <span># 出现版本号表示成功</span>
<span>sudo</span> gem <span>install</span> cocoapods <span># 安装依赖管理工具</span>
pod --version <span># 出现版本号表示成功</span>
pod setup <span># 设置pod</span>
<span># 安装brew，此处使用国内源，参见：https://brew.sh</span>
/bin/zsh -c <span>"<span><span>$(</span><span>curl</span> -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh<span>)</span></span>"</span>
brew --version <span># 出现版本号表示成功</span>
brew <span>install</span> <span>git</span> <span># 安装git</span>
<span>git</span> --version <span># 出现版本号表示成功</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><h2 id="项目"> 项目</h2>
<div><pre><code><span>cd</span> ~/Projects/your-project
<span># 建议将Podfile的源更换为国内源后执行安装</span>
<span># source 'https://mirrors.tuna.tsinghua.edu.cn/git/CocoaPods/Specs.git'</span>
pod <span>install</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><blockquote>
<p>方跃明
2020-01-01</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>JavaScript思维导图</title>
      <link>https://blog.fangyueming.cn/javascript-mind-map/</link>
      <guid>https://blog.fangyueming.cn/javascript-mind-map/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">JavaScript思维导图</source>
      <pubDate>Sat, 09 May 2015 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="javascript思维导图"> JavaScript思维导图</h1>
<h2 id="数据类型"> 数据类型</h2>
<p><img src="./javascript-01-data-type.gif" alt="JavaScript数据类型" /></p>
<h2 id="变量"> 变量</h2>
<p><img src="./javascript-02-variable.gif" alt="JavaScript变量" /></p>
<h2 id="数组"> 数组</h2>
<p><img src="./javascript-03-array.gif" alt="JavaScript数组" /></p>
<h2 id="运算符"> 运算符</h2>
<p><img src="./javascript-04-operational-character.gif" alt="JavaScript运算符" /></p>
<h2 id="函数"> 函数</h2>
<p><img src="./javascript-05-function-base.gif" alt="JavaScript函数" /></p>
<h2 id="流程"> 流程</h2>
<p><img src="./javascript-06-process-statement.gif" alt="JavaScript流程" /></p>
<h2 id="字符串函数"> 字符串函数</h2>
<p><img src="./javascript-07-string-function.gif" alt="JavaScript字符串函数" /></p>
<h2 id="正则表达式"> 正则表达式</h2>
<p><img src="./javascript-08-regular-expressions.gif" alt="JavaScript正则表达式" /></p>
<h2 id="windows对象"> Windows对象</h2>
<p><img src="./javascript-09-windows-object.gif" alt="JavaScript Windows对象" /></p>
<h2 id="dom操作"> DOM操作</h2>
<p><img src="./javascript-10-dom-operation.gif" alt="JavaScript DOM操作" /></p>
]]></content:encoded>
    </item>
    <item>
      <title>jQuery常用表格操作</title>
      <link>https://blog.fangyueming.cn/jquery-table/</link>
      <guid>https://blog.fangyueming.cn/jquery-table/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">jQuery常用表格操作</source>
      <pubDate>Sun, 30 Oct 2016 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="jquery常用表格操作"> jQuery常用表格操作</h1>
<div><pre><code><span><span>&lt;!</span><span>DOCTYPE</span> <span>html</span><span>></span></span>
<span><span><span>&lt;</span>html</span> <span>lang</span><span><span>=</span><span>"</span>en<span>"</span></span><span>></span></span>
<span><span><span>&lt;</span>head</span><span>></span></span>
  <span><span><span>&lt;</span>meta</span> <span>charset</span><span><span>=</span><span>"</span>UTF-8<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>meta</span> <span>name</span><span><span>=</span><span>"</span>viewport<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>width=device-width, initial-scale=1.0<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>meta</span> <span>http-equiv</span><span><span>=</span><span>"</span>X-UA-Compatible<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>ie=edge<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>title</span><span>></span></span>常用表格操作<span><span><span>&lt;/</span>title</span><span>></span></span>
  <span><span><span>&lt;</span>link</span> <span>rel</span><span><span>=</span><span>"</span>stylesheet<span>"</span></span> <span>href</span><span><span>=</span><span>"</span>http://cdn.bootcss.com/qtip2/3.0.3/jquery.qtip.min.css<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>style</span><span>></span></span><span><span>
  <span>div</span> <span>{</span>
    <span>margin-bottom</span><span>:</span> 10px<span>;</span>
  <span>}</span>
  <span>th span, td span</span> <span>{</span>
    <span>padding</span><span>:</span> 3px<span>;</span>
  <span>}</span>
  <span>.zebra-false</span> <span>{</span>
    <span>background-color</span><span>:</span> #ccc<span>;</span>
  <span>}</span>
  <span>.error</span> <span>{</span>
    <span>background-color</span><span>:</span> #f99<span>;</span>
  <span>}</span>
  </span></span><span><span><span>&lt;/</span>style</span><span>></span></span>
<span><span><span>&lt;/</span>head</span><span>></span></span>
<span><span><span>&lt;</span>body</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>id</span><span><span>=</span><span>"</span>title<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>button</span> <span>role</span><span><span>=</span><span>"</span>delete<span>"</span></span><span>></span></span>删<span><span><span>&lt;/</span>button</span><span>></span></span>
    <span><span><span>&lt;</span>button</span> <span>role</span><span><span>=</span><span>"</span>insert<span>"</span></span><span>></span></span>增<span><span><span>&lt;/</span>button</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>id</span><span><span>=</span><span>"</span>data<span>"</span></span><span>></span></span><span><span><span>&lt;</span>script</span> <span>id</span><span><span>=</span><span>"</span>tmpl<span>"</span></span> <span>type</span><span><span>=</span><span>"</span>text/x-dot-template<span>"</span></span><span>></span></span><span><span>
    <span>&lt;</span>table border<span>=</span><span>"1"</span><span>></span>
      <span>&lt;</span>thead<span>></span>
        <span>&lt;</span>tr<span>></span>
          <span>&lt;</span>th role<span>=</span><span>"check"</span><span>></span><span>&lt;</span>span<span>></span><span>&lt;</span>input type<span>=</span><span>"checkbox"</span><span>></span><span>&lt;</span><span>/</span>span<span>></span><span>&lt;</span><span>/</span>th<span>></span>
          <span>&lt;</span>th<span>></span><span>&lt;</span>span<span>></span>序号<span>&lt;</span><span>/</span>span<span>></span><span>&lt;</span><span>/</span>th<span>></span>
          <span>&lt;</span>th<span>></span><span>&lt;</span>span<span>></span>网址<span>&lt;</span><span>/</span>span<span>></span><span>&lt;</span><span>/</span>th<span>></span>
          <span>&lt;</span>th<span>></span><span>&lt;</span>span<span>></span>邮箱<span>&lt;</span><span>/</span>span<span>></span><span>&lt;</span><span>/</span>th<span>></span>
          <span>&lt;</span>th<span>></span><span>&lt;</span>span<span>></span>时间<span>&lt;</span><span>/</span>span<span>></span><span>&lt;</span><span>/</span>th<span>></span>
        <span>&lt;</span><span>/</span>tr<span>></span>
      <span>&lt;</span><span>/</span>thead<span>></span>
      <span>&lt;</span>tbody<span>></span><span>{</span><span>{</span><span>~</span>it<span>:</span>v<span>:</span>k<span>}</span><span>}</span>
        <span>&lt;</span>tr<span>></span>
          <span>&lt;</span>td role<span>=</span><span>"check"</span><span>></span><span>&lt;</span>span<span>></span><span>&lt;</span>input type<span>=</span><span>"checkbox"</span> value<span>=</span><span>"{{=v.id}}"</span><span>></span><span>&lt;</span><span>/</span>span<span>></span><span>&lt;</span><span>/</span>td<span>></span>
          <span>&lt;</span>td role<span>=</span><span>"index"</span><span>></span><span>&lt;</span>span<span>></span><span>&lt;</span><span>/</span>span<span>></span><span>&lt;</span><span>/</span>td<span>></span>
          <span>&lt;</span>td role<span>=</span><span>"url"</span><span>></span><span>&lt;</span>span<span>></span><span>{</span><span>{</span><span>=</span>v<span>.</span>url<span>}</span><span>}</span><span>&lt;</span><span>/</span>span<span>></span><span>&lt;</span><span>/</span>td<span>></span>
          <span>&lt;</span>td role<span>=</span><span>"email"</span><span>></span><span>&lt;</span>span<span>></span><span>{</span><span>{</span><span>=</span>v<span>.</span>email<span>}</span><span>}</span><span>&lt;</span><span>/</span>span<span>></span><span>&lt;</span><span>/</span>td<span>></span>
          <span>&lt;</span>td role<span>=</span><span>"date"</span><span>></span><span>&lt;</span>span<span>></span><span>{</span><span>{</span><span>=</span>v<span>.</span>date<span>}</span><span>}</span><span>&lt;</span><span>/</span>span<span>></span><span>&lt;</span><span>/</span>td<span>></span>
        <span>&lt;</span><span>/</span>tr<span>></span><span>{</span><span>{</span><span>~</span><span>}</span><span>}</span>
      <span>&lt;</span><span>/</span>tbody<span>></span>
    <span>&lt;</span><span>/</span>table<span>></span></span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>script</span> <span>src</span><span><span>=</span><span>"</span>http://cdn.bootcss.com/jquery/3.2.0/jquery.min.js<span>"</span></span><span>></span></span><span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
  <span><span><span>&lt;</span>script</span> <span>src</span><span><span>=</span><span>"</span>http://cdn.bootcss.com/validator/7.0.0/validator.min.js<span>"</span></span><span>></span></span><span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
  <span><span><span>&lt;</span>script</span> <span>src</span><span><span>=</span><span>"</span>http://cdn.bootcss.com/qtip2/3.0.3/jquery.qtip.min.js<span>"</span></span><span>></span></span><span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
  <span><span><span>&lt;</span>script</span> <span>src</span><span><span>=</span><span>"</span>http://cdn.bootcss.com/dot/2.0.0-beta.0/doT.min.js<span>"</span></span><span>></span></span><span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
  <span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>$</span><span>(</span>document<span>)</span><span>.</span><span>ready</span><span>(</span><span>function</span><span>(</span><span>)</span> <span>{</span>
    <span>// 数据</span>
    <span>var</span> data <span>=</span> <span>[</span>
      <span>{</span><span>"id"</span><span>:</span> <span>"1"</span><span>,</span>  <span>"url"</span><span>:</span> <span>"163.com"</span><span>,</span>     <span>"email"</span><span>:</span> <span>"admin@163.com"</span><span>,</span>    <span>"date"</span><span>:</span> <span>"2016-09-01"</span><span>}</span><span>,</span>
      <span>{</span><span>"id"</span><span>:</span> <span>"5"</span><span>,</span>  <span>"url"</span><span>:</span> <span>"163.com"</span><span>,</span>     <span>"email"</span><span>:</span> <span>"test@163.com"</span><span>,</span>     <span>"date"</span><span>:</span> <span>"2016-09-05"</span><span>}</span><span>,</span>
      <span>{</span><span>"id"</span><span>:</span> <span>"6"</span><span>,</span>  <span>"url"</span><span>:</span> <span>"163.com"</span><span>,</span>     <span>"email"</span><span>:</span> <span>"user@163.com"</span><span>,</span>     <span>"date"</span><span>:</span> <span>"2016-09-10"</span><span>}</span><span>,</span>
      <span>{</span><span>"id"</span><span>:</span> <span>"7"</span><span>,</span>  <span>"url"</span><span>:</span> <span>"google.com"</span><span>,</span>  <span>"email"</span><span>:</span> <span>"google@gmail.com"</span><span>,</span> <span>"date"</span><span>:</span> <span>"2004-06-06"</span><span>}</span><span>,</span>
      <span>{</span><span>"id"</span><span>:</span> <span>"8"</span><span>,</span>  <span>"url"</span><span>:</span> <span>"google.com"</span><span>,</span>  <span>"email"</span><span>:</span> <span>"admin@gmail.com"</span><span>,</span>  <span>"date"</span><span>:</span> <span>"2004-01-01"</span><span>}</span><span>,</span>
      <span>{</span><span>"id"</span><span>:</span> <span>"9"</span><span>,</span>  <span>"url"</span><span>:</span> <span>"google.com"</span><span>,</span>  <span>"email"</span><span>:</span> <span>"test@gmail.com"</span><span>,</span>   <span>"date"</span><span>:</span> <span>"2006-10-10"</span><span>}</span><span>,</span>
      <span>{</span><span>"id"</span><span>:</span> <span>"11"</span><span>,</span> <span>"url"</span><span>:</span> <span>"qq.com"</span><span>,</span>      <span>"email"</span><span>:</span> <span>"admin@qq.com"</span><span>,</span>     <span>"date"</span><span>:</span> <span>"2005-12-23"</span><span>}</span><span>,</span>
      <span>{</span><span>"id"</span><span>:</span> <span>"14"</span><span>,</span> <span>"url"</span><span>:</span> <span>"qq.com"</span><span>,</span>      <span>"email"</span><span>:</span> <span>"test@qq.com"</span><span>,</span>      <span>"date"</span><span>:</span> <span>"2008-09-01"</span><span>}</span><span>,</span>
      <span>{</span><span>"id"</span><span>:</span> <span>"15"</span><span>,</span> <span>"url"</span><span>:</span> <span>"baidu.com"</span><span>,</span>   <span>"email"</span><span>:</span> <span>"admin@baidu.com"</span><span>,</span>  <span>"date"</span><span>:</span> <span>"2003-02-01"</span><span>}</span><span>,</span>
      <span>{</span><span>"id"</span><span>:</span> <span>"16"</span><span>,</span> <span>"url"</span><span>:</span> <span>"baidu.com"</span><span>,</span>   <span>"email"</span><span>:</span> <span>"test@baidu.com"</span><span>,</span>   <span>"date"</span><span>:</span> <span>"2006-12-31"</span><span>}</span>
    <span>]</span>
    <span>// 模版</span>
    <span>var</span> tmpl <span>=</span> doT<span>.</span><span>template</span><span>(</span><span>$</span><span>(</span><span>'#tmpl'</span><span>)</span><span>.</span><span>text</span><span>(</span><span>)</span><span>)</span>
    <span>// 编译模版</span>
    <span>$</span><span>(</span><span>'#data'</span><span>)</span><span>.</span><span>html</span><span>(</span><span>tmpl</span><span>(</span>data<span>)</span><span>)</span>
    <span>// 斑马纹</span>
    <span>var</span> zebra <span>=</span> <span>true</span>
    <span>$</span><span>(</span><span>'table tbody tr'</span><span>)</span><span>.</span><span>each</span><span>(</span><span>function</span><span>(</span><span>e</span><span>)</span><span>{</span>
      <span>$</span><span>(</span><span>this</span><span>)</span><span>.</span><span>addClass</span><span>(</span><span>'zebra-'</span> <span>+</span> zebra<span>)</span>
      <span>if</span><span>(</span><span>$</span><span>(</span><span>this</span><span>)</span><span>.</span><span>children</span><span>(</span><span>'td[role="url"]'</span><span>)</span><span>.</span><span>find</span><span>(</span><span>'span'</span><span>)</span><span>.</span><span>text</span><span>(</span><span>)</span> <span>!=</span>
         <span>$</span><span>(</span><span>this</span><span>)</span><span>.</span><span>next</span><span>(</span><span>)</span><span>.</span><span>children</span><span>(</span><span>'td[role="url"]'</span><span>)</span><span>.</span><span>find</span><span>(</span><span>'span'</span><span>)</span><span>.</span><span>text</span><span>(</span><span>)</span><span>)</span><span>{</span>
        zebra <span>=</span> <span>!</span>zebra
      <span>}</span>
    <span>}</span><span>)</span>
    <span>// 序号</span>
    <span>var</span> index <span>=</span> <span>0</span>
    <span>$</span><span>(</span><span>'table tbody tr'</span><span>)</span><span>.</span><span>each</span><span>(</span><span>function</span><span>(</span><span>)</span><span>{</span>
      <span>$</span><span>(</span><span>this</span><span>)</span><span>.</span><span>children</span><span>(</span><span>'td[role="index"]'</span><span>)</span><span>.</span><span>children</span><span>(</span><span>'span'</span><span>)</span><span>.</span><span>text</span><span>(</span><span>++</span>index<span>)</span>
    <span>}</span><span>)</span>
    <span>// 表格编辑</span>
    <span>var</span> typing <span>=</span> <span>false</span>                                                 <span>// 变量：可编辑</span>
    <span>var</span> pretyping <span>=</span> <span>''</span>                                                 <span>// 变量：保存编辑前内容</span>
    <span>// 进入编辑</span>
    <span>$</span><span>(</span><span>'table'</span><span>)</span><span>.</span><span>on</span><span>(</span><span>'dblclick'</span><span>,</span> <span>'tbody tr'</span><span>,</span> <span>function</span><span>(</span><span>e</span><span>)</span><span>{</span>                 <span>// 响应编辑事件</span>
      <span>if</span><span>(</span>typing<span>)</span> <span>{</span>                                                     <span>// 有编辑未完成</span>
        <span>alert</span><span>(</span><span>"输入进行中"</span><span>)</span>
      <span>}</span> <span>else</span> <span>{</span>
        <span>var</span> el <span>=</span> <span>$</span><span>(</span><span>this</span><span>)</span>
        pretyping <span>=</span> el<span>.</span><span>html</span><span>(</span><span>)</span>                                    <span>// 保存编辑前内容</span>
        el<span>.</span><span>children</span><span>(</span><span>'td[role="check"]'</span><span>)</span><span>.</span><span>find</span><span>(</span><span>'span'</span><span>)</span><span>.</span><span>html</span><span>(</span><span>[</span>      <span>// 构建操作按钮</span>
          <span>'&lt;button role="cancel">弃&lt;/button>'</span><span>,</span>
          <span>'&lt;button role="save">存&lt;/button>'</span>
        <span>]</span><span>.</span><span>join</span><span>(</span><span>'\n'</span><span>)</span><span>)</span>
        <span>// 构建行内表单</span>
        el<span>.</span><span>children</span><span>(</span><span>'td:not([role="check"],[role="index"])'</span><span>)</span><span>.</span><span>each</span><span>(</span><span>function</span><span>(</span><span>)</span><span>{</span>
          <span>$</span><span>(</span><span>this</span><span>)</span><span>.</span><span>html</span><span>(</span><span>'&lt;input type="text" value="'</span> <span>+</span> <span>$</span><span>(</span><span>this</span><span>)</span><span>.</span><span>text</span><span>(</span><span>)</span> <span>+</span> <span>'">'</span><span>)</span>
        <span>}</span><span>)</span>
        typing <span>=</span> <span>true</span>      <span>// 正在编辑</span>
      <span>}</span>
    <span>}</span><span>)</span>
    <span>// 取消编辑</span>
    <span>$</span><span>(</span><span>'table'</span><span>)</span><span>.</span><span>on</span><span>(</span><span>'click'</span><span>,</span> <span>'td[role="check"] button[role="cancel"]'</span><span>,</span> <span>function</span><span>(</span><span>e</span><span>)</span><span>{</span>
      <span>var</span> el <span>=</span> <span>$</span><span>(</span><span>this</span><span>)</span><span>.</span><span>parent</span><span>(</span><span>)</span><span>.</span><span>parent</span><span>(</span><span>)</span><span>.</span><span>parent</span><span>(</span><span>)</span>      <span>// 定位到tr</span>
      el<span>.</span><span>html</span><span>(</span>pretyping<span>)</span>                               <span>// 恢复行原始数据</span>
      typing <span>=</span> <span>false</span>                                   <span>// 可编辑</span>
    <span>}</span><span>)</span>
    <span>// 保存编辑</span>
    <span>// TODO select, textarea, ...</span>
    <span>$</span><span>(</span><span>'table'</span><span>)</span><span>.</span><span>on</span><span>(</span><span>'click'</span><span>,</span> <span>'td[role="check"] button[role="save"]'</span><span>,</span> <span>function</span><span>(</span><span>e</span><span>)</span><span>{</span>
      <span>var</span> data <span>=</span> <span>[</span><span>]</span>                                    <span>// 预定义数据（名称、验证、类型）</span>
      <span>var</span> eq <span>=</span> <span>0</span>                                       <span>// 目前使用eq，考虑统一进预定义数据</span>
      <span>var</span> el <span>=</span> <span>$</span><span>(</span><span>this</span><span>)</span><span>.</span><span>parent</span><span>(</span><span>)</span><span>.</span><span>parent</span><span>(</span><span>)</span><span>.</span><span>parent</span><span>(</span><span>)</span>              <span>// 元素定位</span>
      <span>var</span> isValid <span>=</span> <span>false</span>                                      <span>// 客户端验证</span>
      el<span>.</span><span>children</span><span>(</span><span>'td'</span><span>)</span><span>.</span><span>each</span><span>(</span><span>function</span><span>(</span><span>)</span><span>{</span>                      <span>// 遍历单元格</span>
        <span>var</span> val <span>=</span> <span>$</span><span>(</span><span>this</span><span>)</span><span>.</span><span>find</span><span>(</span><span>'input'</span><span>)</span><span>.</span><span>val</span><span>(</span><span>)</span>                 <span>// 取输入值</span>
        <span>undefined</span> <span>!=</span> val <span>&amp;&amp;</span> data<span>.</span><span>push</span><span>(</span><span>{</span> eq<span>:</span> eq<span>,</span> val<span>:</span> val <span>}</span><span>)</span>   <span>// 按需保存</span>
        eq<span>++</span>                                                  <span>// 递增索引</span>
      <span>}</span><span>)</span>
      isValid <span>=</span>                                              <span>// 统一验证</span>
        validator<span>.</span><span>isURL</span><span>(</span>data<span>[</span><span>0</span><span>]</span><span>.</span>val<span>)</span> <span>&amp;&amp;</span>
        validator<span>.</span><span>isEmail</span><span>(</span>data<span>[</span><span>1</span><span>]</span><span>.</span>val<span>)</span> <span>&amp;&amp;</span>
        validator<span>.</span><span>isISO8601</span><span>(</span>data<span>[</span><span>2</span><span>]</span><span>.</span>val<span>)</span>
      <span>if</span><span>(</span>isValid<span>)</span> <span>{</span>                                         <span>// 验证通过</span>
        <span>// TODO 新增、更新分支</span>
        <span>// TODO 服务端保存（AJAX回调）</span>
        el<span>.</span><span>html</span><span>(</span>pretyping<span>)</span>                                  <span>// 复原原始内容</span>
        <span>for</span><span>(</span>k <span>in</span> data<span>)</span> <span>{</span>                                    <span>// 遍历数据</span>
          el<span>.</span><span>children</span><span>(</span><span>'td'</span><span>)</span><span>.</span><span>eq</span><span>(</span>data<span>[</span>k<span>]</span><span>.</span>eq<span>)</span><span>.</span><span>find</span><span>(</span><span>'span'</span><span>)</span><span>.</span><span>html</span><span>(</span>data<span>[</span>k<span>]</span><span>.</span>val<span>)</span> <span>// 按需填充</span>
        <span>}</span>
        typing <span>=</span> <span>false</span>                                      <span>// 恢复可编辑</span>
      <span>}</span> <span>else</span> <span>{</span>
        <span>// 验证失败</span>
        <span>alert</span><span>(</span><span>'验证失败'</span><span>)</span>
      <span>}</span>
    <span>}</span><span>)</span>
    <span>// 数据格式提醒</span>
    <span>$</span><span>(</span><span>'table'</span><span>)</span><span>.</span><span>on</span><span>(</span><span>'blur'</span><span>,</span> <span>'input'</span><span>,</span> <span>function</span><span>(</span><span>e</span><span>)</span><span>{</span>
      <span>var</span> el <span>=</span> <span>$</span><span>(</span><span>this</span><span>)</span><span>.</span><span>parent</span><span>(</span><span>)</span>
      <span>var</span> role <span>=</span> el<span>.</span><span>attr</span><span>(</span><span>'role'</span><span>)</span>
      <span>var</span> val <span>=</span> <span>$</span><span>(</span><span>this</span><span>)</span><span>.</span><span>val</span><span>(</span><span>)</span>
      <span>switch</span><span>(</span>role<span>)</span> <span>{</span>
        <span>case</span> <span>'url'</span><span>:</span>
          validator<span>.</span><span>isURL</span><span>(</span>val<span>)</span> <span>||</span> <span>tip</span><span>(</span>el<span>,</span> <span>'网址格式错误'</span><span>)</span>
        <span>break</span>
        <span>case</span> <span>'email'</span><span>:</span>
          validator<span>.</span><span>isEmail</span><span>(</span>val<span>)</span> <span>||</span> <span>tip</span><span>(</span>el<span>,</span> <span>'邮箱格式错误'</span><span>)</span>
        <span>break</span>
        <span>case</span> <span>'date'</span><span>:</span>
          validator<span>.</span><span>isISO8601</span><span>(</span>val<span>)</span> <span>||</span> <span>tip</span><span>(</span>el<span>,</span> <span>'日期格式错误'</span><span>)</span>
        <span>break</span>
        <span>default</span><span>:</span>
        <span>break</span>
      <span>}</span>
    <span>}</span><span>)</span>
    <span>// 消除错误提示</span>
    <span>$</span><span>(</span><span>'table'</span><span>)</span><span>.</span><span>on</span><span>(</span><span>'focus'</span><span>,</span> <span>'input'</span><span>,</span> <span>function</span><span>(</span><span>e</span><span>)</span><span>{</span>
      <span>var</span> el <span>=</span> <span>$</span><span>(</span><span>this</span><span>)</span><span>.</span><span>parent</span><span>(</span><span>)</span>
      el<span>.</span><span>qtip</span><span>(</span><span>'destroy'</span><span>)</span>
      el<span>.</span><span>children</span><span>(</span><span>)</span><span>.</span><span>removeClass</span><span>(</span><span>'error'</span><span>)</span>
    <span>}</span><span>)</span>
    <span>// 出错提醒函数</span>
    <span>var</span> <span>tip</span> <span>=</span> <span>function</span><span>(</span><span>el<span>,</span> text</span><span>)</span> <span>{</span>
      el<span>.</span><span>children</span><span>(</span><span>)</span><span>.</span><span>addClass</span><span>(</span><span>'error'</span><span>)</span>
      el<span>.</span><span>qtip</span><span>(</span><span>{</span>
        content<span>:</span> <span>{</span> text<span>:</span> text <span>}</span><span>,</span>
        position<span>:</span> <span>{</span> at<span>:</span> <span>'bottom center'</span> <span>}</span><span>,</span>
        show<span>:</span> <span>{</span> ready<span>:</span> <span>true</span><span>,</span> solo<span>:</span> <span>true</span> <span>}</span>
      <span>}</span><span>)</span>
    <span>}</span>
    <span>// 全选、不选</span>
    <span>$</span><span>(</span><span>'table'</span><span>)</span><span>.</span><span>on</span><span>(</span><span>'click'</span><span>,</span> <span>'th[role="check"] input[type="checkbox"]'</span><span>,</span> <span>function</span><span>(</span><span>e</span><span>)</span><span>{</span>
      <span>$</span><span>(</span><span>'td input:nth-child(1)'</span><span>)</span><span>.</span><span>prop</span><span>(</span><span>'checked'</span><span>,</span> <span>$</span><span>(</span><span>this</span><span>)</span><span>.</span><span>is</span><span>(</span><span>':checked'</span><span>)</span><span>)</span>
    <span>}</span><span>)</span>
    <span>// 删除选中</span>
    <span>$</span><span>(</span><span>'#title'</span><span>)</span><span>.</span><span>on</span><span>(</span><span>'click'</span><span>,</span> <span>'button[role="delete"]'</span><span>,</span> <span>function</span><span>(</span><span>e</span><span>)</span><span>{</span>
      <span>var</span> checked <span>=</span> <span>[</span><span>]</span>
      <span>$</span><span>(</span><span>'#data tbody tr'</span><span>)</span><span>.</span><span>each</span><span>(</span><span>function</span><span>(</span><span>)</span><span>{</span>
        <span>var</span> tr <span>=</span> <span>$</span><span>(</span><span>this</span><span>)</span>
        <span>var</span> checkbox <span>=</span> tr<span>.</span><span>children</span><span>(</span><span>'td[role="check"]'</span><span>)</span><span>.</span><span>find</span><span>(</span><span>'input[type="checkbox"]'</span><span>)</span>
        checkbox<span>.</span><span>is</span><span>(</span><span>':checked'</span><span>)</span> <span>&amp;&amp;</span> checked<span>.</span><span>push</span><span>(</span>checkbox<span>.</span><span>val</span><span>(</span><span>)</span><span>)</span>
      <span>}</span><span>)</span>
      <span>alert</span><span>(</span><span>JSON</span><span>.</span><span>stringify</span><span>(</span>checked<span>)</span><span>)</span>
    <span>}</span><span>)</span>
  <span>}</span><span>)</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
<span><span><span>&lt;/</span>body</span><span>></span></span>
<span><span><span>&lt;/</span>html</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br><span>84</span><br><span>85</span><br><span>86</span><br><span>87</span><br><span>88</span><br><span>89</span><br><span>90</span><br><span>91</span><br><span>92</span><br><span>93</span><br><span>94</span><br><span>95</span><br><span>96</span><br><span>97</span><br><span>98</span><br><span>99</span><br><span>100</span><br><span>101</span><br><span>102</span><br><span>103</span><br><span>104</span><br><span>105</span><br><span>106</span><br><span>107</span><br><span>108</span><br><span>109</span><br><span>110</span><br><span>111</span><br><span>112</span><br><span>113</span><br><span>114</span><br><span>115</span><br><span>116</span><br><span>117</span><br><span>118</span><br><span>119</span><br><span>120</span><br><span>121</span><br><span>122</span><br><span>123</span><br><span>124</span><br><span>125</span><br><span>126</span><br><span>127</span><br><span>128</span><br><span>129</span><br><span>130</span><br><span>131</span><br><span>132</span><br><span>133</span><br><span>134</span><br><span>135</span><br><span>136</span><br><span>137</span><br><span>138</span><br><span>139</span><br><span>140</span><br><span>141</span><br><span>142</span><br><span>143</span><br><span>144</span><br><span>145</span><br><span>146</span><br><span>147</span><br><span>148</span><br><span>149</span><br><span>150</span><br><span>151</span><br><span>152</span><br><span>153</span><br><span>154</span><br><span>155</span><br><span>156</span><br><span>157</span><br><span>158</span><br><span>159</span><br><span>160</span><br><span>161</span><br><span>162</span><br><span>163</span><br><span>164</span><br><span>165</span><br><span>166</span><br><span>167</span><br><span>168</span><br><span>169</span><br><span>170</span><br><span>171</span><br><span>172</span><br><span>173</span><br><span>174</span><br><span>175</span><br><span>176</span><br><span>177</span><br><span>178</span><br><span>179</span><br><span>180</span><br><span>181</span><br><span>182</span><br><span>183</span><br><span>184</span><br><span>185</span><br><span>186</span><br><span>187</span><br><span>188</span><br><span>189</span><br><span>190</span><br><span>191</span><br><span>192</span><br><span>193</span><br><span>194</span><br><span>195</span><br></div></div><blockquote>
<p>方跃明
2016-10-30</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>Docker、kubernetes和Apache Mesos之间的正确关系</title>
      <link>https://blog.fangyueming.cn/kubernetes-docker-mesos/</link>
      <guid>https://blog.fangyueming.cn/kubernetes-docker-mesos/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">Docker、kubernetes和Apache Mesos之间的正确关系</source>
      <pubDate>Sun, 29 Apr 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="docker、kubernetes和apache-mesos之间的正确关系"> Docker、kubernetes和Apache Mesos之间的正确关系</h1>
<p><a href="http://www.techug.com/post/docker-vs-kubernetes-vs-apache-mesos.html" target="_blank" rel="noopener noreferrer">http://www.techug.com/post/docker-vs-kubernetes-vs-apache-mesos.html</a></p>
<p>无数的文章、社交媒体在探讨Docker、kubernetes、Mesos三者之间孰优孰劣。如果你听信了某些一知半解者的言论，你可能会认为这三个开源项目正在为争夺容器霸权而殊死战斗。同时，你也会相信，在这三者间的选择无异于对其所奉宗教的信仰，而且真正的信徒敢于大胆和异教徒作斗争，并且拥护自己的信仰。</p>
<p>那些都是扯淡。</p>
<p>虽然这三种技术都可以使用容器来部署、管理和扩展应用程序，但实际上它们每个都侧重解决不同的问题，并且扎根非常不同的环境之上。事实上，这三种被广泛采用的工具链彼此完全不同。</p>
<p>与其比较这些快速演进的技术的重叠特性，不如让我们回顾一下每个项目的原始任务、架构以及它们之间如何相互补充和交互。</p>
<h2 id="docker"> Docker</h2>
<p>今天的Docker公司脱胎于一个平台即服务的初创公司dotCloud。dotCloud团队发现，在许多应用程序和客户之间管理依赖关系和二进制文件需要做大量的工作。因此，他们将Linux cgroups和namespaces的一些功能组合成一个简单易用的包，这样应用程序就可以在任何基础设施上持续运行。这个包就是Docker镜像，它提供以下功能:</p>
<ol>
<li>
<p>将应用程序和库封装在单个包中(Docker镜像)，因此应用程序可以跨多环境一致部署;
提供类似于git的语义，例如“dockerpush”，“docker commit”，这样可以让应用程序开发人员可以轻松地采用新技术，并将其融入到现有的workflow中;</p>
</li>
<li>
<p>将Docker镜像定义为不可变层，启用不可变的基础设施。提交的更改被存储为一个单独的只读层，这让镜像复用和跟踪更改变得更加容易。另外，层还可以通过传输更新而不是整个镜像来节省磁盘空间和网络流量;</p>
</li>
<li>
<p>通过使用可以临时存储运行时更改的可写层来实例化不可变映像，从而方便快速部署和扩展应用程序的多个实例。</p>
</li>
<li>
<p>随着Docker的风靡，开发人员开始从笔记本电脑转移到在生产环境中运行。这就需要借助工具来协调这些容器，我们称为容器编排。有趣的是，Apache Mesos的Marathon成为当时(2014年6月)第一个支持Docker镜像的容器编排工具(我们将在下面详细描述它)。就连Docker创始人、首席技术官Solomon Hykes也推荐Mesos为“生产集群的黄金标准”。不久之后，除了Marathon之外，许多容器编排技术出现了，这其中包括：Nomad、kubernetes、DockerSwarm(现在是Docker引擎的一部分)。</p>
</li>
</ol>
<p>随着Docker开始商业化开源文件格式，该公司也开始引入工具来补充核心Docker文件格式和runtime引擎，包括:</p>
<ul>
<li>Docker hub</li>
<li>Docker registry</li>
<li>Docker cloud</li>
<li>Docker datacenter</li>
</ul>
<p><img src="./docker-architecture.png" alt="Docker结构" /></p>
<p>​Docker让开发者可以打包他们的应用以及依赖包到一个可移植的容器中的特性，使其成为软件行业的游戏规则改变者;这有点类似mp3格式帮助重塑了音乐产业。Docker文件格式成为行业标准，并且领导容器技术供应商(包括Docker、Pivotal, Mesosphere以及其他许多)成立CNCF和OCI。今天，CNCF和OCI的目标就是确保跨容器技术的互操作性和标准化接口，并确保使用任何工具构建的Docker容器，都可以在任何runtime或基础设施上运行。</p>
<h2 id="kubernetes"> kubernetes</h2>
<p>谷歌很早就认识到Docker镜像的潜力，并试图在谷歌云平台上交付“容器编排即服务”。谷歌在容器方面有丰富的经验(他们在Linux中引入了cgroups)，但是现有的内部容器和像Borg这样的分布式计算工具与它们的基础设施直接耦合。因此，谷歌没有使用现有系统中的任何代码，而是从头开始设计了kubernetes，以编排Docker容器。kubernetes于2015年2月发布，并提出以下目标和考虑:</p>
<ol>
<li>为应用程序开发人员提供一个强大的工具，用于Docker容器编排，而不必与底层基础设施交互;</li>
<li>跨云环境下，为一致的应用程序部署经验和APIs 提供标准部署接口和原型;</li>
<li>构建一个模块化的API核心，允许供应商围绕核心kubernetes技术集成系统。</li>
</ol>
<p>截至2016年3月，谷歌向CNCF捐赠了kubernetes，至今谷歌仍是该项目的主要贡献者(其次是Redhat、CoreOS等)。</p>
<p><img src="./architecture.png" alt="kubernetes结构" /></p>
<p>kubernetes对应用程序开发人员非常有吸引力，因为它减少了对基础设施和操作团队的依赖。供应商也非常喜欢kubernetes，因为它提供了一种简单的方式来让他们拥抱容器运动，并为他们运行自己的kubernetes部署提供一个商业化解决方案。kubernetes之所以很有吸引力，因为它是CNCF下的开源项目，与Docker集群相比，后者虽然是开源的，但却受到Docker Inc .的严格控制。</p>
<p>kubernetes的核心优势是为应用程序开发人员提供强大的工具来编排无状态的Docker容器。虽然有多个计划将项目的范围扩展到更多的工作负载(如分析和有状态的数据服务)，但这些计划仍然处于非常早期的阶段，还有待观察。</p>
<h2 id="apache-mesos"> Apache Mesos</h2>
<p>Apache Mesos最初是UCBerkeley为创建下一代集群管理器而诞生的项目，并从如谷歌的Borg和Facebook的Tupperware中吸取经验教训。但是Borg和Tupperware是单体架构，并且是和物理基础设施绑定的封源专有技术。Mesos引入了模块化架构，采用开源的方法，且其设计完全独立于底层基础架构。基于这些因素，Mesos很快被Twitter、Apple(Siri)、Yelp、Uber、Netflix以及许多领先的科技公司所采用，以支持他们在微服务、大数据和实时分析到弹性伸缩的一切实践。</p>
<p>作为一个集群管理器，Mesos的架构是为了解决一组非常不同的挑战:</p>
<ol>
<li>将数据中心资源整合成一个单一的池，以简化资源配置，同时在私有或公共云之间提供一致的应用程序和操作体验;</li>
<li>在相同的基础设施上使用不同的工作负载，比如分析、无状态微服务、分布式数据服务和传统应用程序，以提高利用率，降低成本和空间;</li>
<li>特定应用程序的任务(如部署、自修复、扩展和升级)设置为自动化day-two 操作;提供高可用的容错基础设施;</li>
<li>在不修改集群管理器或现有应用程序的情况下，提供常绿的可扩展性来运行新的应用程序和技术;</li>
<li>将应用程序和底层基础设施弹性扩展到数万个节点。</li>
</ol>
<p>Mesos的独特之处还在于，可以单独管理各种不同的工作负载——包括传统的应用程序，如Java、无状态Docker微服务、批处理作业、实时分析和有状态的分布式数据服务。Mesos广泛的工作负载覆盖来自于它的两级架构，它支持“应用感知”的调度。应用感知调度是通过将应用程序特定操作逻辑封装到“Mesos框架”(类似于运行中的runbook)来完成的。</p>
<p>Mesos Master资源管理器，提供这些底层基础设施的框架部分，同时保持隔离。这种方法允许每个工作负载有自己专用的应用程序调度器，它了解其对部署、缩放和升级的具体操作需求。应用程序调度程序也独立地被开发、管理和更新，这让Mesos保持高度可扩展性，支持新的工作负载，或者随着时间的推移增加更多的操作能力。</p>
<p><img src="./mesos.png" alt="Mesos结构" /></p>
<p>以一个团队如何管理升级为例。无状态应用程序可以从“蓝/绿”部署方法中获益;当旧的应用程序还在使用的时候，另一个完整版本的应用程序已经spun up，当旧的应用程序被销毁时，流量切换到新的应用程序。但是，升级像HDFS或Cassandra这样的数据工作负载需要一次脱机，维护本地数据量以避免数据丢失，执行特定序列的升级，并在升级之前和之后对每个节点类型执行特殊检查和命令。这些步骤中的所有环节针对特定的应用程序或服务，甚至是特定版本进行的。这使得用常规容器编排调度器管理数据服务变得非常困难。</p>
<p>Mesos具备按需管理每个工作负载的能力，使得许多公司将Mesos作为一个统一的平台，并通过其将微服务和数据服务结合运行。运行数据密集型应用程序的一个通用参考架构是“SMACK堆栈”。</p>
<h2 id="清晰时刻"> 清晰时刻</h2>
<p>注意：我们在描述Apache Mesos的过程中，没有提及任何关于容器编排的内容。那么，为什么人们总是会将Mesos与容器编排联系起来呢？容器编排是一个可以在Mesos模块化架构上运行的工作负载的例子，它使用的是构建在Mesos上的一个专门的编排“框架”Marathon。Marathon最初是为了在cgroup容器中编排应用程序(如JARs、tarball、ZIP文件)而开发的，并且在2014年成为第一批支持Docker容器的容器编排之一。</p>
<p>因此，当人们拿Docker、kubernetes和Mesos比较时，他们实际上是在对比kubernetes、Docker Swarm和Mesos上运行的Marathon。</p>
<p>为什么这很重要？因为Mesos根本不关心上面跑的是什么。Mesos可以为Java应用服务器、Docker容器编排、Jenkins CI Jobs, Apache Spark analytics, Apache Kafka streaming以及更多的共享基础设施提供集群服务。Mesos甚至可以运行kubernetes或其他容器编排，尽管还没有对外集成。</p>
<p>Mesos的另一个考虑(以及为什么它对许多企业架构师有吸引力)是它在运行任务关键工作负载时的成熟度。Mesos已经在大规模生产环境下运行(数万台服务器)超过7年，这就是为什么它比市场上其他技术更成熟，更可靠的原因。</p>
<h2 id="这一切意味着什么"> 这一切意味着什么？</h2>
<p>总之，这三种技术都与Docker容器有关，并允许您访问容器编排，以获得应用程序的可移植性和伸缩性。那么在这三者间要如何选择呢？这就要视不同的工作环境需求而定，工作需求不同，所适用的工具自然也是各不相同。如果您是一名应用程序开发人员，并且正在寻找一种现代的方法来构建和打包您的应用程序，或者加快微服务项目，那么Docker容器格式和开发工具是你最好的选择。</p>
<p>如果你是一个dev / devops团队,想要构建一个专门的docker容器编排系统,并愿意亲自动手让你的解决方案和底层基础设施集成(或依赖于公共云基础设施如谷歌引擎或Azure容器服务),kubernetes将是你一个很好的选项。</p>
<p>如果您想构建一个可靠的平台，用以运行多任务关键工作负载，包括Docker容器、遗留应用程序(例如Java)和分布式数据服务(例如Spark、Kafka、Cassandra、Elastic)，并希望所有这些都可以在云或数据中心上可移植，那么，Mesos是最适合你的。</p>
<p>无论你作何选择，你所拥抱的一系列工具都将提升你的服务器资源利用率，同时简化应用程序移植，并提高开发人员的敏捷性。你真的值得拥有！</p>
]]></content:encoded>
    </item>
    <item>
      <title>kubernetes安装指南</title>
      <link>https://blog.fangyueming.cn/kubernetes-install/</link>
      <guid>https://blog.fangyueming.cn/kubernetes-install/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">kubernetes安装指南</source>
      <pubDate>Sun, 29 Apr 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="kubernetes安装指南"> kubernetes安装指南</h1>
<p><img src="./container.jpg" alt="容器生态圈" /></p>
<h2 id="简介"> 简介</h2>
<h3 id="kubernetes"> kubernetes</h3>
<p>kubernetes（简称k8s）是Google开源的容器集群管理系统。它构建Ddocker技术之上，为容器化的应用提供资源调度、部署运行、服务发现、扩容缩容等整一套功能，本质上可看作是基于容器技术的mini-PaaS平台。</p>
<p><img src="./architecture.png" alt="kubernetes" /></p>
<h3 id="kubernetes-master"> kubernetes-master</h3>
<ul>
<li>kube-apiserver：k8s的管理接口</li>
<li>kube-scheduer：k8s调度器，容器的启动、迁移、扩容缩减时候，选择哪个node，就看它了。</li>
<li>kube-controller-manager：k8s对node的控制行为，比如怎么去调用node启动一个容器。</li>
</ul>
<h3 id="kubernetes-node"> kubernetes-node</h3>
<ul>
<li>kubelet：负责node的管理，基本所有操作都靠它。</li>
<li>kube-proxy：每个node里的container都在一个私有网络中，kube-proxy的作用就是做一个反向代理，让访问者访问这个node的时候，可以转发到内部对应的container。</li>
</ul>
<h3 id="flannel"> flannel</h3>
<p>flannel可以为容器提供网络服务。其模型为全部的容器使用一个network，然后在每个host上从network中划分一个子网subnet。为host上的容器创建网络时，从subnet中划分一个ip给容器。其采用目前比较流行的no server的方式，即不存在所谓的控制节点，而是每个host上的flanneld从一个etcd中获取相关数据，然后声明自己的子网网段，并记录在etcd中。其他的host对数据转发时，从etcd中查询到该子网所在的host的ip，然后将数据发往对应host上的flanneld，交由其进行转发。根据kubernetes的模型，即为每个pod提供一个ip。flannel的模型正好与之契合。因此flannel是最简单易用的kubernetes集群网络方案。</p>
<p><img src="./cluster.png" alt="flannel" /></p>
<h3 id="etcd"> etcd</h3>
<p>在分布式系统中，如何管理节点间的状态一直是一个难题，etcd像是专门为集群环境的服务发现和注册而设计，它提供了数据TTL失效、数据改变监视、多值、目录监听、分布式锁原子操作等功能，可以方便的跟踪并管理集群节点的状态。etcd的特性如下：</p>
<ul>
<li>简单: curl可访问的用户的API（HTTP+JSON）</li>
<li>安全: 可选的SSL客户端证书认证</li>
<li>快速: 单实例每秒 1000 次写操作</li>
<li>可靠: 使用Raft保证一致性</li>
</ul>
<p>etcd是CoreOS的核心组件，负责节点间的服务发现和配置共享，运行在CoreOS中的应用可以通过etcd读取或者写入数据。虽然etcd是为CoreOS而设计，但其可以运行在多个平台上，包括 OS X、Linux、BSD。角色功能如下：</p>
<ul>
<li>作为kubernetes的数据库，存储了k8s自身的信息、以及各种业务容器信息等。</li>
<li>存储flannel网络配置信息，供各节点协调。</li>
</ul>
<p><img src="./etcd.png" alt="etcd" /></p>
<h3 id="docker"> docker</h3>
<p>Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的Linux机器上，也可以实现虚拟化，容器是完全使用沙箱机制，相互之间不会有任何接口。一个完整的Docker有以下几个部分组成：</p>
<ul>
<li>Client：客户端</li>
<li>Daemon：守护进程</li>
<li>Container：容器</li>
<li>Image：镜像</li>
</ul>
<p><img src="./docker.png" alt="docker" /></p>
<h2 id="规划"> 规划</h2>
<p>本例虽然均用IP进行操作，但是建议部署的时候，建议用hosts或者DNS取代IP。</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>组件</th>
<th style="text-align:center">数量</th>
<th>IP</th>
</tr>
</thead>
<tbody>
<tr>
<td>Master</td>
<td>kubernetes-master etcd</td>
<td style="text-align:center">1</td>
<td>192.168.20.25</td>
</tr>
<tr>
<td>Node</td>
<td>kubernetes-node docker flannel</td>
<td style="text-align:center">2</td>
<td>192.168.20.22 192.168.20.26</td>
</tr>
</tbody>
</table>
<p><img src="./flannel.png" alt="kubernetes with Flannel" /></p>
<h3 id="前提"> 前提</h3>
<ul>
<li>SELinux关闭</li>
<li>firewalld开放8080、2379端口</li>
</ul>
<h2 id="配置"> 配置</h2>
<h3 id="etcd配置"> etcd配置</h3>
<div><pre><code><span># 安装</span>
yum <span>install</span> etcd
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><div><pre><code><span># 配置 /etc/etcd/etcd.conf</span>
<span>ETCD_NAME</span><span>=</span><span>default</span>
<span>ETCD_DATA_DIR</span><span>=</span><span>"<span>/var/lib/etcd/default.etcd</span>"</span>
<span>ETCD_LISTEN_CLIENT_URLS</span><span>=</span><span>"<span>http://0.0.0.0:2379</span>"</span>
<span>ETCD_ADVERTISE_CLIENT_URLS</span><span>=</span><span>"<span>http://192.168.20.25:2379</span>"</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><pre><code><span># 启动</span>
systemctl <span>enable</span> etcd
systemctl start etcd
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code>etcdctl <span>set</span> /coreos.com/network/config <span>'{ "Network": "10.1.0.0/16" }'</span>
</code></pre>
<div><span>1</span><br></div></div><h4 id="master"> master</h4>
<div><pre><code><span># 安装</span>
yum <span>install</span> kubernetes-master
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><div><pre><code><span># 配置 /etc/kubernetes/apiserver</span>
<span>KUBE_API_ADDRESS</span><span>=</span><span>"<span>--address=0.0.0.0</span>"</span>
<span>KUBE_ETCD_SERVERS</span><span>=</span><span>"<span>--etcd_servers=http://192.168.20.25:2379</span>"</span>
<span>KUBE_SERVICE_ADDRESSES</span><span>=</span><span>"<span>--service-cluster-ip-range=10.254.0.0/16</span>"</span>
<span>KUBE_ADMISSION_CONTROL</span><span>=</span><span>"<span>--admission_control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ResourceQuota</span>"</span>
<span>KUBE_API_ARGS</span><span>=</span><span>""</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><div><pre><code><span># 配置 /etc/kubernetes/controller-manager</span>
<span>KUBE_CONTROLLER_MANAGER_ARGS</span><span>=</span><span>"<span>--node-monitor-grace-period=10s --pod-eviction-timeout=10s</span>"</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><div><pre><code><span># 配置 /etc/kubernetes/config</span>
<span>KUBE_LOGTOSTDERR</span><span>=</span><span>"<span>--logtostderr=true</span>"</span>
<span>KUBE_LOG_LEVEL</span><span>=</span><span>"<span>--v=0</span>"</span>
<span>KUBE_ALLOW_PRIV</span><span>=</span><span>"<span>--allow_privileged=false</span>"</span>
<span>KUBE_MASTER</span><span>=</span><span>"<span>--master=http://192.168.20.25:8080</span>"</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><pre><code><span># 启动服务</span>
systemctl <span>enable</span> kube-apiserver kube-scheduler kube-controller-manager
systemctl start kube-apiserver kube-scheduler kube-controller-manager
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h3 id="node"> node</h3>
<div><pre><code><span># 安装</span>
yum <span>install</span> kubernetes-node flannel docker
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><div><pre><code><span># 配置 /etc/kubernetes/config</span>
<span>KUBE_LOGTOSTDERR</span><span>=</span><span>"<span>--logtostderr=true</span>"</span>
<span>KUBE_LOG_LEVEL</span><span>=</span><span>"<span>--v=0</span>"</span>
<span>KUBE_ALLOW_PRIV</span><span>=</span><span>"<span>--allow_privileged=false</span>"</span>
<span>KUBE_MASTER</span><span>=</span><span>"<span>--master=http://192.168.20.25:8080</span>"</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><pre><code><span># 配置 /etc/kubernetes/kubelet</span>
<span>KUBELET_ADDRESS</span><span>=</span><span>"<span>--address=127.0.0.1</span>"</span>
<span>KUBELET_HOSTNAME</span><span>=</span><span>"<span>--hostname_override=192.168.20.22</span>"</span>
<span>KUBELET_API_SERVER</span><span>=</span><span>"<span>--api_servers=http://192.168.20.25:8080</span>"</span>
<span>KUBELET_ARGS</span><span>=</span><span>"<span>--pod-infra-container-image=kubernetes/pause</span>"</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><pre><code><span># 配置 /etc/sysconfig/flanneld</span>
<span>FLANNEL_ETCD</span><span>=</span><span>"<span>http://192.168.20.25:2379</span>"</span>
<span>FLANNEL_ETCD_KEY</span><span>=</span><span>"<span>/coreos.com/network</span>"</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code>systemctl <span>enable</span> kubelet kube-proxy flanenld docker
systemctl start kubelet kube-proxy flanneld docker
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>LeoPHP Framework</title>
      <link>https://blog.fangyueming.cn/leophp/</link>
      <guid>https://blog.fangyueming.cn/leophp/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">LeoPHP Framework</source>
      <pubDate>Thu, 01 Dec 2016 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="leophp-framework"> LeoPHP Framework</h1>
<h2 id="更新"> 更新</h2>
<p>细微改动不再同步更新到coding.net，请移步：</p>
<ul>
<li><a href="https://github.com/axolo/leophp" target="_blank" rel="noopener noreferrer">https://github.com/axolo/leophp</a></li>
<li><a href="https://packagist.org/packages/axolo/leophp" target="_blank" rel="noopener noreferrer">https://packagist.org/packages/axolo/leophp</a></li>
</ul>
<h2 id="说明"> 说明</h2>
<ul>
<li>ver
<ul>
<li>Version: 0.1.4</li>
<li>Required: PHP&gt;=5.3 &amp;&amp; PDO</li>
<li>初步完成MVC</li>
</ul>
</li>
<li>app
<ul>
<li>完成controller、action、view映射</li>
<li>当前env存取（未完成）</li>
</ul>
</li>
<li>controller
<ul>
<li>基本上完全没写</li>
</ul>
</li>
<li>model
<ul>
<li>基本上完全没写</li>
<li><em><strong>防止SQL攻击</strong></em>（请手动使用Utils::sql()）</li>
</ul>
</li>
<li>view
<ul>
<li>注入视图变量名：<code>$res</code>（属于裸奔状态）</li>
<li>完成View::jsonp($res)</li>
<li><em><strong>防止XSS攻击</strong></em>（请手动使用Utils::xss()）</li>
<li>可指定视图渲染（未完成）</li>
</ul>
</li>
<li>config
<ul>
<li>用户配置合并默认配置</li>
</ul>
</li>
<li>plugin
<ul>
<li>完成用户插件按配置加载及自动忽略不存在配置</li>
</ul>
</li>
<li>stroage
<ul>
<li>目前可用扩展自PDO（偷懒）</li>
<li>或者可以medoo？</li>
</ul>
</li>
<li>utils
<ul>
<li>Utils::xss($htm)
<ul>
<li>防止XSS跨站攻击，echo和print时请考虑使用</li>
</ul>
</li>
<li>Utils::sql($sql)
<ul>
<li>防止SQL注入攻击，客户端输入SQL时务必使用</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="安装"> 安装</h2>
<h3 id="composer"> Composer</h3>
<ul>
<li><a href="http://docs.phpcomposer.com" target="_blank" rel="noopener noreferrer">Composer中文文档</a></li>
<li>composer.json: <code>&quot;require&quot;: { &quot;php&quot;: &quot;&gt;=5.3&quot;, &quot;axolo/leophp&quot;: &quot;@dev&quot; }</code></li>
<li><code>composer update</code></li>
</ul>
<h3 id="目录"> 目录</h3>
<div><pre><code>app
 ├─ vendor            //Composer
 │    └─ axolo
 │         └─ leophp  //LeoPHP framework
 ├─ config
 │    └─ config.php   //App config
 ├─ controllers
 │    └─ Index.php
 ├─ models
 │    └─ Blog.php
 ├─ plugins
 │    └─ cros.php
 ├─ html             //(optional) only a example
 │    └─ jsonp.html  //json or jsonp response example
 └─ views
      └─ index
           └─ index.php
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><h3 id="配置"> 配置</h3>
<div><pre><code><span><span>&lt;?php</span>
<span>/**
 * LeoPHP Framework config file
 * @todo  array_merge(default_config, user_config)
 */</span>
<span>return</span> <span>array</span><span>(</span>
  <span>'core'</span> <span>=></span> <span>array</span><span>(</span>
    <span>//pathinfo:     /index.php/controller/action</span>
    <span>//querystring:  /index.php?controller=string&amp;action=string (@todo)</span>
    <span>//urlrewrite:   /controller/action (@todo may be just a .htaccess)</span>
    <span>'request'</span> <span>=></span> <span>'pathinfo'</span><span>,</span>
    <span>//json:   JSON      Conflux Response, e.g. RESTful</span>
    <span>//jsonp:  JSONP     (@todo)</span>
    <span>//xml:    XML       (@todo)</span>
    <span>//html:   HTML      default output, view render</span>
    <span>'response'</span> <span>=></span> <span>'json'</span><span>,</span>
    <span>//controller: ucfirst(controller)</span>
    <span>'controller'</span> <span>=></span> <span>'index'</span><span>,</span>
    <span>//action: default index</span>
    <span>'action'</span> <span>=></span> <span>'index'</span><span>,</span>
    <span>//charset: default utf8</span>
    <span>'charset'</span> <span>=></span> <span>'utf8'</span>
  <span>)</span><span>,</span>
  <span>// ./plugins/plugins[key].php || framework/plugins[key].php</span>
  <span>//Array[plugin => params]</span>
  <span>'plugins'</span> <span>=></span> <span>array</span><span>(</span>
    <span>'cors'</span> <span>=></span> <span>true</span><span>,</span>               <span>//CORS</span>
    <span>'rbac'</span> <span>=></span> <span>true</span><span>,</span>               <span>//RBAC</span>
    <span>'restful'</span> <span>=></span> <span>false</span><span>,</span>           <span>//RESTful</span>
    <span>'oauth'</span> <span>=></span> <span>array</span><span>(</span><span>)</span><span>,</span>           <span>//OAuth</span>
    <span>'sso'</span> <span>=></span> <span>false</span><span>,</span>               <span>//Single Sign-On</span>
    <span>'debug'</span> <span>=></span> <span>true</span><span>,</span>              <span>//Debug</span>
    <span>'halt'</span> <span>=></span> <span>'out of service'</span><span>,</span>   <span>//Service halt</span>
    <span>'hash'</span> <span>=></span> <span>'String of secret'</span>  <span>//COOKIE, password, token ...</span>
  <span>)</span><span>,</span>
  <span>//Database Conection</span>
  <span>'storage'</span> <span>=></span> <span>array</span><span>(</span>
    <span>'engine'</span> <span>=></span> <span>'pdo'</span><span>,</span>
    <span>'dsn'</span> <span>=></span> <span>'mysql:host=localhost;dbname=information_schema'</span><span>,</span>
    <span>'user'</span> <span>=></span> <span>'root'</span><span>,</span>
    <span>'password'</span> <span>=></span> <span>'google'</span><span>,</span>     <span>//Eh~~~</span>
    <span>'options'</span> <span>=></span> <span>array</span><span>(</span><span>)</span>
  <span>)</span><span>,</span>
  <span>//Farmework Infomation (Just for funny!)</span>
  <span>'framework'</span> <span>=></span> <span>array</span><span>(</span>
    <span>'name'</span> <span>=></span> <span>'LeoPHP'</span><span>,</span>
    <span>'version'</span> <span>=></span> <span>'0.1.4'</span><span>,</span>
    <span>'author'</span> <span>=></span> <span>'Yueming Fang'</span><span>,</span>
    <span>'git'</span> <span>=></span> <span>'https://github.com/axolo/leophp'</span>
  <span>)</span>
<span>)</span><span>;</span>
</span></code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br></div></div><h3 id="应用入口-index-php"> 应用入口：index.php</h3>
<div><pre><code><span><span>&lt;?php</span>
<span>require</span> <span>'../vendor/autoload.php'</span><span>;</span>

<span>use</span> <span>leophp<span>\</span>App</span>        <span>as</span> App<span>;</span>
<span>use</span> <span>leophp<span>\</span>Controller</span> <span>as</span> Controller<span>;</span>
<span>use</span> <span>leophp<span>\</span>Model</span>      <span>as</span> Model<span>;</span>
<span>use</span> <span>leophp<span>\</span>Storage</span>    <span>as</span> Storage<span>;</span>

<span>$config</span> <span>=</span> <span>__DIR__</span> <span>.</span> <span>DIRECTORY_SEPARATOR</span> <span>.</span><span>'config'</span> <span>.</span> <span>DIRECTORY_SEPARATOR</span> <span>.</span> <span>'config.php'</span><span>;</span>

<span>App</span><span>::</span><span>run</span><span>(</span><span>$config</span><span>)</span><span>;</span>
</span></code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><ul>
<li>控制器：controllers/Index.php</li>
</ul>
<div><pre><code><span><span>&lt;?php</span>
<span>namespace</span> <span>leophp</span><span>;</span>

<span>class</span> <span>Index</span> <span>extends</span> <span>Controller</span> <span>{</span>

  <span>public</span> <span>function</span> <span>index</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>array</span><span>(</span><span>'controller'</span> <span>=></span> <span>'index'</span><span>,</span> <span>'action'</span> <span>=></span> <span>'index'</span><span>)</span><span>;</span>
  <span>}</span>

<span>}</span>
</span></code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><h3 id="视图-views-index-index-php"> 视图：views/index/index.php</h3>
<div><pre><code><span><span>&lt;!</span><span>DOCTYPE</span> <span>html</span><span>></span></span>
<span><span><span>&lt;</span>html</span> <span>lang</span><span><span>=</span><span>"</span>en<span>"</span></span><span>></span></span>
<span><span><span>&lt;</span>head</span><span>></span></span>
  <span><span><span>&lt;</span>meta</span> <span>charset</span><span><span>=</span><span>"</span>UTF-8<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>title</span><span>></span></span>index/index<span><span><span>&lt;/</span>title</span><span>></span></span>
<span><span><span>&lt;/</span>head</span><span>></span></span>
<span><span><span>&lt;</span>body</span><span>></span></span>
  <span><span>&lt;?php</span> <span>var_dump</span><span>(</span><span>$res</span><span>)</span><span>;</span> <span>?></span></span>
<span><span><span>&lt;/</span>body</span><span>></span></span>
<span><span><span>&lt;/</span>html</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><h2 id="答疑"> 答疑</h2>
<ul>
<li>配置文件为什么不用json或者ini格式？好吧，可以写注释，可以写逻辑，而且避免不小心被访问，省心。君不见<code>webpack.config.js</code>也这么干？</li>
<li>为什么很多都基本上没写？这个……好吧，的确是因为懒。懒是一种态度。我们的口号是：懒，要向Symfony、Laravel看齐！我要轮子！——这借口，没谁了吧。</li>
</ul>
<h2 id="由来"> 由来</h2>
<p>由于工作需要，重新开始用PHP，折腾好几个框架（<s>班主任：这里就不点名了</s>），臃肿厚重，可谓专治各种不服，终于被感动到哭了。</p>
<p>一个曾经辉煌在前端的服务端脚本语言，本来草根得很，一定各种作，非高大上到无人敢碰才好。</p>
<p>换做华妃娘娘来，必定又是那句经典名言：“贱人就是矫情”。有必要搞得如此混乱不堪么？清爽干净不好么？</p>
<p>非常怀念我亲爱的Node.js、Vue、Express，甚至对冷落许久的jQuery也莫名觉得亲切，相貌可人了。</p>
<p>——网上说饥渴已久的人，看到一头老母猪，都觉得眉清目秀，也许这就是这种感觉罢。</p>
<p>哭了归哭了，还是得用PHP来写，环境是用来迁就的，除非自己牛到不行，可惜我属马，那就自己写一个拉倒吧。</p>
<p>想起几年前混论坛那段时间对PHP的感悟，这么多年来PHP的发展也许更加印证了我的看法。</p>
<p>想想其实并非PHP本身的罪过，人家Facebook不是用得好好的？也许是使唤PHP的某些人暂时迷茫了方向，大炮轰蚂蚁，何其壮观！</p>
<ul>
<li><a href="http://www.iteye.com/topic/523378" target="_blank" rel="noopener noreferrer">有感于“论PHP的倒掉”</a></li>
<li><a href="http://www.iteye.com/topic/319039" target="_blank" rel="noopener noreferrer">PHP框架的繁荣是正确的发展方向吗？</a></li>
</ul>
<blockquote>
<p>方跃明
2016-12-01</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>LeoVue的由来</title>
      <link>https://blog.fangyueming.cn/leovue-why/</link>
      <guid>https://blog.fangyueming.cn/leovue-why/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">LeoVue的由来</source>
      <pubDate>Sun, 19 Aug 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="leovue的由来"> LeoVue的由来</h1>
<p>几十年来传统软件服务商店大欺客的现状，于信者毋庸多言，于疑者多说无益。
以至于业界流传有民谣，叫做“<strong>一流的公关，二流的营销，三流的技术，四流的服务</strong>”。
往往一个毛坯交付上线，客户如若后续没有二次开发的需求，可以借此多多进账，
服务商此后便想着撒手不管，丢给售后服务部门提供日常的电话支持，每年却收着不菲的服务年费。
甚至于连起码的基本服务都敷衍应付，所谓文档寥寥几页纸，全要所谓技术工程师口传心授。
因为系统大多封闭，大多数无章法可循，无从入口，定是缺他不可的，往往十分跋扈，
及时响应是不太可能的，不看人脸色就谢天谢地了。</p>
<p>服务商的软件系统很多是十多年的老技术，框架陈旧，屡次迭代都要考虑兼容性，于是乎能将就就将就。
漏洞百出，甚至千疮百孔，都是十分常见的。日常用起来都要小心翼翼如履薄冰，仿佛穷人家穿了十多年的破纱衣，一不小心就能洞穿。</p>
<p>由于预算问题，这些系统大多都是毛坯交付，所谓标准功能，往往不能满足企业真正需求，需要二次开发。而这就是一个无底洞，
明明几年前给其他客户做的有现成的方案，也要调研需求，评估工时，搞得复杂上天，尽其忽悠之能事，其目的就为了可以多多进账。
<strong>上线十来万，二开几百万的项目比比皆是</strong>，这也成了软件服务商赚钱的法宝，所谓城市套路深，不过如此，企业一旦陷入就难以自拔。
这种情况更多见于国内的传统软件服务商，对企业来说苦不堪言，搞到后来争执不休，废弃不用的甚至对簿公堂的也不在少数。</p>
<p>因此稍微有点远见有点实力的企业，深苦于此，<strong>不愿被掣肘，定要自己弄出一个量身定做的系统来</strong>。
但网络上开源的各种插件、各种库、各种框架，针对企业的本就不多，一旦投入开发，光框架、插件、库的选择上就足够抓耳挠腮了。
加之自备的开发人员良莠不齐，技术水平天差地别，有的甚至仅仅只会当年的“网页三剑客”。
开发力量薄弱，如何折衷选择让所有力量都有所发挥，这是个问题。</p>
<p><a href="https://cn.vuejs.org" target="_blank" rel="noopener noreferrer">Vue.js</a>横空出世，其先进的设计理念，大大减低了前端开发的艰难程度，围绕<code>Vue.js</code>的生态系统雨后春笋般日渐丰富。
<code>Vue.js</code>可以用组件封装最晦涩难懂的部分，暴露出最简单的接口供调用，一个简单的自定义<code>HTML</code>标签就能搞定原先复杂到令人痛不欲生的难题，
非常类似于基于<code>API</code>开发，真正可以开箱即用。普通开发人员根本不用关心组件内实现，使得企业自行开发难度，一下子从天上拉到了凡间。
也许自备开发人员真的只会“三剑客”，可能只需稍加学习也能胜任部分简单开发，对普通企业来说自己研发量身定制系统已不再是高山险阻。</p>
<p><a href="https://axolo.github.io/leovue" target="_blank" rel="noopener noreferrer">LeoVue</a>就是针对企业开发而创建的组件库，力求简单明了，力求开箱即用，完善<code>80%</code>，丢弃<code>20%</code>。
纯前端实现 <strong>从Excel导入数据</strong>，<strong>导出到Excel文件</strong>、<strong>选择不同模板打印输出</strong> 等必备组件已经上线，
更多组件后续慢慢丰富。</p>
<p>由于作者才疏学浅，错漏难免，欢迎大家批评指正，不吝赐教。</p>
<div><p>声明</p>
<p>以上言论，一家之言，有则改之，无则加勉，切勿对号入座。
—— 方跃明2018年8月19日于杭州</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>LeoVue打包发布NPM折腾记</title>
      <link>https://blog.fangyueming.cn/leovue-npm/</link>
      <guid>https://blog.fangyueming.cn/leovue-npm/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">LeoVue打包发布NPM折腾记</source>
      <pubDate>Sun, 19 Aug 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="leovue打包发布npm折腾记"> LeoVue打包发布NPM折腾记</h1>
<h2 id="发布步骤"> 发布步骤</h2>
<h3 id="建立项目并发布"> 建立项目并发布</h3>
<div><pre><code><span>npm</span> <span>install</span> vue-cli -g          <span># 安装 vue 命令行工具</span>
vue init webpack-simple leovue  <span># 生成 package.json，请按需填写</span>
<span>cd</span> leovue                       <span># 配置webpack、编写并调试项目，各种折腾</span>
<span>npm</span> build                       <span># 可能会遇到各种错误，请按提示解决</span>
<span>npm</span> login                       <span># 按提示登录 npmjs.com，可能需要再次激活您的邮箱</span>
<span>npm</span> publish                     <span># 按提示排错，比如包的命名问题等等，直至成功</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><div><p>建议</p>
<p>因为<code>npm</code>的传输问题、排错问题、稳定性问题等等，强烈建议用<code>yarn</code>来代替<code>npm</code>。</p>
</div>
<h3 id="package-json"> package.json</h3>
<div><pre><code><span>{</span>
  <span>"name"</span><span>:</span> <span>"@axolo/leovue"</span><span>,</span>
  <span>"description"</span><span>:</span> <span>"LeoVue components lib"</span><span>,</span>
  <span>"version"</span><span>:</span> <span>"0.0.8"</span><span>,</span>
  <span>"author"</span><span>:</span> <span>"Yueming Fang"</span><span>,</span>
  <span>"license"</span><span>:</span> <span>"MIT"</span><span>,</span>
  <span>"homepage"</span><span>:</span> <span>"https://axolo.github.io/leovue"</span><span>,</span>
  <span>"repository"</span><span>:</span> <span>{</span>
    <span>"type"</span><span>:</span> <span>"git"</span><span>,</span>
    <span>"url"</span><span>:</span> <span>"https://github.com/axolo/leovue.git"</span>
  <span>}</span><span>,</span>
  <span>"keywords"</span><span>:</span> <span>[</span><span>"vue"</span><span>,</span> <span>"html5"</span><span>]</span><span>,</span>
  <span>"main"</span><span>:</span> <span>"./dist/leovue.js"</span><span>,</span>
  <span>"scripts"</span><span>:</span> <span>{</span>
    <span>"build"</span><span>:</span> <span>"cross-env NODE_ENV=production webpack --progress --hide-modules"</span>
  <span>}</span><span>,</span>
  <span>"dependencies"</span><span>:</span> <span>{</span>
    <span>"vue"</span><span>:</span> <span>"^2.5.11"</span>
  <span>}</span><span>,</span>
  <span>"browserslist"</span><span>:</span> <span>[</span>
    <span>"> 1%"</span><span>,</span>
    <span>"last 2 versions"</span><span>,</span>
    <span>"not ie &lt;= 8"</span>
  <span>]</span><span>,</span>
  <span>"devDependencies"</span><span>:</span> <span>{</span>
    <span>"babel-core"</span><span>:</span> <span>"^6.26.0"</span><span>,</span>
    <span>"babel-loader"</span><span>:</span> <span>"^7.1.2"</span><span>,</span>
    <span>"babel-preset-env"</span><span>:</span> <span>"^1.6.0"</span><span>,</span>
    <span>"babel-preset-stage-3"</span><span>:</span> <span>"^6.24.1"</span><span>,</span>
    <span>"cross-env"</span><span>:</span> <span>"^5.0.5"</span><span>,</span>
    <span>"css-loader"</span><span>:</span> <span>"^0.28.7"</span><span>,</span>
    <span>"file-loader"</span><span>:</span> <span>"^1.1.4"</span><span>,</span>
    <span>"vue-loader"</span><span>:</span> <span>"^13.0.5"</span><span>,</span>
    <span>"vue-template-compiler"</span><span>:</span> <span>"^2.4.4"</span><span>,</span>
    <span>"webpack"</span><span>:</span> <span>"^3.6.0"</span><span>,</span>
    <span>"webpack-dev-server"</span><span>:</span> <span>"^2.9.1"</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br></div></div><p><img src="./leovue-npm.png" alt="npmjs" /></p>
<p>上图是<code>package.json</code>跟<code>npmjs.com</code>内容关系图，<code>keywords</code>在项目主页底部，
<code>README.md</code>内容显示在主页，<code>version</code>、<code>license</code>、<code>homepage</code>、<code>repository</code>信息在右侧。</p>
<h2 id="需求实现"> 需求实现</h2>
<h3 id="多组件"> 多组件</h3>
<div><pre><code><span>// 入口文件：./src/index.js</span>
<span>// 即webpack.config.js里的：entry: './src/index.js'</span>
<span>import</span> LeoDialog <span>from</span> <span>'./components/LeoDialog'</span>
<span>import</span> LeoLodop   <span>from</span> <span>'./components/LeoLodop'</span>

<span>const</span> components <span>=</span> <span>[</span> LeoDialog<span>,</span> LeoLodop <span>]</span>
<span>const</span> <span>install</span> <span>=</span> <span>function</span> <span>(</span><span>Vue<span>,</span> opts <span>=</span> <span>{</span><span>}</span></span><span>)</span> <span>{</span>
  components<span>.</span><span>forEach</span><span>(</span><span>component</span> <span>=></span> <span>{</span>
    Vue<span>.</span><span>component</span><span>(</span>component<span>.</span>name<span>,</span> component<span>)</span>
  <span>}</span><span>)</span>
<span>}</span>

<span>if</span> <span>(</span><span>typeof</span> window <span>!==</span> <span>'undefined'</span> <span>&amp;&amp;</span> window<span>.</span>Vue<span>)</span> <span>{</span>
  <span>install</span><span>(</span>window<span>.</span>Vue<span>)</span>
<span>}</span>

<span>export</span> <span>{</span> LeoDialog<span>,</span> LeoLodop <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><h3 id="精简发布"> 精简发布</h3>
<div><pre><code><span># 以下内容添加到.npmignore后</span>
<span># 仅README.md和package.json和/dist目录被发布</span>
/*
!/dist/
!README.md
!package.json
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h2 id="错误解决"> 错误解决</h2>
<div><p>属性只读</p>
<p>Uncaught TypeError: Cannot assign to read only property 'exports' of object '<code>#&lt;Object&gt;</code>'</p>
</div>
<p>翻译过来就是说，代码没毛病，在webpack打包的时候，可以在js文件中混用require和export。但是不能混用import以及module.exports 。
因为webpack 2中不允许混用import和module.exports，解决办法就是统一改成ES6的方式编写即可。</p>
<div><pre><code><span>import</span> <span>{</span> Component <span>}</span> <span>from</span> <span>'components'</span>
<span>// moduler.exports = Component    // 混用可通过Webpack2编译，但使用错误</span>
<span>export</span> <span>default</span> Component
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><p>标签未知</p>
<p>Unknown custom element: <code>&lt;component&gt;</code> - did you register the component correctly?
For recursive components, make sure to provide the &quot;name&quot; option.</p>
</div>
<p>一般情况下是组件未被正确加载，或者组件打包时命名错误。比如以<code>export default Component</code>打包，
却以<code>import { Component } from 'components'</code>来引用，多了个花括号，反之亦然。</p>
<div><p>渲染未知</p>
<p>[Vue warn]: Failed to mount component: template or render function not defined.
found in <code>&lt;Component&gt;</code></p>
</div>
<p>打包需要指定一种模块输出类型，可以是commonjs,AMD,script,UMD模式。
在这里是写插件，要采用UMD模式，即libraryTarget: 'umd'。
于是webpack.config.js出口文件配置修改为：</p>
<div><pre><code> output<span>:</span> <span>{</span>
  path<span>:</span> path<span>.</span><span>resolve</span><span>(</span>__dirname<span>,</span> <span>'./dist'</span><span>)</span><span>,</span>
  publicPath<span>:</span> <span>'/dist/'</span><span>,</span>
  filename<span>:</span> <span>'leovue.js'</span><span>,</span>
  library<span>:</span> <span>'leovue'</span><span>,</span>
  libraryTarget<span>:</span> <span>'umd'</span><span>,</span>
  umdNamedDefine<span>:</span> <span>true</span>
 <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h2 id="参考"> 参考</h2>
<p><a href="https://www.jb51.net/article/137725.htm" target="_blank" rel="noopener noreferrer">vue todo-list组件发布到npm上的方法</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Linux目录结构</title>
      <link>https://blog.fangyueming.cn/linux-directory/</link>
      <guid>https://blog.fangyueming.cn/linux-directory/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">Linux目录结构</source>
      <pubDate>Sun, 19 Dec 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="linux目录结构"> Linux目录结构</h1>
<p>Linux目录树的主要部分有<code>/</code>、<code>/usr</code>、<code>/var</code>、<code>/home</code>等等。
下面是一个典型的Linux目录结构如下：</p>
<h2 id="目录结构"> 目录结构</h2>
<div><pre><code>`-- /               # 根目录
  |-- efi             # EFI启动分区
  |-- boot            # 存放内核以及启动所需的文件等
  |-- etc             # 系统的配置文件（系统级）
  |   |-- rc            # 主启动文件，不要修改它
  |   |-- rc.conf       # 决定启动哪些系统自带的守护进程，不要修改它
  |   |-- rc.local      # 启动文件，覆盖rc
  |   |-- rc.conf.local # 系统启动时启动的守护进程，覆盖rc.conf
  |   |-- profile       # 全局登录启动文件
  |   `-- bashrc        # 全局bash启动文件
  |-- root            # 超级用户的主目录
  |   |-- .profile      # 超级用户登录启动文件
  |   `-- .bashrc       # 超级用bash启动文件
  |-- home            # 用户文件的主目录，用户数据存放在其主目录中
  |-- mnt             # 临时的映射文件系统，如挂载光驱到cdrom
  |-- dev             # 设备文件
  |-- bin             # 必要的命令
  |-- lib             # 必要的运行库
  |-- proc            # 存放存储进程和系统信息
  |-- sbin            # 系统管理程序
  |-- tmp             # 临时文件的目录
  |-- var             # 系统产生的经常变化的文件，例如日志文件、应用程序的数据文件等等
  `-- usr             # 一般不需要修改的应用程序，命令程序文件、程序库、手册和其它文档
    |-- etc             # 设置文件
    |-- systemd         # 系统守护进程
    |   `--system         # 系统服务
    |-- bin             # 增加的用户程序
    |-- lib             # 库文件
    |-- sbin            # 增加的管理程序
    |-- share           # 结构独立的数据
    |-- local           # 本地产生的增加的应用程序
    |-- x11             # X Window系统
    |-- dict            # 字典
    |-- doc             # 追加的文档
    |-- games           # 游戏和教学文件
    |-- info            # 存放GNU信息文件
    |-- man             # 在线帮助文件
    |-- include         #  C开发工具的头文件
    `-- src             # 程序的源代码
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br></div></div><h2 id="系统服务"> 系统服务</h2>
<p>系统服务目录位于：<code>/usr/lib/systemd/system</code></p>
<h2 id="启动顺序"> 启动顺序</h2>
<p>Linux会按以下顺序读取4个环境配置文件：</p>
<ol>
<li><code>/etc/profile</code>：所有用户登录时均执行此脚本</li>
<li><code>/etc/bashrc</code>：所有用户运行<code>bash shell</code>时均执行此脚本</li>
<li><code>~/.profile</code>：当前户登录时执行此脚本</li>
<li><code>~/.bashrc</code>：当前用户运行<code>bash shell</code>时执行此脚本</li>
</ol>
<blockquote>
<p>方跃明
2021-12-19</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>Linux编译安装命令configure、make、install的意义</title>
      <link>https://blog.fangyueming.cn/linux-make-install/</link>
      <guid>https://blog.fangyueming.cn/linux-make-install/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">Linux编译安装命令configure、make、install的意义</source>
      <pubDate>Fri, 08 Aug 2008 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="linux编译安装命令configure、make、install的意义"> Linux编译安装命令configure、make、install的意义</h1>
<p>tar.gz、tar.bz2的是源代码包，需要编译之后才能安装，在编译过程中你可以指定各种参数以适应你的系统需求，比如安装位置，优化参数，要哪些功能不要哪些功能等等。</p>
<p>这类源代码包需要解压后，进入解压目录，一般都有一个<code>INSTALL</code>的文本文件，里面一般都是安装的详细说明，可以用vi、nano、pico或X下面的文本编辑器（如gedit、gvim、kedit等）打开查看。</p>
<div><pre><code><span>tar</span> zxvf app.tar.gz     <span># tar.gz解压</span>
<span>tar</span> jxvf app.tar.bz2    <span># tar.bz2解压</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h2 id="编译安装三步骤"> 编译安装三步骤</h2>
<h3 id="configure"> configure</h3>
<p>这一步一般用来生成 Makefile，为下一步的编译做准备，你可以通过在 configure 后加上参数来对安装进行控制，比如
代码:</p>
<div><pre><code>./configure --prefix<span>=</span>/usr
</code></pre>
<div><span>1</span><br></div></div><p>上面的意思是：</p>
<ul>
<li>将该软件安装在<code>/usr</code>下面，执行文件就会安装在<code>/usr/bin</code>（而不是默认的<code>/usr/local/bin</code>)</li>
<li>资源文件就会安装在<code>/usr/share</code>（而不是默认的<code>/usr/local/share</code>）</li>
</ul>
<p>同时一些软件的配置文件你可以通过指定<code>--sys-config=参数</code>进行设定。
有一些软件还可以加上<code>--with</code>、<code>--enable</code>、<code>--without</code>、<code>--disable</code>等等参数对编译加以控制，
你可以通过允许<code>./configure --help</code>察看详细的说明帮助。</p>
<h3 id="make"> make</h3>
<p>这一步就是编译，大多数的源代码包都经过这一步进行编译（当然有些perl或python编写的软件需要调用perl或python来进行编译）。
如果在<code>make</code>过程中出现<code>error</code> ，你就要记下错误代码（注意不仅仅是最后一行），
然后你可以向开发者提交<code>bugreport</code>（一般在<code>INSTALL</code>里有提交地址），或者你的系统少了一些依赖库等，
这些需要自己仔细研究错误代码。</p>
<div><pre><code><span>make</span>
</code></pre>
<div><span>1</span><br></div></div><h3 id="make-install"> make install</h3>
<p>这条命令来进行安装（当然有些软件需要先运行 make check 或 make test 来进行一些测试），
这一步一般需要你有<code>root</code>权限（因为要向系统写入文件）。</p>
<p>安装完毕后你就可以删除解压目录了。
采用源代码编译方式来安装软件是 Linux 系统下最常见的安装软件方法，
而且这种方法使你可以更加自由地控制安装细节，所以提倡大家多使用该方法安装软件。</p>
<h2 id="configure参数"> configure参数</h2>
<p>Linux环境下的软件安装，并不是一件容易的事情；如果通过源代码编译后在安装，当然事情就更为复杂一些；
现在安装各种软件的教程都非常普遍,但万变不离其宗，对基础知识的扎实掌握，安装各种软件的问题就迎刃而解了。
<code>Configure</code>脚本配置工具就是基础之一，它是<code>autoconf</code>的工具的基本应用。</p>
<p>configure脚本有大量的命令行选项。对不同的软件包来说，这些选项可能会有变化，但是许多基本的选项是不会改变的。
带上<code>--help</code>选项执行<code>configure</code>脚本可以看到可用的所有选项。
尽管许多选项是很少用到的，但是当你为了特殊的需求而<code>configure</code>一个包时，知道他们的存在是很有益处的。
下面对每一个选项进行简略的介绍:</p>
<h3 id="cache-file-file"> --cache-file=FILE</h3>
<p><code>configure</code>会在你的系统上测试存在的特性(或者bug!)。
为了加速随后进行的配置，测试的结果会存储在一个<code>cache file</code>里。
当configure一个每个子树里都有<code>configure</code>脚本的复杂的源码树时，
一个很好的<code>cache file</code>的存在会有很大帮助。</p>
<h3 id="help"> --help</h3>
<p>输出帮助信息。即使是有经验的用户也偶尔需要使用使用'--help'选项，因为一个复杂的项目会包含附加的选项。
例如，GCC包里的<code>configure</code>脚本就包含了允许你控制是否生成和在GCC中使用GNU汇编器的选项。</p>
<h3 id="no-create"> --no-create</h3>
<p><code>configure</code>中的一个主要函数会制作输出文件。此选项阻止<code>configure</code>生成这个文件。
你可以认为这是一种演习(dry run)，尽管缓存(cache)仍然被改写了。</p>
<h3 id="quiet"> --quiet</h3>
<p>当<code>configure</code>进行他的测试时，会输出简要的信息来告诉用户正在作什么。
这样作是因为<code>configure</code>可能会比较慢，没有这种输出的话 用户将会被扔在一旁疑惑正在发生什么。
使用这两个选项中的任何一个都会把你扔到一旁。</p>
<h3 id="silent"> --silent</h3>
<p>同<code>--quiet</code></p>
<h3 id="version"> --version</h3>
<p>打印用来产生<code>configure</code>脚本的Autoconf的版本号。</p>
<h3 id="prefix-pewfix"> --prefix=PEWFIX</h3>
<p><code>--prefix</code>是最常用的选项。制作出的<code>Makefile</code>会查看随此选项传递的参数，当一个包在安装时可以彻底的重新安置他的结构独立部分。
举一个例子，当安装一个包，例如说Emacs，下面的命令将会使Emacs Lisp file被安装到&quot;/opt/gnu/share&quot;。</p>
<div><pre><code>./configure --prefix<span>=</span>/opt/gnu
</code></pre>
<div><span>1</span><br></div></div><h3 id="exec-prefix-eprefix"> --exec-prefix=EPREFIX</h3>
<p>与<code>--prefix</code>选项类似，但是他是用来设置结构倚赖的文件的安装位置。
编译好的<code>emacs</code>二进制文件就是这样一个问件。如果没有设置这个选项的话，默认使用的选项值将被设为和<code>--prefix</code>选项值一样。</p>
<h3 id="bindir-dir"> --bindir=DIR</h3>
<p>指定二进制文件的安装位置。这里的二进制文件定义为可以被用户直接执行的程序。</p>
<h3 id="sbindir-dir"> --sbindir=DIR</h3>
<p>指定超级二进制文件的安装位置。这是一些通常只能由超级用户执行的程序。</p>
<h3 id="libexecdir-dir"> --libexecdir=DIR</h3>
<p>指定可执行支持文件的安装位置。与二进制文件相反，这些文件从来不直接由用户执行，但是可以被上面提到的二进制文件所执行。</p>
<h3 id="datadir-dir"> --datadir=DIR</h3>
<p>指定通用数据文件的安装位置。</p>
<h3 id="sysconfdir-dir"> --sysconfdir=DIR</h3>
<p>指定在单个机器上使用的只读数据的安装位置。</p>
<h3 id="sharedstatedir-dir"> --sharedstatedir=DIR</h3>
<p>指定可以在多个机器上共享的可写数据的安装位置。</p>
<h3 id="localstatedir-dir"> --localstatedir=DIR</h3>
<p>指定只能单机使用的可写数据的安装位置。</p>
<h3 id="libdir-dir"> --libdir=DIR</h3>
<p>指定库文件的安装位置。</p>
<h3 id="includedir-dir"> --includedir=DIR</h3>
<p>指定C头文件的安装位置。其他语言如C++的头文件也可以使用此选项。</p>
<h3 id="oldincludedir-dir"> --oldincludedir=DIR</h3>
<p>指定为除GCC外编译器安装的C头文件的安装位置。</p>
<h3 id="infodir-dir"> --infodir=DIR</h3>
<p>指定Info格式文档的安装位置。Info是被GNU工程所使用的文档格式。</p>
<h3 id="mandir-dir"> --mandir=DIR</h3>
<p>指定手册页的安装位置。</p>
<h3 id="srcdir-dir"> --srcdir=DIR</h3>
<p>这个选项对安装没有作用。他会告诉<code>configure</code>源码的位置。
一般来说不用指定此选项，因为<code>configure</code>脚本一般和源码文件在同一个目录下。</p>
<h3 id="program-prefix-prefix"> --program-prefix=PREFIX</h3>
<p>指定将被加到所安装程序的名字上的前缀。
例如，使用<code>--program-prefix=g</code>来<code>configure</code>一个名为<code>tar</code>的程序将会使安装的程序被命名为<code>gtar</code>。
当和其他的安装选项一起使用时，这个选项只有当他被<code>Makefile.in</code>文件使用时才会工作。</p>
<h3 id="program-suffix-suffix"> --program-suffix=SUFFIX</h3>
<p>指定将被加到所安装程序的名字上的后缀。</p>
<h3 id="program-transform-name-program"> --program-transform-name=PROGRAM</h3>
<p>这里的PROGRAM是一个sed脚本。当一个程序被安装时，他的名字将经过<code>sed -e PROGRAM</code>来产生安装的名字。</p>
<h3 id="build-build"> --build=BUILD</h3>
<p>指定软件包安装的系统平台。如果没有指定，默认值将是<code>--host</code>选项的值。</p>
<h3 id="host-host"> --host=HOST</h3>
<p>指定软件运行的系统平台。如果没有指定，将会运行<code>config.guess</code>来检测。</p>
<h3 id="target-garget"> --target=GARGET</h3>
<p>指定软件面向(target to)的系统平台。这主要在程序语言工具如编译器和汇编器上下文中起作用。
如果没有指定，默认将使用<code>--host</code>选项的值。</p>
<h3 id="disable-feature"> --disable-FEATURE</h3>
<p>一些软件包可以选择这个选项来提供为大型选项的编译时配置，例如使用Kerberos认证系统或者一个实验性的编译器最优配置。
如果默认是提供这些特性，可以使用<code>--disable-FEATURE</code>来禁用它，这里<code>FEATURE</code>是特性的名字。例如：</p>
<div><pre><code>./configure --disable-gui
</code></pre>
<div><span>1</span><br></div></div><h3 id="enable-feature-arg"> --enable-FEATURE[=ARG]</h3>
<p>相反的，一些软件包可能提供了一些默认被禁止的特性，可以使用<code>--enable-FEATURE</code>来起用它。
这里<code>FEATURE</code>是特性的名字。一个特性可能会接受一个可选的参数。例如：</p>
<div><pre><code>./configure --enable-buffers<span>=</span><span>128</span>
</code></pre>
<div><span>1</span><br></div></div><h3 id="enable-feature-no"> --enable-FEATURE=no</h3>
<p>与上面提到的<code>--disable-FEATURE</code>是同义的。</p>
<h3 id="with-package-arg"> --with-PACKAGE[=ARG]</h3>
<p>在自由软件社区里，有使用已有软件包和库的优秀传统。
当用<code>configure</code>来配置一个源码树时，可以提供其他已经安装的软件包的信息。
例如，倚赖于Tcl和Tk的BLT器件工具包。
要配置BLT，可能需要给<code>configure</code>提供一些关于我们把Tcl和Tk装的何处的信息：</p>
<div><pre><code>./configure --with-tcl<span>=</span>/usr/local --with-tk<span>=</span>/usr/local
</code></pre>
<div><span>1</span><br></div></div><h3 id="with-package-no"> --with-PACKAGE=no</h3>
<p>与下面将提到的<code>--without-PACKAGE</code>是同义的。</p>
<h3 id="without-package"> --without-PACKAGE</h3>
<p>有时候你可能不想让你的软件包与系统已有的软件包交互。
例如，你可能不想让你的新编译器使用GNU ld。通过使用这个选项可以做到这一点：</p>
<div><pre><code>./configure --without-gnu-ld
</code></pre>
<div><span>1</span><br></div></div><h3 id="x-includes-dir"> --x-includes=DIR</h3>
<p>这个选项是<code>--with-PACKAGE</code>选项的一个特例。
在Autoconf最初被开发出来时，流行使用<code>configure</code>来作为Imake的一个变通方法来制作运行于X的软件。
<code>--x-includes</code>选项提供了向<code>configure</code>脚本指明包含X11头文件的目录的方法。</p>
<h3 id="x-libraries-dir"> --x-libraries=DIR</h3>
<p>类似的，<code>--x-libraries</code>选项提供了向<code>configure</code>脚本指明包含X11库的目录的方法。</p>
<h2 id="例子"> 例子</h2>
<p>在源码树中运行<code>configure</code>是不必要的同时也是不好的。
一个由<code>configure</code>产生的良好的<code>Makefile</code>可以构筑源码属于另一 棵树的软件包。
在一个独立于源码的树中构筑派生的文件的好处是很明显的派生的文件，如目标文件，会凌乱的散布于源码树。
这也使在另一个不同的系统或用不 同的配置选项构筑同样的目标文件非常困难。
建议使用三棵树：一棵源码树(source tree)，一棵构筑树(build tree)，一棵安装树(install tree)。
这里有一个很接近的例子，是使用这种方法来构筑GNU malloc包：</p>
<div><pre><code><span>tar</span> zxvf mmalloc-1.0.tar.gz
<span>mkdir</span> build <span>&amp;&amp;</span> <span>cd</span> build
./mmalloc-1.0/configure
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code>creating cache ./config.cache
checking for gcc。 gcc
checking whether the C compiler (gcc ) works. yes
checking whether the C compiler (gcc ) is a cross-compiler. no
checking whether we are using GNU C. yes
checking whether gcc accepts -g. yes
checking for a BSD compatible install. /usr/bin/install -c
checking host system type. i586-pc-linux-gnu
checking build system type. i586-pc-linux-gnu
checking for ar. ar
checking for ranlib。 ranlib
checking how to run the C preprocessor. gcc -E
checking for unistd.h. yes
checking for getpagesize. yes
checking for working mmap. yes
checking for limits.h. yes
checking for stddef.h. yes
updating cache ./config. cache
creating ./config. status
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><p>这样这棵构筑树就被配置了，下面可以继续构筑和安装这个包到默认的位置'/usr/local'：</p>
<div><pre><code><span>make</span> all <span>&amp;&amp;</span> <span>make</span> <span>install</span>
</code></pre>
<div><span>1</span><br></div></div><h2 id="bin类型文件"> bin类型文件</h2>
<p>对于bin类型的安装文件，一般给该文件加上可执行权限，再运行之即可，如：</p>
<div><pre><code><span>chmod</span> +x example。bin
./example.bin
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><blockquote>
<p>方跃明
2008-08-08</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>Linux个人目录规划</title>
      <link>https://blog.fangyueming.cn/linux-home/</link>
      <guid>https://blog.fangyueming.cn/linux-home/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">Linux个人目录规划</source>
      <pubDate>Thu, 03 Apr 2014 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="linux个人目录规划"> Linux个人目录规划</h1>
<div><pre><code>~
|-- .bashrc                                 # 启动配置文件
|-- bin                                     # 可执行脚本
|   |-- mysql-back.sh                       #   MySQL备份
|   `-- mysql57.sh                          #   MySQL 5.7 相关
|-- usr                                     # 应用目录
|   |-- mysql-5.7                           #   MySQL 5.7
|   |-- nginx                               #   NGiNX
|   |-- node                                #   Node.js
|   `-- redis                               #   Redis
|-- backup                                  # 备份目录
|   |-- mysql                               #   MySQL
|   |-- crontab                             #   自动任务
|   `-- certs                               #   证书
|-- projects                                # 项目
|   |-- github                              #   GitHUB
|   `-- coding                              #   Coding.net
|-- downloads                               # 下载
|   |-- git-2.9.5.tar                       #   Git
|   |-- node-v9.11.2-linux-x86.tar.gz       #   Node.js
|   |-- yarn-v1.12.3.tar.gz                 #   Yarn
|   `-- nginx-5.7.tar.gz                    #   NGiNX
|-- logs                                    # 日志
`-- tmp                                     # 临时文件
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Linux Shell 入门</title>
      <link>https://blog.fangyueming.cn/linux-shell/</link>
      <guid>https://blog.fangyueming.cn/linux-shell/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">Linux Shell 入门</source>
      <pubDate>Wed, 09 Aug 2017 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="linux-shell-入门"> Linux Shell 入门</h1>
<h2 id="脚本文件"> 脚本文件</h2>
<ul>
<li>扩展名：<code>.sh</code></li>
<li>第一行：<code>#!/bin/bash</code></li>
<li>执行
<ul>
<li><code>chmod +x shell脚本</code></li>
<li><code>./shell脚本</code></li>
</ul>
</li>
</ul>
<h2 id="脚本内部执行命令"> 脚本内部执行命令</h2>
<p>反引号</p>
<h2 id="变量"> 变量</h2>
<h3 id="系统变量"> 系统变量</h3>
<table>
<thead>
<tr>
<th>名称</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>PATH</td>
<td>shell查找命令的目录列表，由冒号分隔</td>
</tr>
<tr>
<td>HOSTNAME</td>
<td>当前主机名</td>
</tr>
<tr>
<td>HOME</td>
<td>当前用户主目录</td>
</tr>
<tr>
<td>SHELL</td>
<td>当前shell</td>
</tr>
<tr>
<td>USER</td>
<td>当前用户</td>
</tr>
<tr>
<td>UID</td>
<td>当前用户ID</td>
</tr>
<tr>
<td>GID</td>
<td>当前用户组ID</td>
</tr>
<tr>
<td>PWD</td>
<td>当前所在目录</td>
</tr>
<tr>
<td>OLDPWD</td>
<td>上次所在目录</td>
</tr>
<tr>
<td>0</td>
<td>当前命令名称</td>
</tr>
<tr>
<td>n</td>
<td>当前命令的第n个参数，n=1,2,...,9</td>
</tr>
<tr>
<td>*</td>
<td>以”参数1，参数2…..”形式保存所有参数</td>
</tr>
<tr>
<td>@</td>
<td>以”参数1”，”参数2”…..”形式保存所有参数</td>
</tr>
<tr>
<td>#</td>
<td>命令行参数的个数</td>
</tr>
<tr>
<td>?</td>
<td>执行上一个指令或函数的返回值，0=没有错误</td>
</tr>
<tr>
<td>$</td>
<td>本程序的PID（ProcessID）</td>
</tr>
<tr>
<td>!</td>
<td>后台运行的最后一个进程的进程ID号</td>
</tr>
<tr>
<td>-</td>
<td>显示shell使用的当前选项，与set命令功能相同</td>
</tr>
<tr>
<td>_</td>
<td>shell的绝对路径名，最近执行的命令，最近命令最后一个参数</td>
</tr>
<tr>
<td>LINENO</td>
<td>当前执行的脚本行号</td>
</tr>
</tbody>
</table>
<h3 id="用户变量"> 用户变量</h3>
<h4 id="定义变量"> 定义变量</h4>
<ul>
<li>变量名=变量值</li>
</ul>
<h4 id="引用变量"> 引用变量</h4>
<ul>
<li>$变量名</li>
<li>${变量名}</li>
</ul>
<h4 id="只读变量"> 只读变量</h4>
<ul>
<li>变量名=变量值</li>
<li>readonly 变量名</li>
</ul>
<h4 id="删除变量"> 删除变量</h4>
<ul>
<li>变量名=变量值</li>
<li>unset 变量名</li>
</ul>
<h3 id="字符串变量"> 字符串变量</h3>
<h4 id="定义"> 定义</h4>
<ul>
<li>单引号字符串变量='不可转义字符串'</li>
<li>双引号字符串变量=&quot;可转义字符串&quot;</li>
</ul>
<h4 id="获取字符串长度"> 获取字符串长度</h4>
<div><pre><code><span>string</span><span>=</span><span>"abcd"</span>
<span>echo</span> <span>${<span>#</span>string}</span>     <span># 4</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h4 id="提取字符串"> 提取字符串</h4>
<div><pre><code><span>string</span><span>=</span><span>"runoob is a great site"</span>
<span>echo</span> <span>${string<span>:</span>1<span>:</span>4}</span>  <span># unoo</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h4 id="查找字符串位置"> 查找字符串位置</h4>
<div><pre><code><span>string</span><span>=</span><span>"runoob is a great company"</span>
<span>echo</span> <span><span>`</span><span>expr</span> index <span>"<span>$string</span>"</span> is<span>`</span></span>  <span># 8</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h3 id="数组变量"> 数组变量</h3>
<h4 id="定义数组"> 定义数组</h4>
<div><pre><code><span>array_name</span><span>=</span><span>(</span>value0 value1 value2 value3<span>)</span>  <span># 整体定义，可分行</span>
array_name<span>[</span><span>0</span><span>]</span><span>=</span>value0                      <span># 可单独定义</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h4 id="引用"> 引用</h4>
<div><pre><code><span>echo</span> <span>${array_name<span>[</span>n<span>]</span>}</span>   <span># 读取第n个数组，数组下标从0开始</span>
<span>echo</span> <span>${array_name<span>[</span>*<span>]</span>}</span>   <span># 读取所有数组</span>
<span>echo</span> <span>${array_name<span>[</span>@<span>]</span>}</span>   <span># 读取所有数组</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h4 id="获取长度"> 获取长度</h4>
<div><pre><code><span>${<span>#</span>array_name<span>[</span>n<span>]</span>}</span>     <span># 第n个数组长度</span>
<span>${<span>#</span>array_name<span>[</span>*<span>]</span>}</span>     <span># 整个数组长度</span>
<span>${<span>#</span>array_name<span>[</span>@<span>]</span>}</span>     <span># 整个数组长度</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h2 id="运算符"> 运算符</h2>
<h2 id="控制语句"> 控制语句</h2>
<h2 id="思维导图"> 思维导图</h2>
<p><img src="./linux-shell-01.jpg" alt="基础知识" />
<img src="./linux-shell-02.jpg" alt="文件目录" />
<img src="./linux-shell-03.jpg" alt="文本处理" />
<img src="./linux-shell-04.jpg" alt="Shell脚本1" />
<img src="./linux-shell-05.jpg" alt="Shell脚本2" />
<img src="./linux-shell-06.jpg" alt="Shell脚本3" /></p>
<blockquote>
<p>未完待续……</p>
</blockquote>
<blockquote>
<p>方跃明
2017-08-09</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>Lodop打印解决方案</title>
      <link>https://blog.fangyueming.cn/lodop/</link>
      <guid>https://blog.fangyueming.cn/lodop/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">Lodop打印解决方案</source>
      <pubDate>Mon, 09 Jul 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="lodop打印解决方案"> Lodop打印解决方案</h1>
<h2 id="改进版"> 改进版</h2>
<ul>
<li>最新版本已改用<code>load-script</code>动态加载，不再本地集成，详见：<a href="https://axolo.github.io/leovue/api/leo-lodop.html" target="_blank" rel="noopener noreferrer">leo-lodop</a></li>
<li>不再从入口文件<code>index.html</code>加载全局<code>LODOP</code>脚本，改为下载后本地按需加载</li>
<li>不再杂糅到应用中，独立成打印组件，具体应用中以子组件方式调用</li>
<li>去除细枝末节，仅保留必备参数，可灵活配置</li>
<li><code>Vue.js</code>的精华之处就是要抽象并封装常用功能形成组件，供应用调用，而不是复制粘贴常用功能</li>
</ul>
<h3 id="组件-leolodop-vue"> 组件（LeoLodop .vue）</h3>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>id</span><span><span>=</span><span>"</span>lodop<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>leo-dialog</span> <span>:title</span><span><span>=</span><span>"</span>title<span>"</span></span> <span>:visible</span><span><span>=</span><span>"</span>visible<span>"</span></span> <span>@close</span><span><span>=</span><span>'</span>close<span>'</span></span><span>></span></span>
      <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>label<span>"</span></span><span>></span></span>打印模板：<span><span><span>&lt;/</span>span</span><span>></span></span>
      <span><span><span>&lt;</span>select</span> <span>v-model</span><span><span>=</span><span>"</span>templateId<span>"</span></span> <span>placeholder</span><span><span>=</span><span>"</span>请选择打印模板<span>"</span></span><span>></span></span>
        <span><span><span>&lt;</span>option</span>
          <span>v-for</span><span><span>=</span><span>"</span>item in templates<span>"</span></span>
          <span>:key</span><span><span>=</span><span>"</span>item.id<span>"</span></span>
          <span>:value</span><span><span>=</span><span>"</span>item.id<span>"</span></span><span>></span></span>
          {{item.name}}（{{item.bio}}）
        <span><span><span>&lt;/</span>option</span><span>></span></span>
      <span><span><span>&lt;/</span>select</span><span>></span></span>
      <span><span><span>&lt;</span>button</span> <span>@click</span><span><span>=</span><span>"</span>print<span>"</span></span> <span>title</span><span><span>=</span><span>"</span>打印<span>"</span></span><span>></span></span>打印<span><span><span>&lt;/</span>button</span><span>></span></span>
      <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>tips<span>"</span></span><span>></span></span>
        <span><span><span>&lt;</span>ol</span><span>></span></span>
          <span><span><span>&lt;</span>li</span><span>></span></span>请根据建议选择相应的纸张，以免格式混乱。<span><span><span>&lt;/</span>li</span><span>></span></span>
          <span><span><span>&lt;</span>li</span><span>></span></span>非专业人士切勿擅自修改打印模板。<span><span><span>&lt;/</span>li</span><span>></span></span>
          <span><span><span>&lt;</span>li</span><span>></span></span>如有疑问请及时咨询系统管理员。<span><span><span>&lt;/</span>li</span><span>></span></span>
        <span><span><span>&lt;/</span>ol</span><span>></span></span>
      <span><span><span>&lt;/</span>div</span><span>></span></span>
    <span><span><span>&lt;/</span>leo-dialog</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>import</span> _ <span>from</span> <span>'lodash'</span>
<span>import</span> <span>'./leo-lodop/CLodopfuncs'</span>
<span>import</span> LeoDialog <span>from</span> <span>'./LeoDialog'</span>
<span>export</span> <span>default</span> <span>{</span>
  components<span>:</span> <span>{</span> LeoDialog <span>}</span><span>,</span>
  props<span>:</span> <span>[</span>
    <span>'title'</span><span>,</span>            <span>// 标题</span>
    <span>'data'</span><span>,</span>             <span>// 数据</span>
    <span>'templates'</span><span>,</span>        <span>// 模版集</span>
    <span>'visible'</span>           <span>// 是否可见</span>
  <span>]</span><span>,</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      lodop<span>:</span> <span>LODOP</span><span>,</span>     <span>// 本地LODOP</span>
      templateId<span>:</span> <span>''</span>    <span>// 选中模版id</span>
    <span>}</span>
  <span>}</span><span>,</span>
  <span>mounted</span><span>(</span><span>)</span> <span>{</span>
    <span>const</span> defaultTemplate <span>=</span> _<span>.</span><span>find</span><span>(</span><span>this</span><span>.</span>templates<span>,</span> <span>{</span> <span>default</span><span>:</span> <span>true</span> <span>}</span><span>)</span>
    defaultTemplate <span>&amp;&amp;</span> <span>(</span><span>this</span><span>.</span>templateId <span>=</span> defaultTemplate<span>.</span>id<span>)</span>   <span>// 默认模板</span>
  <span>}</span><span>,</span>
  methods<span>:</span> <span>{</span>
    <span>close</span><span>(</span><span>)</span> <span>{</span>
      <span>this</span><span>.</span><span>$emit</span><span>(</span><span>'update:visible'</span><span>,</span> <span>false</span><span>)</span>
    <span>}</span><span>,</span>
    <span>print</span><span>(</span><span>)</span> <span>{</span>
      <span>const</span> template <span>=</span> _<span>.</span><span>find</span><span>(</span><span>this</span><span>.</span>templates<span>,</span> <span>{</span>id<span>:</span> <span>this</span><span>.</span>templateId<span>}</span><span>)</span>
      <span>const</span> axios <span>=</span> <span>require</span><span>(</span><span>'axios'</span><span>)</span>
      <span>let</span> doc <span>=</span> <span>''</span>
      axios<span>.</span><span>get</span><span>(</span>template<span>.</span>url<span>)</span><span>.</span><span>then</span><span>(</span><span>res</span> <span>=></span> <span>{</span>
        <span>// 多模板引擎支持，默认为doT.js</span>
        <span>switch</span><span>(</span>template<span>.</span>engine<span>)</span> <span>{</span>
          <span>default</span><span>:</span>
            <span>const</span> doT <span>=</span> <span>require</span><span>(</span><span>'dot'</span><span>)</span>
            doc <span>=</span> doT<span>.</span><span>template</span><span>(</span>res<span>.</span>data<span>)</span><span>(</span><span>this</span><span>.</span>data<span>)</span>
            <span>break</span>
        <span>}</span>
        <span>this</span><span>.</span>lodop<span>.</span><span>PRINT_INIT</span><span>(</span><span>this</span><span>.</span>title<span>)</span>
        <span>// 多格式支持，默认为TABEL格式</span>
        <span>switch</span><span>(</span>template<span>.</span>format<span>)</span> <span>{</span>
          <span>default</span><span>:</span>
            <span>this</span><span>.</span>lodop<span>.</span><span>ADD_PRINT_TABLE</span><span>(</span>
              template<span>.</span>params<span>.</span>top<span>,</span>
              template<span>.</span>params<span>.</span>left<span>,</span>
              template<span>.</span>params<span>.</span>right<span>,</span>
              template<span>.</span>params<span>.</span>bottom<span>,</span>
              doc<span>)</span>
            <span>break</span>
          <span>case</span> <span>'HTM'</span><span>:</span>
          <span>case</span> <span>'HTML'</span><span>:</span>
            <span>this</span><span>.</span>lodop<span>.</span><span>ADD_PRINT_HTM</span><span>(</span>
              template<span>.</span>params<span>.</span>top<span>,</span>
              template<span>.</span>params<span>.</span>left<span>,</span>
              template<span>.</span>params<span>.</span>right<span>,</span>
              template<span>.</span>params<span>.</span>bottom<span>,</span>
              doc<span>)</span>
            <span>break</span>
        <span>}</span>
        <span>this</span><span>.</span>lodop<span>.</span><span>PREVIEW</span><span>(</span><span>)</span>
      <span>}</span><span>)</span><span>.</span><span>catch</span><span>(</span><span>err</span> <span>=></span> <span>{</span>
        <span>this</span><span>.</span><span>$message</span><span>(</span>err<span>)</span>
      <span>}</span><span>)</span>
      <span>this</span><span>.</span><span>close</span><span>(</span><span>)</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>

<span><span><span>&lt;</span>style</span> <span>scoped</span><span>></span></span><span><span>
<span>/* 略 */</span>
</span></span><span><span><span>&lt;/</span>style</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br><span>84</span><br><span>85</span><br><span>86</span><br><span>87</span><br><span>88</span><br><span>89</span><br><span>90</span><br><span>91</span><br><span>92</span><br><span>93</span><br><span>94</span><br><span>95</span><br><span>96</span><br></div></div><h3 id="模板-accounts-80mm-html"> 模板（accounts-80mm.html）</h3>
<div><pre><code><span>&lt;!-- doT.js Template --></span>
<span><span><span>&lt;</span>style</span><span>></span></span><span><span>
  <span>*</span> <span>{</span> <span>font-family</span><span>:</span> <span>'Gill Sans'</span><span>,</span> <span>'Gill Sans MT'</span><span>,</span> Calibri<span>,</span> <span>'Trebuchet MS'</span><span>,</span> sans-serif<span>;</span> <span>}</span>
  <span>.label</span> <span>{</span> <span>font-weight</span><span>:</span> bold<span>;</span> <span>}</span>
  <span>.label:after</span> <span>{</span> <span>content</span><span>:</span> <span>'：'</span><span>;</span> <span>}</span>
  <span>.main</span> <span>{</span> <span>font-size</span><span>:</span> small<span>;</span> <span>margin-bottom</span><span>:</span> 10<span>;</span> <span>}</span>
  <span>h4</span> <span>{</span> <span>margin</span><span>:</span> 5 0<span>;</span> <span>}</span>
  <span>hr</span> <span>{</span> <span>border</span><span>:</span> 1px dashed darkgray<span>;</span> <span>}</span>
</span></span><span><span><span>&lt;/</span>style</span><span>></span></span>
<span><span><span>&lt;</span>h4</span><span>></span></span>系统帐号表<span><span><span>&lt;/</span>h4</span><span>></span></span>
<span><span><span>&lt;</span>hr</span><span>></span></span>
<span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>main<span>"</span></span><span>></span></span>{{~it:v:i}}
  <span><span><span>&lt;</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>label<span>"</span></span><span>></span></span>序号<span><span><span>&lt;/</span>span</span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>claass</span><span><span>=</span><span>"</span>content<span>"</span></span><span>></span></span>{{=i+1}}<span><span><span>&lt;/</span>span</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>label<span>"</span></span><span>></span></span>姓名<span><span><span>&lt;/</span>span</span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>claass</span><span><span>=</span><span>"</span>content<span>"</span></span><span>></span></span>{{=v.name}}<span><span><span>&lt;/</span>span</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>label<span>"</span></span><span>></span></span>邮箱<span><span><span>&lt;/</span>span</span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>claass</span><span><span>=</span><span>"</span>content<span>"</span></span><span>></span></span>{{=v.mail}}<span><span><span>&lt;/</span>span</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>label<span>"</span></span><span>></span></span>手机<span><span><span>&lt;/</span>span</span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>claass</span><span><span>=</span><span>"</span>content<span>"</span></span><span>></span></span>{{=v.mobile?v.mobile:''}}<span><span><span>&lt;/</span>span</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>label<span>"</span></span><span>></span></span>备注<span><span><span>&lt;/</span>span</span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>claass</span><span><span>=</span><span>"</span>content<span>"</span></span><span>></span></span>{{=v.bio?v.bio:''}}<span><span><span>&lt;/</span>span</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>label<span>"</span></span><span>></span></span>生日<span><span><span>&lt;/</span>span</span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>claass</span><span><span>=</span><span>"</span>content<span>"</span></span><span>></span></span>{{=moment(v.created).format('YYYY-MM-DD')}}<span><span><span>&lt;/</span>span</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>hr</span><span>></span></span>{{~}}
<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;</span>div</span><span>></span></span>制表：<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br></div></div><h3 id="打印对话框-含leo-dialog子组件"> 打印对话框（含leo-dialog子组件）</h3>
<p><img src="./lodop-dialog.png" alt="Lodop Dialog" /></p>
<h3 id="打印预览-80mm小票模板"> 打印预览（80mm小票模板）</h3>
<p><img src="./lodop-80mm.png" alt="Lodop 58mm" /></p>
<h2 id="初始版"> 初始版</h2>
<p>WEB打印是BS架构开发的一个痛点，一般解决方案都是输出PDF格式，然后调用浏览器打印功能。
如果不借助后台，纯浏览器输出，目前的PDF解决方案，光浏览器端加载字体（特别是CJK字体）这一点就能让开发者痛不欲生。
如果借助后台，服务器计算、生成文件和传输文件的压力陡然增大。</p>
<p>努力尝试用<a href="https://github.com/MrRio/jsPDF" target="_blank" rel="noopener noreferrer">jsPDF</a>和<a href="http://pdfkit.org/" target="_blank" rel="noopener noreferrer">PDFKit</a>来解决，对于稍微复杂一点的打印设计都难以实现，简直让人抓狂，放弃。</p>
<p>尝试<a href="http://www.lodop.net/" target="_blank" rel="noopener noreferrer">Lodop</a>打印方案，基本上可以满足复杂需求，可惜只有Windows服务端（客户端基本不受操作系统影响，有浏览器就可以），而且需要注册，而且没有详细的API文档。
不过，功能之强大，这些已无伤大雅。摸爬滚打写了两天，终于构建出了一个雏形。</p>
<h3 id="技术栈"> 技术栈</h3>
<ul>
<li><a href="http://www.lodop.net/" target="_blank" rel="noopener noreferrer">Lodop</a>：打印功能（已自行封装成模块）</li>
<li><a href="https://github.com/axios/axios" target="_blank" rel="noopener noreferrer">axios</a>：异步加载打印模板</li>
<li><a href="https://github.com/olado/doT" target="_blank" rel="noopener noreferrer">doT.js</a>：打印模板编译</li>
<li><a href="https://cn.vuejs.org/" target="_blank" rel="noopener noreferrer">Vue.js</a>：打印数据页组件（父组件）、打印选择器组件（子组件）</li>
<li><a href="https://github.com/lodash/lodash" target="_blank" rel="noopener noreferrer">Lodash</a>：数据查询和筛选</li>
<li><a href="http://element-cn.eleme.io" target="_blank" rel="noopener noreferrer">Element-UI</a>：UI框架</li>
</ul>
<h3 id="lodop模块-硬编码-非常粗放"> Lodop模块（硬编码，非常粗放！）</h3>
<div><pre><code>module<span>.</span>exports <span>=</span> <span>{</span>
  <span>getPrinters</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>LODOP</span><span>.</span>Printers
  <span>}</span><span>,</span>
  <span>preview</span><span>(</span><span>params</span><span>)</span> <span>{</span>
    <span>const</span> axios <span>=</span> <span>require</span><span>(</span><span>'axios'</span><span>)</span>
    <span>const</span> template <span>=</span> params<span>.</span>template
    axios<span>.</span><span>get</span><span>(</span>template<span>.</span>file<span>)</span><span>.</span><span>then</span><span>(</span><span>res</span> <span>=></span> <span>{</span>
      <span>const</span> doT <span>=</span> <span>require</span><span>(</span><span>'dot'</span><span>)</span>
      <span>const</span> table <span>=</span> doT<span>.</span><span>template</span><span>(</span>res<span>.</span>data<span>)</span><span>(</span>params<span>.</span>data<span>)</span>
      <span>LODOP</span><span>.</span><span>PRINT_INIT</span><span>(</span>params<span>.</span>title<span>)</span>
      <span>LODOP</span><span>.</span><span>SET_PRINTER_INDEXA</span><span>(</span>params<span>.</span>printer<span>)</span>
      <span>// 不用严格指定纸张和方向，系统会记忆上次选择</span>
      <span>// LODOP.SET_PRINT_PAGESIZE(template.orient, 0, 0, template.page)</span>
      <span>LODOP</span><span>.</span><span>ADD_PRINT_TABLE</span><span>(</span><span>'10mm'</span><span>,</span> <span>'10mm'</span><span>,</span> <span>'RightMargin:10mm'</span><span>,</span> <span>'BottomMargin:10mm'</span><span>,</span> table<span>)</span>
      <span>LODOP</span><span>.</span><span>PREVIEW</span><span>(</span><span>)</span>
    <span>}</span><span>)</span><span>.</span><span>catch</span><span>(</span><span>err</span> <span>=></span> console<span>.</span><span>log</span><span>(</span>err<span>)</span><span>)</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><h3 id="流程图"> 流程图</h3>
<p><img src="./lodop-flowchart.png" alt="Lodop流程图" /></p>
<h3 id="模板选择器"> 模板选择器</h3>
<p><img src="./lodop-selector.png" alt="Lodop模板选择器" /></p>
<h3 id="打印预览"> 打印预览</h3>
<p><img src="./lodop-preview.png" alt="Lodop打印预览" /></p>
]]></content:encoded>
    </item>
    <item>
      <title>MySQL自动备份</title>
      <link>https://blog.fangyueming.cn/mysql-backup/</link>
      <guid>https://blog.fangyueming.cn/mysql-backup/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">MySQL自动备份</source>
      <pubDate>Sat, 11 May 2019 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="mysql自动备份"> MySQL自动备份</h1>
<h2 id="相关软件"> 相关软件</h2>
<ul>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/mysqldump.html" target="_blank" rel="noopener noreferrer">mysqldump</a></li>
<li><a href="http://www.gzip.org" target="_blank" rel="noopener noreferrer">gzip</a></li>
</ul>
<p>Windows下需要用到gzip压缩软件，当然也可用zip、7z、rar等软件代替。
gzip安装完成后，方便起见，请将gzip加入Windows的PATH环境变量。</p>
<h2 id="windows"> Windows</h2>
<h3 id="编写mysql-backup-bat"> 编写mysql-backup.bat</h3>
<div><pre><code>rem 删除一周前的备份
forfiles /p &quot;D:\Backup\databasename&quot; /d -7 /c &quot;cmd /c del /f @path&quot;
rem 按日期命名备份并压缩
mysqldump -hhostname -uusername -ppassword --databases databasename | gzip &gt; D:\Backup\databasename\databasename-%date:~0,10%.sql.gz
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="将mysql-backup-bat加入计划任务"> 将mysql-backup.bat加入计划任务</h3>
<h2 id="linux"> Linux</h2>
<h3 id="修改mysql配置"> 修改MySQL配置</h3>
<div><pre><code><span>vi</span> /etc/my.cnf
</code></pre>
<div><span>1</span><br></div></div><div><pre><code><span># 加入 mysqldump 相关配置</span>
<span><span>[</span><span>mysqldump</span><span>]</span></span>
<span>user</span><span>=</span><span>user</span>
<span>password</span><span>=</span><span>password</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="编写备份脚本"> 编写备份脚本</h3>
<div><pre><code><span>#!/bin/bash</span>
<span># 定义目录</span>
<span>dir</span><span>=</span>/path/to/backup/mysql/yourdatabase
<span># 删除一周前的备份</span>
<span>find</span> <span>${dir}</span> -ctime +7 -type f <span>|</span> <span>xargs</span> <span>rm</span> -rf
<span># 每日备份</span>
<span>rq</span><span>=</span><span><span>`</span><span>date</span> +%Y%m%d<span>`</span></span>
mysqldump --databases yourdatabase <span>|</span> <span>gzip</span> <span>></span> <span>${dir}</span>/yourdatabase-<span>${rq}</span>.sql.gz
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id="修改文件属性为可执行"> 修改文件属性为可执行</h3>
<div><pre><code><span>chmod</span> +x /path/to/backmysql.sh
</code></pre>
<div><span>1</span><br></div></div><h3 id="添加到crontab"> 添加到<code>crontab</code></h3>
<div><pre><code># mysql-backup.cron
# 每天3点钟执行备份
0 3 * * * bash /path/to/backmysql.sh
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code><span>crontab</span> mysql-backup.cron
<span>crontab</span> -l
<span># 0 3 * * * bash /path/to/backmysql.sh</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>CentOS 安装 MySQL 8</title>
      <link>https://blog.fangyueming.cn/mysql-install/</link>
      <guid>https://blog.fangyueming.cn/mysql-install/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">CentOS 安装 MySQL 8</source>
      <pubDate>Sat, 11 May 2019 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="centos-安装-mysql-8"> CentOS 安装 MySQL 8</h1>
<h2 id="一、安装并登录"> 一、安装并登录</h2>
<div><pre><code><span># 安装官方仓库</span>
yum localinstall https://repo.mysql.com/mysql80-community-release-el7-1.noarch.rpm
<span># 安装 MySQL Server</span>
yum <span>install</span> mysql-community-server
<span># 启动MySQL</span>
systemctl start mysqld
<span># 检查服务状态</span>
systemctl status mysqld
<span># 查看初始密码</span>
<span>grep</span> <span>'temporary password'</span> /var/log/mysqld.log
mysql -uroot -p
<span># 输入密码进入mysql命令行</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><h2 id="二、修改密码策略-可选"> 二、修改密码策略（可选）</h2>
<div><pre><code><span>set</span> <span>global</span> validate_password<span>.</span>policy<span>=</span><span>0</span><span>;</span>
<span>set</span> <span>global</span> validate_password<span>.</span>length<span>=</span><span>4</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h2 id="三、修改密码"> 三、修改密码</h2>
<div><pre><code><span>ALTER</span> <span>USER</span> <span>'root'</span><span>@'localhost'</span> IDENTIFIED <span>BY</span> <span>'password'</span><span>;</span>
</code></pre>
<div><span>1</span><br></div></div><h2 id="四、添加用户并授权"> 四、添加用户并授权</h2>
<div><pre><code><span>CREATE</span> <span>USER</span> <span>'newuser'</span><span>@'%'</span> IDENTIFIED <span>WITH</span> mysql_native_password <span>BY</span> <span>'password'</span><span>;</span>
<span>-- mysql_native_password 为传统加密方式，适配各种连接器</span>
<span>GRANT</span> <span>ALL</span> <span>ON</span> newuser_db<span>.</span><span>*</span> <span>TO</span> <span>'newuser'</span><span>@'%'</span><span>;</span>
FLUSH <span>PRIVILEGES</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h2 id="五、其他配置"> 五、其他配置</h2>
<ol>
<li>设置SELinux为disabled，并生效</li>
<li>开启防火墙mysqld对应端口</li>
</ol>
<h2 id="六、忘记密码"> 六、忘记密码</h2>
<h3 id="_1-设置skip-grant-tables"> 1. 设置skip-grant-tables</h3>
<div><pre><code><span>vi</span> /etc/my.cnf
<span># 在 [mysqld] 段添加 skip-grant-tables，并重启mysql</span>
systemctl restart mysqld
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h3 id="_2-清空密码"> 2. 清空密码</h3>
<div><pre><code><span>USE</span> mysql<span>;</span>
<span>UPDATE</span> <span>user</span> <span>SET</span> authentication_string<span>=</span><span>''</span> <span>WHERE</span> <span>user</span><span>=</span><span>'root'</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h3 id="_3-空密码登录"> 3. 空密码登录</h3>
<div><pre><code><span>vi</span> /etc/my.cnf
<span># 修改配置，注释刚刚添加的部分 # skip-grant-tables</span>
<span># 重启MySQL</span>
systemctl restart mysqld
mysql -uroot -p
<span># 空密码进入 mysql 命令行后使用 ALTER USER 修改密码</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h2 id="七、日常备份"> 七、日常备份</h2>
<h3 id="_1-编写shell脚本-mysql-backup-sh"> 1. 编写Shell脚本：mysql-backup.sh</h3>
<div><pre><code><span>#!/bin/bash</span>
<span>day</span><span>=</span><span><span>`</span><span>date</span> +%Y%m%d<span>`</span></span>
<span>dir</span><span>=</span><span>$HOME</span>/mysql-backup
<span>find</span> <span>$dir</span> -ctime +7 -type f <span>|</span> <span>xargs</span> <span>rm</span> -rf
mysqldump -B sys -uroot -ppassword <span>|</span> <span>gzip</span> <span>></span> <span>$dir</span>/sys-<span>$day</span>.sql.gz
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h3 id="_2-赋予执行权限"> 2. 赋予执行权限</h3>
<div><pre><code><span>chmod</span> +x mysql-backup.sh
</code></pre>
<div><span>1</span><br></div></div><h3 id="_3-添加到-etc-crontab-每天3点钟执行备份"> 3. 添加到<code>/etc/crontab</code>，每天3点钟执行备份</h3>
<div><pre><code>0 3 * * * bash /path/to/mysql-backup.sh
</code></pre>
<div><span>1</span><br></div></div><h4 id="_4-重启crond生效"> 4. 重启crond生效</h4>
<div><pre><code>/etc/rc.d/init.d/crond restart
</code></pre>
<div><span>1</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>MySQL多版本单服务器共存</title>
      <link>https://blog.fangyueming.cn/mysql-multi/</link>
      <guid>https://blog.fangyueming.cn/mysql-multi/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">MySQL多版本单服务器共存</source>
      <pubDate>Sun, 12 May 2019 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="mysql多版本单服务器共存"> MySQL多版本单服务器共存</h1>
<h2 id="mysql-8-x"> MySQL 8.x</h2>
<p><a href="./mysql-8-install.html">CentOS 安装 MySQL 8</a></p>
<h2 id="mysql-5-7"> MySQL 5.7</h2>
<h3 id="依赖"> 依赖</h3>
<div><pre><code><span># 通常依赖早已被安装，可事先使用`yum list installed | gerp -E "make|gcc-c++..."`查询</span>
yum -y <span>install</span> <span>make</span> gcc-c++ cmake bison-devel ncurses ncurses-devel libaio-devel
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h3 id="下载"> 下载</h3>
<div><pre><code><span># 由于服务器环境是CentOS i386，选择5.7版本的Linux Generic的i686版本</span>
<span>wget</span> https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.25-linux-glibc2.12-i686.tar.gz
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h3 id="解压"> 解压</h3>
<div><pre><code><span># 解压到`/opt`目录</span>
<span>tar</span> -xzvf mysql-5.7.25-linux-glibc2.12-i686.tar.gz -C /opt
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h3 id="目录"> 目录</h3>
<div><pre><code>/opt/mysql-5.7.25-linux-glibc2.12-i686
|-- bin                 # 命令
|-- data                # 数据
|-- log                 # 日志
|-- support-files       # 支持
|   `-- mysql.server    # 服务
|-- mysql.sock          # 端口
`-- my.cnf              # 配置
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id="配置"> 配置</h3>
<div><pre><code><span># my.cnf</span>
<span># 为了防止乱码建议设定默认编码格式为：utf8mb4</span>
<span><span>[</span><span>mysqld</span><span>]</span></span>
<span>port</span><span>=</span><span>3307</span>
<span>basedir</span><span>=</span><span>/opt/mysql-5.7.25-linux-glibc2.12-i686</span>
<span>datadir</span><span>=</span><span>/opt/mysql-5.7.25-linux-glibc2.12-i686/data</span>
<span>socket</span><span>=</span><span>/opt/mysql-5.7.25-linux-glibc2.12-i686/mysql.sock</span>
<span>log-error</span><span>=</span><span>/opt/mysql-5.7.25-linux-glibc2.12-i686/log/error.log</span>
<span>default-character-set</span><span>=</span><span>utf8mb4</span>
<span><span>[</span><span>client</span><span>]</span></span>
<span>port</span><span>=</span><span>3307</span>
<span>socket</span><span>=</span><span>/opt/mysql-5.7.25-linux-glibc2.12-i686/mysql.sock</span>
<span>default-character-set</span><span>=</span><span>utf8mb4</span>
<span><span>[</span><span>mysql</span><span>]</span></span>
<span>default-character-set</span><span>=</span><span>utf8mb4</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div><h3 id="权限"> 权限</h3>
<div><pre><code><span>groupadd</span> mysql
<span>useradd</span> mysql -g mysql
<span>chown</span> -R mysql:mysql /opt/mysql-5.7.25-linux-glibc2.12-i686/
<span>chmod</span> -R <span>755</span> /opt/mysql-5.7.25-linux-glibc2.12-i686/
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="服务"> 服务</h3>
<div><pre><code><span># support-files/mysql.server 对应的部分修改为</span>
<span>basedir</span><span>=</span><span>/opt/mysql-5.7.25-linux-glibc2.12-i686</span>
<span>datadir</span><span>=</span><span>/opt/mysql-5.7.25-linux-glibc2.12-i686/data</span>
<span>conf</span><span>=</span><span>/opt/mysql-5.7.25-linux-glibc2.12-i686/etc/my.cnf</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="初始化"> 初始化</h3>
<div><pre><code>./bin/mysqld --defaults-file<span>=</span>my.cnf --initialize --user<span>=</span>mysql <span>&amp;</span>
<span># 请务必留意输出的`temporary password`部分，获得`root`初始密码</span>
./support-files/mysql.server start
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h3 id="命令行"> 命令行</h3>
<div><pre><code>./bin/mysql --socket<span>=</span>mysql.sock --port<span>=</span><span>3307</span> -u root -p
<span># 输入获得的初始密码，以root身份进入系统，进行必要的初期操作</span>
<span># 建议开启高强度密码验证插件：</span>
<span># install plugin validate_password soname 'validate_password.so'</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="脚本"> 脚本</h3>
<div><pre><code><span>#!/bin/bash</span>
<span>mysql</span><span>=</span>/opt/mysql-5.7.25-linux-glibc2.12-i686
<span>if</span> <span>[</span><span>[</span> <span>$1</span> <span>==</span> <span>'--help'</span> <span>]</span><span>]</span><span>;</span><span>then</span>                <span># 帮助</span>
  <span>echo</span> -e <span>"<span>${0}</span> [start | stop | --help]"</span>
<span>elif</span> <span>[</span><span>[</span> <span>$1</span> <span>==</span> <span>'start'</span> <span>]</span><span>]</span><span>;</span><span>then</span>               <span># 启动服务器</span>
  <span>${mysql}</span>/bin/mysqld --defaults-file<span>=</span><span>${mysql}</span>/my.cnf <span>&amp;</span> <span>\</span>
  <span>${mysql}</span>/support-files/mysql.server start
<span>elif</span> <span>[</span><span>[</span> <span>$1</span> <span>==</span> <span>'stop'</span> <span>]</span><span>]</span><span>;</span><span>then</span>                <span># 停止服务器</span>
  <span>${mysql}</span>/bin/mysqladmin --socket<span>=</span><span>${mysql}</span>/mysql.sock --port<span>=</span><span>3307</span> <span>shutdown</span> -uroot -ppass
<span>else</span>                                        <span># 进入命令行</span>
  <span>${mysql}</span>/bin/mysql --socket<span>=</span><span>${mysql}</span>/mysql.sock --port<span>=</span><span>3307</span> -uroot -ppass
<span>fi</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>nginx配置php-fpm</title>
      <link>https://blog.fangyueming.cn/nginx-php-fpm/</link>
      <guid>https://blog.fangyueming.cn/nginx-php-fpm/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">nginx配置php-fpm</source>
      <pubDate>Sun, 01 Jan 2017 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="nginx配置php-fpm"> nginx配置php-fpm</h1>
<h2 id="环境"> 环境</h2>
<p>CentOS 7</p>
<h2 id="安装"> 安装</h2>
<h3 id="nginx"> nginx</h3>
<div><pre><code><span># https://www.nginx.com/resources/wiki/start/topics/tutorials/install/</span>
<span>vim</span> /etc/yum.repos.d/nginx.repo <span># 具体见下文</span>
yum <span>install</span> nginx
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code><span><span>[</span><span>nginx</span><span>]</span></span>
<span>name</span><span>=</span><span>nginx repo</span>
<span>baseurl</span><span>=</span><span>https://nginx.org/packages/centos/$releasever/$basearch/</span>
<span>gpgcheck</span><span>=</span><span>0</span>
<span>enabled</span><span>=</span><span>1</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id="php"> PHP</h2>
<div><pre><code>yum <span>install</span> php
<span>vim</span> /etc/php-fpm.d/www.conf <span># 具体见下文</span>
php-fpm -R <span># 以root用户和守护进程方式启动php-fpm</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code><span># /etc/php-fpm.d/www.conf</span>
<span>user</span> <span>=</span> <span>root</span>
<span>group</span> <span>=</span> <span>root</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h2 id="配置"> 配置</h2>
<h3 id="larvael"> Larvael</h3>
<div><pre><code><span># /etc/nginx/conf.d/php.conf</span>
<span><span>server</span></span> <span>{</span>
  <span><span>listen</span> <span>80</span></span><span>;</span>
  <span><span>server_name</span> foo.com</span><span>;</span>

  <span><span>root</span> /path</span><span>;</span>
  <span><span>index</span> index.html index.htm index.php</span><span>;</span>

  <span><span>location</span> /</span> <span>{</span>
    <span># try_files $uri $uri/ /index.php$is_args$args;</span>
    <span><span>try_files</span> <span>$uri</span> <span>$uri</span>/ /index.php?<span>$query_string</span></span><span>;</span>
  <span>}</span>

  <span><span>location</span> ~ \.php$</span> <span>{</span>
    <span><span>try_files</span> <span>$uri</span> = <span>404</span></span><span>;</span>
    <span><span>fastcgi_pass</span> 127.0.0.1:9000</span><span>;</span>
    <span># include fastcgi.conf;</span>
    <span># fastcgi_index index.php;</span>
    <span><span>fastcgi_param</span> SCRIPT_FILENAME <span>$document_root</span><span>$fastcgi_script_name</span></span><span>;</span>
    <span><span>include</span> fastcgi_params</span><span>;</span>
  <span>}</span>

  <span># deny apache .htaccess</span>
  <span><span>location</span> ~ /\.ht</span> <span>{</span>
    <span><span>deny</span>  all</span><span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div><h3 id="thinkphp"> ThinkPHP</h3>
<div><pre><code><span># /etc/nginx/conf.d/php.conf</span>
<span><span>server</span></span> <span>{</span>
  <span><span>listen</span>       <span>80</span></span><span>;</span>
  <span><span>server_name</span>  xxxxxxx</span> <span>;</span>
  <span><span>root</span>  www</span><span>;</span>

  <span><span>add_header</span> X-Frame-Options <span>"SAMEORIGIN"</span></span><span>;</span>
  <span><span>add_header</span> X-XSS-Protection <span>"1; mode=block"</span></span><span>;</span>
  <span><span>add_header</span> X-Content-Type-Options <span>"nosniff"</span></span><span>;</span>

  <span><span>charset</span> utf-8</span><span>;</span>

  <span><span>index</span> index.html index.htm index.php</span><span>;</span>
  <span><span>location</span> /</span> <span>{</span>
    <span><span>try_files</span> <span>$uri</span> <span>$uri</span>/ /index.php<span>$uri</span></span><span>;</span>
  <span>}</span>

  <span><span>location</span> = /favicon.ico</span> <span>{</span> <span><span>access_log</span> <span>off</span></span><span>;</span> <span><span>log_not_found</span> <span>off</span></span><span>;</span> <span>}</span>
  <span><span>location</span> = /robots.txt</span>  <span>{</span> <span><span>access_log</span> <span>off</span></span><span>;</span> <span><span>log_not_found</span> <span>off</span></span><span>;</span> <span>}</span>

  <span><span>error_page</span> <span>404</span> /index.php</span><span>;</span>

  <span><span>location</span> ~ \.php(.*)$</span> <span>{</span>
    <span><span>fastcgi_pass</span>   127.0.0.1:9000</span><span>;</span>
    <span><span>fastcgi_index</span> index.php</span><span>;</span>
    <span><span>fastcgi_split_path_info</span>  ^((?U).+\.php)(/?.+)$</span><span>;</span>
    <span><span>fastcgi_param</span>  SCRIPT_FILENAME  <span>$document_root</span><span>$fastcgi_script_name</span></span><span>;</span>
    <span><span>fastcgi_param</span>  PATH_INFO  <span>$fastcgi_path_info</span></span><span>;</span>
    <span><span>fastcgi_param</span>  PATH_TRANSLATED  <span>$document_root</span><span>$fastcgi_path_info</span></span><span>;</span>
    <span><span>include</span> fastcgi_params</span><span>;</span>
  <span>}</span>

  <span><span>location</span> ~ /\.(?!well-known).*</span> <span>{</span>
    <span><span>deny</span> all</span><span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br></div></div><blockquote>
<p>方跃明
2017-01-01</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>基于WSL搭建Node.js开发环境</title>
      <link>https://blog.fangyueming.cn/node-on-wsl/</link>
      <guid>https://blog.fangyueming.cn/node-on-wsl/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">基于WSL搭建Node.js开发环境</source>
      <pubDate>Thu, 20 Jan 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="基于wsl搭建node-js开发环境"> 基于WSL搭建Node.js开发环境</h1>
<p>适用于 Linux 的 Windows 子系统（WSL）可让开发人员直接在 Windows 上按原样运行 GNU/Linux 环境（包括大多数命令行工具、实用工具和应用程序），且不会产生传统虚拟机或双启动设置开销。</p>
<p>以下操作基于Windows 10 企业版 LTSC 21H2版，安装默认的WSL发行版（Ubuntu 20.04 LTS），配置Node.js开发环境。</p>
<h2 id="安装wsl"> 安装WSL</h2>
<p>可以选择以下任一方式进行安装。但由于Windows 10 企业版 LTSC默认未搭载（AppStore），且受限于网络环境，模式容易失败，推荐使用进行安装。</p>
<h3 id="微软应用商店"> 微软应用商店</h3>
<p>搜索“Ubuntu”下载安装。</p>
<h3 id="命令行安装"> 命令行安装</h3>
<p>以管理员身份运行PowerShell使用以下命令安装。</p>
<div><pre><code>wsl <span>--</span>install <span>-</span>d Ubuntu
</code></pre>
<div><span>1</span><br></div></div><h3 id="下载安装"> 下载安装</h3>
<p><a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-manual#downloading-distributions" target="_blank" rel="noopener noreferrer">下载WSL发行版</a>，后以管理员身份运行PowerShell使用以下命令安装。</p>
<div><pre><code><span>Add-AppxPackage</span> <span>.</span>\Ubuntu_2004<span>.</span>2020<span>.</span>424<span>.</span>0_x64<span>.</span>appx
</code></pre>
<div><span>1</span><br></div></div><h2 id="使用wsl"> 使用WSL</h2>
<table>
<thead>
<tr>
<th>方式</th>
<th>操作</th>
<th>推荐</th>
</tr>
</thead>
<tbody>
<tr>
<td>右键菜单</td>
<td>Shift + 右键 → 在此处打开Linux Shell</td>
<td>是</td>
</tr>
<tr>
<td>快捷方式</td>
<td>开始菜单 → Ubuntu LTS 快捷方式</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="配置ubuntu源"> 配置Ubuntu源</h2>
<p>这里示例使用<a href="https://developer.aliyun.com/mirror/ubuntu" target="_blank" rel="noopener noreferrer">Ubuntu阿里源</a></p>
<div><pre><code><span>vi</span> /etc/apt/sources.list
</code></pre>
<div><span>1</span><br></div></div><p>替换默认的 http://archive.ubuntu.com/ 为 mirrors.aliyun.com</p>
<div><pre><code>deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><h2 id="启用ssh登录"> 启用SSH登录</h2>
<blockquote>
<p>安装SSH服务</p>
</blockquote>
<div><pre><code><span>sudo</span> <span>passwd</span> root                  <span># 修改root密码</span>
<span>sudo</span> <span>apt</span> <span>install</span> openssh-server   <span># 安装SSH服务</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><blockquote>
<p>启用root用户密码SSH登录</p>
</blockquote>
<div><pre><code><span># vi /etc/ssh/sshd_config</span>
PasswordAuthentication yes        # 开启密码验证登录
PermitRootLogin yes               # 开启root用户登录
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><blockquote>
<p>启动SSH服务</p>
</blockquote>
<div><pre><code><span>sudo</span> <span>service</span> <span>ssh</span> start
</code></pre>
<div><span>1</span><br></div></div><h2 id="安装node-js"> 安装Node.js</h2>
<p>可根据需要选择以下任一方式安装Node.js。若需要多版本切换，建议使用nvm方式安装。</p>
<p>微软官方亦有<a href="https://docs.microsoft.com/zh-cn/windows/dev-environment/javascript/nodejs-on-wsl" target="_blank" rel="noopener noreferrer">WSL Node.js</a>安装文档，供参考。</p>
<h3 id="node-js二进制包"> Node.js二进制包</h3>
<p>参见<a href="https://github.com/nodejs/help/wiki/Installation" target="_blank" rel="noopener noreferrer">Node.js二进制包安装</a>。</p>
<div><pre><code><span>wget</span> https://nodejs.org/dist/v16.13.2/node-v16.13.2.tar.gz
<span>sudo</span> <span>tar</span> -xzvf node-v16.13.2.tar.gz -C /usr/local/lib/nodejs
<span>vi</span> ~/.profile <span># 添加到PATH，增加以下一行</span>
<span># export PATH=/usr/local/lib/nodejs/node-$VERSION-$DISTRO/bin:$PATH</span>
<span>.</span> ~/.profile
node --version  <span># 安装成功输出Node.js版本</span>
<span>npm</span> --version   <span># 安装成功输出NPM版本</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h3 id="nodesource"> NodeSource</h3>
<p>参见<a href="https://github.com/nodesource/distributions#deb" target="_blank" rel="noopener noreferrer">NodeSource Ubuntu</a>安装。</p>
<div><pre><code><span>curl</span> -fsSL https://deb.nodesource.com/setup_17.x <span>|</span> <span>sudo</span> -E <span>bash</span> -
<span>sudo</span> <span>apt</span> <span>install</span> -y nodejs
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h3 id="nvm"> nvm</h3>
<p>采用以下命令安装nvm：</p>
<div><pre><code><span>curl</span> -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh <span>|</span> <span>bash</span>
</code></pre>
<div><span>1</span><br></div></div><p>若以上方式失败，请下载发行包安装nvm：</p>
<div><pre><code><span>wget</span> https://github.com/nvm-sh/nvm/archive/refs/tags/v0.39.1.tar.gz
<span>tar</span> -xzvf v0.39.1.tar.gz
<span>cd</span> nvm-0.39.1
./install.sh
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>安装Node.js</p>
<div><pre><code>nvm <span>install</span> <span>14.18</span>.3   <span># 安装Node.js v14.18.3 LTS</span>
</code></pre>
<div><span>1</span><br></div></div><h2 id="安装nginx"> 安装nginx</h2>
<div><pre><code><span>sudo</span> <span>apt</span> <span>install</span> nginx    <span># 安装nginx</span>
<span>sudo</span> <span>service</span> nginx start  <span># 启动nginx代理服务</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h2 id="安装mysql"> 安装MySql</h2>
<div><pre><code><span>sudo</span> <span>apt</span> <span>install</span> mysql    <span># 默认安装MySQL 8</span>
<span>sudo</span> <span>service</span> mysql start  <span># 启动MySQL数据库服务</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h2 id="安装python2"> 安装Python2</h2>
<p>WSL Ubuntu默认安装了Python3，如需使用Python2请使用以下命令安装：</p>
<div><pre><code><span>sudo</span> <span>apt</span> <span>install</span> python2
python2 --version <span># 安装成功输出Python2版本号</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h2 id="安装java"> 安装Java</h2>
<p>需要使用Java环境的，建议安装OpenJDK和Maven。</p>
<div><pre><code><span>sudo</span> <span>apt</span> update
<span>sudo</span> <span>apt</span> <span>install</span> openjdk-jdk-11
java --version    <span># 安装成功输出Java版本号</span>
<span>sudo</span> <span>apt</span> <span>install</span> maven
mvn --version     <span># 安装成功输出Maven版本号</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><blockquote>
<p>示例：运行Spring Boot项目</p>
</blockquote>
<div><pre><code><span>cd</span> your-project
mvn spring-boot:run
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><blockquote>
<p>方跃明
2022-01-20</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>有感于“论PHP的倒掉”</title>
      <link>https://blog.fangyueming.cn/php-fall/</link>
      <guid>https://blog.fangyueming.cn/php-fall/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">有感于“论PHP的倒掉”</source>
      <pubDate>Mon, 23 Nov 2009 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="有感于-论php的倒掉"> 有感于“论PHP的倒掉”</h1>
<blockquote>
<p><a href="http://www.iteye.com/topic/523378" target="_blank" rel="noopener noreferrer">http://www.iteye.com/topic/523378</a>
<a href="http://hent.iteye.com/" target="_blank" rel="noopener noreferrer">七月十五</a></p>
</blockquote>
<p>已被隐藏的《论PHP的倒掉》参见<a href="http://www.iteye.com/topic/520153" target="_blank" rel="noopener noreferrer">http://www.iteye.com/topic/520153</a>。</p>
<div><p>《论PHP的倒掉》</p>
<p>最近听闻Python貌似有打入冷宫的危险，惊出一身冷汗。突然想起自己常用的PHP，似乎在红火过几年后，越来越被人们看淡了。其实细细想来，php出局是合理的，作为一个PHPer我深切的意识到这一点。</p>
<p>PHP能上能下，貌似在后端和前端都可以用。如果PHP的本身（运行机制、内核等等）够强大的话，诚然是好事，几乎可以一统WEB之江湖。但事实并非如此，PHP在性能、安全和语言层面存在很多弱点。导致了性能低下、资源浪费，不适合大型应用开发。在前端比不过javascript+xhtml+css，在后端比不过java，c/c++，Python，Perl。样样懂不如一门精，不无道理。如果没有杀手锏，迟早是要被淘汰的。</p>
<p>目前，后端开发大量的WebApplication向WebService进化，PHP作为服务端脚本的方便优势越来越小，以至于荡然无存。就WEB编程而言，在前端用Javascript等语言很方便就可以操作html，基于DOM编程，与后端进行ajax交互，快速、安全、高效、节能。在后端采用java、c/c++等语言搭建高性能、高安全性、高并发、集群式的服务平台。完全有理由抛弃PHP等任何服务端的脚本语言。</p>
<p>我一直在想Service-REST + Application-MVC （Application可以是Browser但不是仅仅是Browser）的威力。在这样的系统构建中，我有一个很极端的想法，那就是服务端脚本都成了鸡肋了。这样的环境下，asp有.net，jsp有java，只在服务端脚本有作为的PHP第一个就倒掉了。</p>
<p>其实近些年来PHP的价值已经被定位在了前端脚本语言。在运作成熟的大公司，招PHP大部分只用于前端开发，很多PHPer大概也是高达7K左右的月薪——我是自学的程序设计，从未从事过编程设计行业，请原谅我对具体情况的不明真相。面对汹涌而来的大潮，我建议PHPer想从事后端的多多学习java，想从事前端的多学学javascript，不失为一个转型的出路。</p>
<p>这么多年黑灯瞎火的摸索，在PHP中摸爬滚打也有几年了，回过头来证实了PHP的倒掉。作为一个PHPer，感到莫名的心酸。</p>
</div>
<p>面对攻击和隐藏扣分，我并不感到愤怒和伤怀，那样太消极了。被隐藏后引发了我的思考，为什么会被隐藏和遭受攻击？到底我所思考的是不是走入了误区？我如何正确的认识php和编程？我能从中得到些什么启示呢？</p>
<p>另外我声明一下，我就是phpchina的七月十五，但是并不代表phpchina的立场，所说的话只是私人言论，在javaeye我只希望我是javaeye的会员而已。</p>
<p>php作为目前排名的第三大语言，这么多年来多少有点研究，php的发展并没有扬长避短，发挥优势，实在看不出php的长处在最近几年的发展。一样东西如果没有长处，一定会有替代品，淘汰是迟早的事情。撇开php在后端领域目前根本就竞争不过java和.net不说，javascript潜力的发掘和崛起，以及Flex，JavaFX，GWT等的进步，无一不威胁着php的优势地位。不要认为php是服务端脚本就没有被取代的可能性。</p>
<p>未来的编程发展方向是服务(Service)式和分布(Distributed)式的。这必然会导致信息传输的编码标准化，与服务器交互是不限制语言的，只要这个语言有解析编码的能力，就能处理信息。面向服务编程不限语言，这一点可以从淘宝的TOP上直观的看到，TOP几乎支持任何主流语言。面向服务编程也不限客户端，不管你是应用小程序（applet），浏览器（browser），桌面应用程序（desktop），还是移动终端（moblie）都可使用服务。</p>
<p>也许是我过于偏激了，因为目前大量的phper编程都使用一直以来非常传统的php数据编码编程，思想固化；要么就走向了所谓的企业化的oop及使用大型框架的方向，偏离php的优势。而php的发展方向在哪里，我估计目前zend也比较疑惑。很多人认为php应该加强底层的优化，提高性能和效率，继续以前的简单实用。然后zend貌似要把php拉向企业计算的大池塘里，php这条小鱼要跟java，.net等等大鱼去争一席之地，大鱼吃小鱼是规律。更可怕的是在企业计算重视性能和安全，php这条慢鱼也逃不过快鱼吃慢鱼的的悲剧。</p>
<p>zend如果不重新审视php的发展方向，以及目标市场，以及发展计划的话。不出三五年后端java，.net等以及前端的javascript，html5，Flex，GWT，JavaFX等会重新占领市场份额。php会在萎缩中倒掉。</p>
<p>这篇文章因为立场原因不适合发在phpchina，这样的论调要么引发不满，要么消极导向。另一个原因是因为javaeye层次更高些。所以我发在了javaeye的php版块。发布后我就去上海参加了为期三天的行动成功公司的4*8绩效管理研修班了，没有及时关注。原以为会引发讨论，没想到换来的一堆的谩骂和攻击，最后被隐藏扣分。这是我意想不到的。</p>
<p>之前我就说过，任何语言层面的讨论都没有意义，人菜那才是真的菜。PHPer的现状是不思考，不实践，全作愤怒状，听不进任何意见和建议。心态决定思维，思维准定行为，行为决定结果。盲目自大、鼠目寸光、杯空自满的心态，我想这才是php倒掉的真正原因。</p>
<p>其实倒掉更多的是人，我不希望见到这个倒掉，那个倒掉。朝阳喷薄，以至如日中天，亦有日薄西山时。时乎，时乎，会当有变时。</p>
<h2 id="willko"> <a href="http://willko.iteye.com/" target="_blank" rel="noopener noreferrer">willko</a></h2>
<p>是否想表达，以后有更多的逻辑处理放在浏览器中实现（前端RIA之类的），而后端，因为php本身的原因，所以php只能作为一套系统的web接口。</p>
<p>但是又因为浏览器的可编程能力提高了，所以php这样的代理作用不大？</p>
<p>其实，楼主说“PHPer的现状是不思考，不实践，全作愤怒状，听不进任何意见和建议”，我只想说你知道得太少了。</p>
<p>不要以为一个PPC代表整个中国的PHP现状。。。</p>
<p>我谈谈我的看法，其实说得并全无道理，确实php会萎缩。</p>
<p>现在php的需求上升，完全是泡沫，互联网这个市场大家的疯狂涌入，需求肯定会上升的，但是弱肉强食，市场有限，垮掉是时间问题。这是萎缩的原因之一</p>
<p>其二，正如楼主所说的前端处理能力，以后可能会放更多的逻辑运算在前端，所以php的需求会下降，这是其二</p>
<p>但是这两条还不至于让php垮掉，php做为最轻便的“web接口”方案，实现简单，部署方便，是肯定会存在的。</p>
<h2 id="robbin"> <a href="http://robbin.iteye.com/" target="_blank" rel="noopener noreferrer">robbin</a></h2>
<p>作为一个曾经的老PHPer，我个人的看法是PHP的不会倒掉。我在99年2000年的时候做互联网开发，用PHP作为web，用Java做后端高性能服务，也算10年的老PHPer了。10年的编程生涯回顾过来，对技术的认识也是一个否定之否定，螺旋式上升的过程。</p>
<p>PHP是一个优点和缺点都过于突出的web语言，因为他的优点就是过于简单易用，所以他非常有生命力，也因为他太简单，所以应用领域受到很大的限制。但你不能忽视一个编程语言简单易用带来的威力，前两年我曾经认为PHP要被更加高级的Python/Ruby取代，但事实证明，PHP还是互联网第一的编程语言，Python/Ruby还是比PHP复杂很多，带来了不少门槛。</p>
<p>JavaEye曾经有一个PHP的讨论贴：PHP框架的繁荣是正确的发展方向吗？，在这个讨论当中，我对PHP的看法就是，PHP不应该搞重型框架例如Zend这种东西：</p>
<div><p>【robbin 写道】</p>
<p>其实PHP核心问题都不是性能，而是能不能保持“简单性”和“草根性”</p>
<p>一个有点编程背景的普通人，只需要学习PHP半天时间，就可以上手开始开发web应用了，这就是PHP最大的优势。专业程序群体才多大，而电脑爱好者的群体有多大？我一个朋友，做photoshop出身的，人家学了两天PHP，到处接活给人家开发网站，一个人全部搞定。你让他学Java,那真要了他的命了。我另外一个朋友的老公，人家压根就不是这一行的，照样会用PHP搭网站，人家上网去下载一个PHP程序，改吧改吧页面，就弄好了，你让人家学ruby？那肯定不可能。</p>
<p>PHP的人海战术也就是这么来的，群众基础好。事实上PHP5曾经在相当长时间内被抵制，就是因为PHP5的面向对象语法引入了对于电脑爱好者来说门槛开始变高了，PHP开始变复杂了。</p>
<p>因此PHP再用什么框架，是违背PHP本身的设计哲学的。PHP就应该做简单的页面处理就够了，复杂的逻辑让后台的Java/C++去处理。</p>
</div>
<p>事实上这些年PHP的应用领域也不仅仅在前端，相当多后端编程甚至后端服务也直接使用PHP，比方说Facebook这个现在全球流量第2大的网站就是绝大部分功能都是PHP，附带少量的C++，Java和Erlang，再比如现在热门的网页游戏，基本上也都是直接用PHP做后端来用。可以这样说，最近3年来，PHP不但没有萎缩，反而在扩大市场份额，PHP作为互联网Web编程语言的王者，短期之内还没有出现有威胁的挑战者。</p>
<p>回到楼主这个话题上来，其实楼主思考的问题应该是：不是PHP有没有前途的问题，PHP是肯定有前途的，但是PHPer会有前途吗？</p>
<p>这个话题就有些沉重了，PHPer总给人不登大雅之堂的感觉，PHPer的薪资也远远不及同等工作年限的Java/C++这也是一个残酷的现实。一个程序员工作3年之后，随着视野和经验的增长，不可避免要考虑web架构，高性能高可用性问题，而这些领域，都不是一个纯PHPer可以涉及的领域，所以PHPer很容易就触到职业上的天花板，要打破这个天花板，你就不得不去接触C++或者Java这些编程语言。但对一个PHPer来说，当你不得不去学习Java或者C++的时候，心理难免有些感概，我何不从一开始就搞C++呢，这样职业发展道路岂不是更好？所以就会产生PHP没有前途的悲观想法。</p>
<p>其实我个人觉得从程序员的职业生涯来看，不应该把自己和编程语言绑得过死，开放心态，多学习多接触多实践，各种编程语言仅仅是你工具箱里面的各种工具才好。</p>
<h2 id="syu"> <a href="http://syu.iteye.com/" target="_blank" rel="noopener noreferrer">syu</a></h2>
<p>都开了贴子讨论，又何必以沉默待之呢？</p>
<p>这儿的人一没爆粗口，二没群起愤之。大家仁者见仁，难道不是楼主开贴初衷？</p>
<p>语言嘛，工具也，又非宗教。</p>
<p>站在人的角度，适者即用。但也不至于对工具本身死活轻下结论。毕竟还有这么多场合在应用着。</p>
<p>站在业务的角度，只有不适合的工具，没有不好的语言。</p>
<p>企业应用是个天大的骗言和幌子，谁能给个定义，什么才算是企业应用？</p>
<p>多少年来对PHP的打击无一例外不是祭出“PHP不适合企业应用”的大旗。</p>
<p>那么facebook，yahoo,百度，sina是不是企业？他们有没有用PHP？</p>
<p>有人也许会轻藐的说，他们只用PHP做简单的事，复杂的仍然是X，Y，Z在做。</p>
<p>但反过来说，为什么它们不用X,Y,Z来做这样简单的事？因为不适合嘛。</p>
<p>我所理解的企业应用是一个集合，通常需要多种工具来进行整合，每一环都有它存在的意义和价值。</p>
<p>PHP在WEB层面活跃不是没有原因的，也不是因为它语法随意，简单。而且以PHP出身（而非终结）的高手业界也不少吧。
哪里来的死亡？</p>
<h2 id="dualface"> <a href="http://dualface.iteye.com/" target="_blank" rel="noopener noreferrer">dualface</a></h2>
<p>（敏感词）倒了，PHP 都还不一定会倒 -_-</p>
<p>PHP 的成功并不仅仅是“简单”，最重要的原因还是 —— PHP 是一种完全为 Web App 设计的语言，所以用 PHP 做 Web 那是如鱼得水。</p>
<p>虽然 Java/.NET/Python/Ruby/XXX 也可以做 Web App，但是比起一种专门为 Web App 设计的语言，易用程度和开发效率上有很大区别，所以 PHP 积累了庞大的群众基础。</p>
<p>当然了，Web App 的规模越来越大，仅靠单一语言是不可能解决问题的。但是人类解决问题的模式就是把大问题分解为小问题，再把小问题分解为更小的问题。如果仅仅着眼于服务端和客户端的交互这一层，PHP 就是极佳的选择。就好像卫生纸和卫生巾都可以吸水，但是没几个女生会用卫生纸来代替卫生巾。</p>
<p>说的现实一点，雇一个 Java 熟练工的钱可以雇两个 PHP 熟练工，生产力还更高。所以越来越多的 Web App 都把这一层交给 PHP 来处理。</p>
<h2 id="magician"> <a href="http://magician.iteye.com/" target="_blank" rel="noopener noreferrer">magician</a></h2>
<p>你显然完全没有理解php的用武之地在哪里</p>
<p>1、是，显示可以用javascript，但是它的数据来源在哪？是怎么来的？数据是通过什么逻辑组织的？如果你能直接从浏览器访问到存放在任何地方的数据，那我就可以承认其他一切语言都可以滚蛋了，js最牛逼。很可惜，事实上并不是这样。js能直接从服务端得memcache里拿数据吗？可以从数据里拿数据吗？而恰恰目前能帮助js组织好数据，并以一定格式（比如json）返回给浏览器的最好工具正是php，这个我前面已经说明了，不明白请往前看。</p>
<p>写到这里，如果你还认为要拿php和js来做比较，只能说逻辑不清了，我们没必要再讨论下去。</p>
<p>2、展示逻辑和展现为什不能分开？</p>
<p>为什么没有必要分开？</p>
<p>xml+xslt不是正是在分开他们？</p>
<p>WML又如何？界面不一样而已，数据组成逻辑也不一样吗？</p>
<p>而且，正是因为有各种不同的展示方式（html，wml，flash），他们都在变，而恰恰不便的是php在服务端的处理方式：返回一定格式的数据（比如json）
这不又恰恰说明了剥离展示逻辑（数据生成）和展示方式的必要吗？</p>
<p>3、方向......</p>
<p>好像只是你个人在认为某个语言方向不正确，你是不是正确的都不知道，就夸夸其谈你所谓的正确性</p>
<p>有什么能证明你的方向是正确的吗？</p>
<p>更何况，编程序的哪个没有触类旁通的能力，就算我现在钻php钻得很深，又如何能断定我的java能力就很差呢？何来跑得越快就偏得越远呢？
我觉得语言恰恰是你只要精通了一种，其他的都无非是换个壳子，如果你现在还认为有什么语言需要花10年功夫去研究才能小有所成，所以一定要选对方向，不能犯错，那我只能说：你太嫩了</p>
<p>4、为了证明我以上所说的，我列举一下我现在项目所使用的语言：</p>
<ul>
<li>大量client javascript</li>
<li>大量php</li>
<li>大量java</li>
<li>少量python</li>
<li>少量c</li>
<li>少量shell</li>
<li>少量flex</li>
<li>html+css+xml+xslt就不算进去了</li>
</ul>
<p>对于一个日pv 100万左右的网站，我还真没看出来在php这个层面我的方向怎么就错了，界面一直在变，但是php的显示逻辑一直没变过，并且效果高，逻辑清晰。倒是数据库有换的打算，mysql换成postgresql。</p>
<h2 id="sztime"> <a href="http://sztime.iteye.com/" target="_blank" rel="noopener noreferrer">sztime</a></h2>
<p>原帖的12页我是耐心的看完了, 但这个帖子的回复我实在是看不下去.</p>
<p>首先申明: 本人根本不熟悉楼主, 他在PHPChina上的帖子看过的也绝对不超过10个; 以下言论仅代表本人观点.</p>
<p>楼主的说法确实有点偏激, 但大方向上并没有错.</p>
<p>何谓&quot;倒掉&quot;? 倒掉并非死掉, 一个企业或品牌, 只要市场萎缩到一半, 就可以称之为倒掉了,而PHP在三五年后份额萎缩到一半, 难道真是不可能的事吗?</p>
<p>另外就是攻击楼主&quot;拿PHP和JS比较&quot;的那些人, 实话说很可笑! 楼主所站的高度比你们高了至少二个档次, 只不过没有(看了前几页, 感觉应该是他根本就不想)解释得像小学课本那样通俗而已----退一步讲, 就算他再写多一倍的文字, 凭你们的水平恐怕仍然难以打破自己头上的天花板! 你们把&quot;PHP是服务器端语言而JS是浏览器端脚本&quot;当成可以判定一切生死的圣旨,都以为自己很明白, 事实上愚蠢之极! 我打个比方吧: 楼主说, 据最新研究, 火星上可能有水存在----你们看了马上就骂道: 楼主你真白啊, 火星既然叫火星, 上面肯定只有火了, 怎么可能有水呢?</p>
<h2 id="akandfxs"> <a href="http://akandfxs.iteye.com/" target="_blank" rel="noopener noreferrer">akandfxs</a></h2>
<p>楼主说的很在理。其实前端javascript太强悍的后果，就是对快速开发提供了足够的支持。以前php强调的灵活性和快速部署，在足够强大的javascript快速开发和java这样的后端语言的提供上，是非常有可能压榨php的空间的。在云计算时代就更是如此了。javascript对php的空间的压缩可能会更明显。</p>
<h2 id="giginet"> <a href="http://giginet.iteye.com/" target="_blank" rel="noopener noreferrer">giginet</a></h2>
<p>我觉得lz这是作为一个老手，随着水平不断提高所产生的一种潜意识的危机或半强迫症吧。就好比很多水平越高，反而觉得越技不如人的那些人。而刚入门的反而容易觉得自己已经了解的足够多。</p>
<p>目前的web层表示越来越丰富，js作为前端语言，对于逻辑的展现也在逐渐增强，对于后台处理的很多数据，可以直接以json输出到前台进行解析，或者一些逻辑也可以使用脚本实现。从开发层次上来说，对于一个web程序的开发，前台功能增强，后台php的编码的确是在逐渐减少。但我并不认为php会被取缔。再好的前台还是最终要有后台支撑的。虽然使用php可以达到某些特殊效果，但与java等的对比性不在这里。php的最大特点还是轻型，快速开发，效率也不错，这是它极大的优势。这就好比mysql与oracle之间的关系一样。这么多年，mysql依然没有倒掉，各个大型网站的后台，mysql的份额看看有多少就知道了。有的时候，免费，简单，轻型，快速，对于一些小型开发还是王道。</p>
<p>我觉得robbin说的很对，关键还是看人，语言之类的毕竟只是工具，浮云而已。好技术好语言都应该要有它合适的岗位，无所谓排名先后，无所谓影响度高低。就好像前几天看javaeye中有一个开源的小项目，逻辑全部放到数据库中去写，基本都已经不需要写java代码了，但不可以说java就因此而倒掉了。语言终归还是有它合适的场景的。就好比asp，再多么差劲，目前不还是有人在用么，呵呵。</p>
<p>从市场来讲，要php的企业还是非常多了，php也不会短期内被取缔。只是也许目前phper的薪水与java等实在无法一起比罢了。毕竟php的入门也相对容易得多，薪水低一些是符合市场规律的，而这难免就会对一些老鸟不公，有时也会不可避免的发一些感慨。</p>
<p>都是技术讨论，个人坚持自己的意见没什么错误，毕竟只是讨论而已。而很多事，本来就难有对错之分。</p>
<blockquote>
<p>方跃明
2009-11-23</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>配置Oracle PL/SQL Developer</title>
      <link>https://blog.fangyueming.cn/oracle-plsql/</link>
      <guid>https://blog.fangyueming.cn/oracle-plsql/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">配置Oracle PL/SQL Developer</source>
      <pubDate>Sat, 12 May 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="配置oracle-pl-sql-developer"> 配置Oracle PL/SQL Developer</h1>
<p>参见：<a href="http://blog.csdn.net/helifengwell/article/details/5820434" target="_blank" rel="noopener noreferrer">http://blog.csdn.net/helifengwell/article/details/5820434</a></p>
<ul>
<li>
<p>Instant Client</p>
<p>先到Oracle网站下载<a href="http://www.oracle.com/technetwork/database/features/instant-client/index-097480.html" target="_blank" rel="noopener noreferrer">Instant Client</a>。
根据你的操作系统选择不同的Instant Client版本。解压之后放在你喜欢的目录即可.例如:D:/instantclient_11_2。</p>
</li>
<li>
<p>在D:/instantclient_11_2目录下新建目录network，在network目录下再新建admin目录，在admin目录下新建文件tnsnames.ora，使用文本编辑器打开写入如下内容:</p>
<div><pre><code><span>MWDB</span> <span>=</span>
<span>(DESCRIPTION</span> <span>=</span>
    <span>(ADDRESS_LIST</span> <span>=</span>
      <span>(ADDRESS</span> <span>=</span> <span>(PROTOCOL = TCP)(HOST = 192.168.0.58)(PORT = 1521))</span>
    )
    <span>(CONNECT_DATA</span> <span>=</span>
      <span>(SERVICE_NAME</span> <span>=</span> <span>MWDB)</span>
    )
)
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><blockquote>
<p>MWDB =：表示定义远程服务器的在本地主机名
SERVICE_NAME =：远程数据库实例名</p>
</blockquote>
</li>
<li>
<p>添加一个环境变量，名为TNS_ADMIN，值为tnsnames.ora文件所在路径。比如我的本机为：D:/instantclient_11_2/network/admin</p>
</li>
<li>
<p>设置ORACLE的语言，添加环境变量NLS_LANG，值为SIMPLIFIED CHINESE_CHINA.ZHS16GBK。如果不清楚远程数据库的ORACLE 语言，可以ssh或者telnet到远程机器,在命令界面输入，用命令行连接到数据库。</p>
<div><pre><code><span>select</span> <span>*</span> <span>from</span> nls_instance_parameters<span>;</span>
</code></pre>
<div><span>1</span><br></div></div><p>查看 NLS_LANGUAGE 的值
NLS_LANGUAGE
NLS_TERRITORY</p>
</li>
<li>
<p>下载并安装PL/SQL Developer配置应用，配置tools -&gt; preferences -&gt; connection（工具 -&gt; 首选项 -&gt; 连接）</p>
<ul>
<li>Oracle Home（Oracle主目录）: D:/instantclient_11_2</li>
<li>OCI library（OCI库）: D:/instantclient_11_2/oci.dll</li>
</ul>
</li>
<li>
<p>关闭PL/SQL Developer，重启Developer。主机名就会出现在PL/SQL Developer的列表里，输入用户名密码，就可以登录远程oracle 11g数据库了。</p>
</li>
<li>
<p>补充Instant Client 说明</p>
<p>Oracle Instant client 是oracle提供的简便客户端, 支持多种平台。可从oracle网站下载, 下载地址为：<a href="http://www.oracle.com/technetwork/database/features/instant-client/index-097480.html" target="_blank" rel="noopener noreferrer">Instant Client</a></p>
<p>包括如下内容:</p>
<ul>
<li>Instant client Package - Basic 运行OCI, OCCI, 和JDBC-OCI应用程序需要的所有文件</li>
<li>Instant client Package - Basic Lite: 只包含英语错误信息, 只支持unicode, ascii, 西欧字符集</li>
<li>Instant client Package - JDBC Supplement  为jdbc增加了xa, 国际化和RowSet操作。</li>
<li>Instant Client Package - SQL *Plus 包含sqlplus和需要的库文件</li>
<li>Instant client Package - SDK 使用Instant Client开发Oracle 应用程序需要的头文件及示例makefile</li>
<li>Instant client package - ODBC 使用odbc时需要的库, 不是所有平台都有. linux平台包含</li>
</ul>
<p>Basic和Basic Lite两个中必须选一个, 其他包都是可选的. 我下载了 Basic, JDBC supplement, SQL *Plus, SDK, ODBC. 解压后放在一个文件夹下, 在这个文件夹下建立文件tnsnames.ora，设置环境变量LD_LIBRARY_PATH和TNS_ADMIN指向解压后的目录, 就可以使用sqlplus了。</p>
<p>我下载的instant client版本为10.2.0.2.0, 测试了联接到oracle 9.2.0.4和oracle 10.2.0.1.</p>
<p>Instant Client中不包含tnsping, exp/imp, rman, netca等工具. 如果需要这些工具则需要安装oracle client</p>
</li>
</ul>
<h2 id="oracle备份"> Oracle备份</h2>
<div><pre><code>exp newsoft/econage@ptime file=E:\Backup\%date:~0,10%exp.dmp log=E:\Backup\%date:~0,10exp.log owner=newsoft
</code></pre>
<div><span>1</span><br></div></div><blockquote>
<p>方跃明
2018-05-12</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>php_imagick安装配置</title>
      <link>https://blog.fangyueming.cn/php-imagick-windows/</link>
      <guid>https://blog.fangyueming.cn/php-imagick-windows/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">php_imagick安装配置</source>
      <pubDate>Mon, 02 Aug 2010 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="php-imagick安装配置"> php_imagick安装配置</h1>
<p>php_imagick是强大的图片处理PHP插件。</p>
<ul>
<li>参见
<ul>
<li><a href="http://www.cnblogs.com/wangqishu/p/5609950.html" target="_blank" rel="noopener noreferrer">http://www.cnblogs.com/wangqishu/p/5609950.html</a></li>
</ul>
</li>
<li>版本对应
<ul>
<li>PHP Version: 7.0.9</li>
<li>Compiler: MSVC14 (Visual C++ 2015)</li>
<li>Architecture: x86</li>
<li>Thread Safety: enabled</li>
<li>imagick module version: 3.4.2</li>
<li>Imagick compiled with ImageMagick version: ImageMagick 6.9.3-7 Q16 x86</li>
<li>Imagick using ImageMagick library version: ImageMagick 6.9.3-7 Q16 x86</li>
<li>ImageMagick number of supported formats: 240 (必须有数量)</li>
</ul>
</li>
<li>安装文件及设置
<ul>
<li>安装程序: ImageMagick-6.9.6-8-Q16-x86-dll.exe</li>
<li>环境变量: MAGICK_HOME = C:\Program Files (x86)\ImageMagick-6.9.6-Q16\modules\coders</li>
<li>扩展文件：php_imagick-3.4.2-7.0-ts-vc14-x86.zip (对应x86, vc14, ts)</li>
<li>php: CORE_RL_-.dll</li>
<li>php/ext: php_imagick.dll</li>
<li>php.ini: extension=php_imagick.dll</li>
</ul>
</li>
<li>对应插件
<ul>
<li><a href="https://packagist.org/packages/intervention/image" target="_blank" rel="noopener noreferrer">https://packagist.org/packages/intervention/image</a></li>
<li><a href="http://image.intervention.io" target="_blank" rel="noopener noreferrer">http://image.intervention.io</a></li>
</ul>
</li>
<li>排错
<ul>
<li><code>php_imagick.dll - %1 不是有效的 Win32 应用程序</code>：则说明版本不相符合。需要检查imagick软件本身( 如x86 )、php本身( x86 ts (thread safe) )、php扩展php_imagick.dllts）三方版本 要一致。</li>
<li><code>php.exe - 系统错误 ，无法启动此程序因为计算机丢失CORE_RL_wand_.dll</code>：说明你没有将php_imagick-3.4.2-7.0-ts-vc14-x86.zip扩展包中的“CORE_-.dll”放到你的php.exe同级目录下。</li>
<li><code>ImageMagick number of supported formats: 0</code>：支持的图片格式数量为0，检查环境变量MAGICK_HOME设置。</li>
<li><code>NoDecodeDelegateForThisImageFormat</code>：php_imagick.dll的版本并不支持或并不匹配ImageMagick软件版本，需要更换对应的ImageMagick软件版本。</li>
</ul>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>MVC及PHP++、PHP--胡思乱想杂记</title>
      <link>https://blog.fangyueming.cn/php-lite/</link>
      <guid>https://blog.fangyueming.cn/php-lite/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">MVC及PHP++、PHP--胡思乱想杂记</source>
      <pubDate>Sat, 01 Aug 2009 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="mvc及php-、php-胡思乱想杂记"> MVC及PHP++、PHP--胡思乱想杂记</h1>
<blockquote>
<p><a href="http://user.qzone.qq.com/61077523/blog/1249101307" target="_blank" rel="noopener noreferrer">http://user.qzone.qq.com/61077523/blog/1249101307</a></p>
</blockquote>
<p>有一定经验的开发者都了解MVC模式，特别是基于WEB而且又是可以使用嵌入HTML语言进行开发的，比如PHP。诚然PHP作为一种嵌入式的脚本语言是强大的，这也是一直以来传统PHP给很多人的认知。以至于在PHP3甚至在PHP4时代接触过并最终放弃了PHP的人，都停留在这个认识上，认为PHP没有什么长处，太过简陋。其实不然，从技术角度来讲，一门语言的语法不能决定一个应用的好坏，很多情况下，语言仅仅是实现工具，几乎所有大中型应该都不太会单一的采用一门语言来开发，各种语言都有其自身的长处。</p>
<p>长期以来PHP被杂糅进太多的东西了，要负责Db、又要负责HTML、还要负责Controller、还要负责Model，等等，成了PHP++了。发展到今天，PHP早就脱离了嵌入HTML脚本语言的范畴。应该有更重要的事情给PHP做。当然嵌入HTML当脚本使唤，仍然是强项，但不应该杂糅了。在此换个角度来看PHP。把PHP按角色来理清一下，顺便来发明几个新名词。与数据库层面打交道的叫PHP-Db，与流程控制相关的叫PHP-Controler，与HTML等终端呈现打交道的叫PHP-Client，等等。这样认识可能会更清晰点。</p>
<p>这几天闲来无事，朝思暮想，对MVC的理解有了新的认识，有一点点浅见，于是折腾了一张图。</p>
<p><img src="./php-lite.gif" alt="我的MVC框架示意图" /></p>
<p>最大的收获是我们是否需要很肥大的View呢？在各种PHP框架中，View端的语言基本上都采用PHP-Client，比如ZendFramework、QeePHP等，还有的采用模板标签或模板引擎。在我看来这其实是方便开发者使用的，其实对于View，可以精简至极至。图中的Input和Output都涉及到View。精简后的View可以根本就不用去管Input和Output的设备、形式、语言，只需要Input进正确格式的数据（比如JSON、XML），而Output出指定格式的数据（比如JSON、XML）。同样，Output的呈现形式、方法、手段等不是我们要关注的。对于WEB来说可以Output出的数据可以交给ExtJS，可以交给PHP(此时的PHP是WEB前端脚本语言)，可以交给原生Javascript处理。甚至可以以WML语言输出到WAP。也就是说View如何呈现不是核心所要关注的。</p>
<p>然而我们是怎么做的呢？在Controller中很多开发者并不注重数据的格式统一与规划，很随意的就丢给了View。更有甚者Controller和View杂糅了，权责不分，该View做的事让Controller做了，而View又在做Controller的事。不管是从设计简单的网站应用出发还是企业行业应用出发，PHP-Controller都不应该糅进PHP-Client。View里Output出单纯的格式化的数据，有利于AJAX及WebService等。规范了输出，View的呈现就可以由其它团队单独负责，他们爱用PHP，爱用ExtJS，爱用jQuery，爱谁用谁。</p>
<p>至于什么是Model我也理解一下，理解的不对的话，请各位多踹几脚。Model在很多人心里长期以来被Db给占了。而在Controller中写了大量应该Model去完成的内容。广义上说其实Model并不仅仅是Db。比如我们用的FCKeditor我们可以说是一个Model，它用来创建一个可视编辑器。大方面的Model估计都能重视。再说一个小的，比如一个用户系统中的“用户新增（UserAdd）”这个功能，用户端可能是用户注册，管理端可以是直接创建一个用户。如果在控制器里直接写，用户端和管理端那就重复写代码了。这样的功能就应该放到Model里，拿来调用。这个就叫Model，类似函数，也叫业务逻辑。控制器控制的只是业务流程。如果控制器掺和模型的事，凡事诸葛亮，会弄得拥肿无比，非常繁琐，会被累死。</p>
<p>Cache又是一个什么概念呢？一个简单的例子，商品分类列表，当去存取这个列表时，核心就应该先去Cache里找，找到了核对一下是不是要更新，如果没找到或者要更新，那么就先更新或者在Cache里建立一个副本(这显然是一个很小的循环或者是分支判断)。然后把Cache里的列表取出来。这样做是免除大量的去存取数据库操作，或称为大量的Model运算。当然我们可以设计成，如果这个列表有变动就主动去更新Cache。这样命中率会高很多。应该的效率就会提高很多。很多人以为生成静态HTML脚本就是Cache的全部，只是Cache局部小应用，模板引擎里常用。想开了去，放大了说，Cache跟View没直接关系。Cache可以用在View，当然也可以用在Controller和Model。</p>
<p>最近AD挺多，顺路也AD一下：你的PHP--了么？</p>
<blockquote>
<p>注：PHP-Client、PHP-Controler、PHP-Db等都是作者发明的名词，非专业通用名词
方跃明
2009-8-1 12:35</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>Promise</title>
      <link>https://blog.fangyueming.cn/promise/</link>
      <guid>https://blog.fangyueming.cn/promise/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">Promise</source>
      <pubDate>Tue, 18 Feb 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="promise"> Promise</h1>
<h2 id="场景"> 场景</h2>
<table>
<thead>
<tr>
<th>方法</th>
<th>使用</th>
<th>效果</th>
</tr>
</thead>
<tbody>
<tr>
<td>callback</td>
<td>Promise.then(callback)</td>
<td>别等我，你们先吃</td>
</tr>
<tr>
<td>await</td>
<td>await Proimse()</td>
<td>等我到了再吃</td>
</tr>
<tr>
<td>all</td>
<td>Promise.all([])</td>
<td>先到先吃，吃完一起走</td>
</tr>
<tr>
<td>reace</td>
<td>Promise.race([])</td>
<td>先到先吃，吃饱胜出</td>
</tr>
<tr>
<td>yield</td>
<td>*generator() { yield }</td>
<td>排队领餐</td>
</tr>
</tbody>
</table>
<h2 id="接力赛"> 接力赛</h2>
<p>一个接一个，下一棒等上一棒。</p>
<div><pre><code><span>const</span> step1 <span>=</span> <span>await</span> <span>doStep1</span><span>(</span><span>)</span><span>;</span> <span>// Promise，上一步必须完成</span>
<span>const</span> setp2 <span>=</span> <span>await</span> <span>doStep2</span><span>(</span><span>)</span><span>;</span> <span>// Promise，下一步才能继续</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h2 id="排名赛"> 排名赛</h2>
<p>齐头并进，等待最后一名到达。</p>
<div><pre><code><span>const</span> <span>[</span> member1<span>,</span> member2 <span>]</span> <span>=</span> <span>await</span> Promise<span>.</span><span>all</span><span>(</span><span>[</span>
  <span>memeber1ComingSoon</span><span>(</span><span>)</span><span>,</span> <span>// Promise，成员1正在赶来</span>
  <span>memeber2ComingSoon</span><span>(</span><span>)</span><span>,</span> <span>// Promise，成员2正在赶来</span>
<span>]</span><span>)</span><span>;</span>
console<span>.</span><span>log</span><span>(</span><span>'全队到齐了，出发！'</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id="淘汰赛"> 淘汰赛</h2>
<p>齐头并进，只取第一名。</p>
<div><pre><code><span>const</span> member <span>=</span> <span>await</span> Promise<span>.</span><span>race</span><span>(</span><span>[</span>
  <span>memeber1ComingSoon</span><span>(</span><span>)</span><span>,</span> <span>// Promise，成员1正在赶来</span>
  <span>memeber2ComingSoon</span><span>(</span><span>)</span><span>,</span> <span>// Promise，成员2正在赶来</span>
<span>]</span><span>)</span><span>;</span>
console<span>.</span><span>log</span><span>(</span><span>'公平竞争，先到者得！'</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id="生成器"> 生成器</h2>
<p>“下一个”，“到！”</p>
<div><pre><code><span>// 以下代码是一个生成器函数的声明。</span>
<span>function</span><span>*</span> <span>countSales</span> <span>(</span><span>)</span> <span>{</span>
  <span>var</span> saleList <span>=</span> <span>[</span><span>3</span><span>,</span> <span>7</span><span>,</span> <span>5</span><span>]</span><span>;</span>
  <span>for</span> <span>(</span><span>var</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> saleList<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
    <span>yield</span> saleList<span>[</span>i<span>]</span><span>;</span>
  <span>}</span>
<span>}</span>

<span>// 一旦生成器函数已定义，可以通过构造一个迭代器来使用它。</span>
<span>var</span> Store <span>=</span> <span>countSales</span><span>(</span><span>)</span><span>;</span> <span>// Generator { }</span>
console<span>.</span><span>log</span><span>(</span>Store<span>.</span><span>next</span><span>(</span><span>)</span><span>)</span><span>;</span> <span>// { value: 3, done: false }</span>
console<span>.</span><span>log</span><span>(</span>Store<span>.</span><span>next</span><span>(</span><span>)</span><span>)</span><span>;</span> <span>// { value: 7, done: false }</span>
console<span>.</span><span>log</span><span>(</span>Store<span>.</span><span>next</span><span>(</span><span>)</span><span>)</span><span>;</span> <span>// { value: 5, done: false }</span>
console<span>.</span><span>log</span><span>(</span>Store<span>.</span><span>next</span><span>(</span><span>)</span><span>)</span><span>;</span> <span>// { value: undefined, done: true }</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div><blockquote>
<p>方跃明
2020-02-18</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>RBAC之我见</title>
      <link>https://blog.fangyueming.cn/rbac/</link>
      <guid>https://blog.fangyueming.cn/rbac/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">RBAC之我见</source>
      <pubDate>Wed, 09 Sep 2009 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="rbac之我见"> RBAC之我见</h1>
<blockquote>
<p>原帖见：<a href="http://user.qzone.qq.com/61077523/blog/1374910701" target="_blank" rel="noopener noreferrer">http://user.qzone.qq.com/61077523/blog/1374910701</a></p>
</blockquote>
<p>最近又开始折腾权限精细控制，发现多年前发的文章，还挺有思路的。摘录如下：</p>
<ul>
<li><a href="http://bbs.phpchina.com/forum.php?mod=redirect&amp;goto=findpost&amp;ptid=105577&amp;pid=877890&amp;fromuid=8531" target="_blank" rel="noopener noreferrer">http://bbs.phpchina.com/forum.php?mod=redirect&amp;goto=findpost&amp;ptid=105577&amp;pid=877890&amp;fromuid=8531</a></li>
<li><a href="http://bbs.phpchina.com/forum.php?mod=viewthread&amp;tid=151874&amp;fromuid=8531" target="_blank" rel="noopener noreferrer">http://bbs.phpchina.com/forum.php?mod=viewthread&amp;tid=151874&amp;fromuid=8531</a></li>
</ul>
<h2 id="一、缘起-zend-acl"> 一、缘起 Zend_Acl</h2>
<h3 id="_1-简介"> 1. 简介</h3>
<p>Zend_Acl 为权限管理提供轻量并灵活的访问控制列表 (ACL,access control list) 的实现。一般地，应用软件可以利用这样的功能限制某些特定对象来访问特定保护的对象。
在本文档中：</p>
<ul>
<li>resource （资源）是一个限制访问的对象。</li>
<li>role （角色）是一个可以发出请求去访问Resource的对象。</li>
</ul>
<p>简单地说就是：roles 请求访问 resources。例如，如果停车服务员要进入汽车，那么，这个停车服务员就是发出请求的 role，而这辆汽车就是 resource，因为不是所有人都有权进入汽车。
通过规范和访问控制列表（ACL）的使用，应用软件可以控制角色（roles）如何来访问资源（resources）。</p>
<h3 id="_2-关于资源-resource"> 2. 关于资源(Resource)</h3>
<p>在 Zend_Acl 中，创建一个 resource 非常简单。Zend_Acl 提供了 resource 接口<code>Zend_Acl_Resource_Interface</code> 使开发者在程序中创建 resources 非常容易。为了使Zend_Acl把某个对象当作一个resource，一个类只需要实现这个只包含了一个方法 getResourceId() 的接口。</p>
<p>另外，Zend_Acl_Resource是一个包含在 Zend_Acl 里作为一个基本的 resource 实现的类，开发者可以任意扩展它。
Zend_Acl 提供了一个树结构，它可以添加多个 resources (或者叫“访问控制下的区域”）。因为 resources 被存储在这样一个树结构， 所以它们可以被组织成从一般（树根）到特殊（树叶）。基于特殊resource的查询将自动从resource的等级结构中搜索分配给祖先rResources的规则， 它允许简单的规则继承。</p>
<p>例如，要把一个缺省的规则应用到一个城市的每个建筑物，就简单地把这个规则分配给这个城市， 而不是把规则分配给每个建筑物。然而，有些建筑物也许要求例外的规则，在Zend_Acl里，很容易地通过分配例外规则给每个有这样要求的建筑物来实现。 一个 resource 可以从唯一的一个父 resource 继承，而这个父 resource 也有它自己的父 resource，等等。</p>
<p>Zend_Acl 也支持基于 resources 的权限（例如：&quot;create&quot;, &quot;read&quot;, &quot;update&quot;, &quot;delete&quot;）， 所以开发者可以根据 resource 分配影响全部或者特殊权限的规则到一个或多个资源。</p>
<h3 id="_3-关于角色-role"> 3. 关于角色(Role)</h3>
<p>象 Resources 一样，创建一个 role 也非常简单。 Zend_Acl 提供了 <code>Zend_Acl_Role_Interface</code> 使开发者创建 roles 非常容易。 为了使Zend_Acl把某个对象当作一个 role，一个类只需要实现这个只包含了一个方法 getRoleId() 的接口。</p>
<p>另外，Zend_Acl_Role是一个包含在Zend_Acl里作为一个基本的 role 实现的类，开发者可以任意扩展它。
在 Zend_Acl, 一个 role 可以从一个或多个 role 继承，这就是在 role 中支持规则的继承。</p>
<p>例如，一个用户 role，如 “sally”， 可以属于一个或多个 role，如：“editor”和“administrator”。开发者可以分别给“editor”和“administrator”分配规则， 而“sally”将从它们俩继承规则，不需要直接给“sally”分配规则。
虽然从多重角色继承的能力非常有用，但是多重继承也带来了一定程度的复杂性。</p>
<p>下面的例子来示例含糊情形和Zend_Acl如何解决它。</p>
<h2 id="二、分析"> 二、分析</h2>
<p>按ZendFramework的做法ACL（访问控制列表）与Auth（认证）是分开的，我用五张表来实现。</p>
<ul>
<li>用于ACL的有：role、resource、access</li>
<li>用于AUTH的有：user</li>
<li>AUTH和ACL结合的表是：group</li>
</ul>
<p>很多RBAC笼统的把ACL和AUTH结合在一起了，所以比较混杂，搞不清楚。下面的草图简要说明ACL和AUTH的结合。</p>
<p><img src="./rbac-flowchart.jpg" alt="流程图" /></p>
<h2 id="三、数据模型分析与设计"> 三、数据模型分析与设计</h2>
<p><img src="./rbac-er.png" alt="模型ER" />
这个就不多说了，直接贴MySQL代码。</p>
<div><pre><code><span>-- database leogb</span>
<span>DROP</span> <span>DATABASE</span> <span>IF</span> <span>EXISTS</span> hent_leogb<span>;</span>
<span>CREATE</span> <span>DATABASE</span> hent_leogb <span>DEFAULT</span> <span>CHARACTER</span> <span>SET</span> <span>=</span> <span>'utf8'</span><span>;</span>
<span>USE</span> hent_leogb<span>;</span>
<span>-- for first import</span>
<span>-- table user</span>
<span>CREATE</span> <span>TABLE</span> leo_user <span>(</span>
    id <span>int</span><span>(</span><span>11</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>AUTO_INCREMENT</span> <span>PRIMARY</span> <span>KEY</span><span>,</span>
    name <span>char</span><span>(</span><span>40</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>UNIQUE</span> <span>KEY</span><span>,</span>
    password <span>char</span><span>(</span><span>32</span><span>)</span> <span>NOT</span> <span>NULL</span><span>,</span>
    <span>time</span> <span>datetime</span> <span>NOT</span> <span>NULL</span><span>,</span>
    <span>status</span> <span>int</span><span>(</span><span>4</span><span>)</span> <span>NOT</span> <span>NULL</span>
<span>)</span> <span>DEFAULT</span> <span>CHARACTER</span> <span>SET</span> <span>=</span> <span>'utf8'</span> <span>TYPE</span> <span>=</span> <span>'InnoDB'</span><span>;</span>
<span>-- table role</span>
<span>CREATE</span> <span>TABLE</span> leo_role <span>(</span>
    id <span>int</span><span>(</span><span>11</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>AUTO_INCREMENT</span> <span>PRIMARY</span> <span>KEY</span><span>,</span>
    role_id <span>int</span><span>(</span><span>11</span><span>)</span> <span>NOT</span> <span>NULL</span><span>,</span>
    <span>FOREIGN</span> <span>KEY</span> <span>(</span>role_id<span>)</span> <span>REFERENCES</span> leo_role<span>(</span>id<span>)</span> <span>ON</span> <span>UPDATE</span> <span>CASCADE</span> <span>ON</span> <span>DELETE</span> <span>RESTRICT</span><span>,</span>
    name <span>char</span><span>(</span><span>30</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>UNIQUE</span> <span>KEY</span><span>,</span>
    <span>status</span> <span>int</span><span>(</span><span>4</span><span>)</span> <span>NOT</span> <span>NULL</span><span>,</span>
    <span>comment</span> <span>char</span><span>(</span><span>30</span><span>)</span> <span>NOT</span> <span>NULL</span>
<span>)</span> <span>DEFAULT</span> <span>CHARACTER</span> <span>SET</span> <span>=</span> <span>'utf8'</span> <span>TYPE</span> <span>=</span> <span>'InnoDB'</span><span>;</span>
<span>-- table resource</span>
<span>CREATE</span> <span>TABLE</span> leo_resource <span>(</span>
    id <span>int</span><span>(</span><span>11</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>AUTO_INCREMENT</span> <span>PRIMARY</span> <span>KEY</span><span>,</span>
    resource_id <span>int</span><span>(</span><span>11</span><span>)</span> <span>NOT</span> <span>NULL</span><span>,</span>
    <span>FOREIGN</span> <span>KEY</span> <span>(</span>resource_id<span>)</span> <span>REFERENCES</span> leo_resource<span>(</span>id<span>)</span> <span>ON</span> <span>UPDATE</span> <span>CASCADE</span> <span>ON</span> <span>DELETE</span> <span>RESTRICT</span><span>,</span>
    name <span>char</span><span>(</span><span>30</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>UNIQUE</span> <span>KEY</span><span>,</span>
    <span>status</span> <span>int</span><span>(</span><span>4</span><span>)</span> <span>NOT</span> <span>NULL</span><span>,</span>
    <span>comment</span> <span>char</span><span>(</span><span>30</span><span>)</span> <span>NOT</span> <span>NULL</span>
<span>)</span> <span>DEFAULT</span> <span>CHARACTER</span> <span>SET</span> <span>=</span> <span>'utf8'</span> <span>TYPE</span> <span>=</span> <span>'InnoDB'</span><span>;</span>
<span>-- table group</span>
<span>CREATE</span> <span>TABLE</span> leo_group <span>(</span>
    user_id <span>int</span><span>(</span><span>11</span><span>)</span> <span>NOT</span> <span>NULL</span><span>,</span>
    <span>FOREIGN</span> <span>KEY</span> <span>(</span>user_id<span>)</span> <span>REFERENCES</span> leo_user<span>(</span>id<span>)</span> <span>ON</span> <span>UPDATE</span> <span>CASCADE</span> <span>ON</span> <span>DELETE</span> <span>CASCADE</span><span>,</span>
    role_id <span>int</span><span>(</span><span>11</span><span>)</span> <span>NOT</span> <span>NULL</span><span>,</span>
    <span>FOREIGN</span> <span>KEY</span> <span>(</span>role_id<span>)</span> <span>REFERENCES</span> leo_role<span>(</span>id<span>)</span> <span>ON</span> <span>UPDATE</span> <span>CASCADE</span> <span>ON</span> <span>DELETE</span> <span>CASCADE</span><span>,</span>
    <span>UNIQUE</span> <span>KEY</span> <span>(</span>user_id<span>,</span> role_id<span>)</span>
<span>)</span> <span>DEFAULT</span> <span>CHARACTER</span> <span>SET</span> <span>=</span> <span>'utf8'</span> <span>TYPE</span> <span>=</span> <span>'InnoDB'</span><span>;</span>
<span>-- table access</span>
<span>CREATE</span> <span>TABLE</span> leo_access <span>(</span>
    role_id <span>int</span><span>(</span><span>11</span><span>)</span> <span>NOT</span> <span>NULL</span><span>,</span>
    <span>FOREIGN</span> <span>KEY</span> <span>(</span>role_id<span>)</span> <span>REFERENCES</span> leo_role<span>(</span>id<span>)</span> <span>ON</span> <span>UPDATE</span> <span>CASCADE</span> <span>ON</span> <span>DELETE</span> <span>CASCADE</span><span>,</span>
    resource_id <span>int</span><span>(</span><span>11</span><span>)</span> <span>NOT</span> <span>NULL</span><span>,</span>
    <span>FOREIGN</span> <span>KEY</span> <span>(</span>resource_id<span>)</span> <span>REFERENCES</span> leo_resource<span>(</span>id<span>)</span> <span>ON</span> <span>UPDATE</span> <span>CASCADE</span> <span>ON</span> <span>DELETE</span> <span>CASCADE</span><span>,</span>
    <span>UNIQUE</span> <span>KEY</span> <span>(</span>role_id<span>,</span> resource_id<span>)</span>
<span>)</span> <span>DEFAULT</span> <span>CHARACTER</span> <span>SET</span> <span>=</span> <span>'utf8'</span> <span>TYPE</span> <span>=</span> <span>'InnoDB'</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br></div></div><h2 id="四、应用分析与实现"> 四、应用分析与实现</h2>
<p><img src="./rbac-active.png" alt="活动图" /></p>
<p>以下是按上面的思路做的应用，两张权限分配图是之前没有考虑多层资源结构时设计应用时的截图，供参考：</p>
<p><img src="./rbac-app01.gif" alt="应用截图01" /></p>
<p><img src="./rbac-app02.gif" alt="应用截图02" /></p>
<h2 id="五、后记"> 五、后记</h2>
<p>当年的思路还是局限于MVC设计中，一堆的Controller和Action，看上去很壮观。
算是有点过设计了，不过，思路还算清晰吧。
现在要我来做多半是要REST，估计是一堆的properties或者一堆的json，代码方面要简单很多，设计方面却要费很多脑子。
前端是APP设计风格MVC，后端是API设计风格REST，两头都得折腾。</p>
<blockquote>
<p>方跃明
发表于 2009-9-9</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>图解SQL JOINS</title>
      <link>https://blog.fangyueming.cn/sql-join/</link>
      <guid>https://blog.fangyueming.cn/sql-join/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">图解SQL JOINS</source>
      <pubDate>Sat, 28 Apr 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="图解sql-joins"> 图解SQL JOINS</h1>
<p>左连接、右连接、内连接、外连接……傻傻分不清</p>
<p><img src="./sql-join.jpg" alt="SQL JOINS" /></p>
<blockquote>
<p>方跃明
2018-4-28</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>读《SQL反模式》</title>
      <link>https://blog.fangyueming.cn/sql-antipatterns/</link>
      <guid>https://blog.fangyueming.cn/sql-antipatterns/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">读《SQL反模式》</source>
      <pubDate>Thu, 31 May 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="读《sql反模式》"> 读《SQL反模式》</h1>
<h2 id="缘起"> 缘起</h2>
<p>逛知乎偶遇阿里云数据工程师张友东的<a href="https://zhuanlan.zhihu.com/p/36831350" target="_blank" rel="noopener noreferrer">《SQL反模式：SQL 建模与使用指南》</a>，力荐《SQL反模式》。于是，顺便也花几个小时刷了这本书。读到一半的时候，狂妄的认为自己差不多可以写一本 <strong>《反〈SQL反模式〉》</strong> 了，一时兴起便有了这篇读书笔记。原著中列出的反模式基本上涵盖了开发中常见的问题，虽说由于成书较早，解决方案不算尽善尽美，但即便如此也是前车之鉴，后车之师，有则改之，无则加勉，安全生产，警钟长鸣。</p>
<h2 id="一、原著封面"> 一、原著封面</h2>
<p><img src="./sql-antipatterns.jpg" alt="封面" /></p>
<h2 id="二、乱穿马路"> 二、乱穿马路</h2>
<h3 id="目的-存储多值属性-1nf"> 目的：存储多值属性（1NF）</h3>
<p>一个产品可以拥有多个作者，且在数据结构设计上应该符合1NF。</p>
<h3 id="反模式-格式化的逗号分隔列表"> 反模式：格式化的逗号分隔列表</h3>
<p>以下是一张不符合1NF的表格，用逗号分隔存储作者列表。由于<code>account_id</code>类型为<code>VARCHAR</code>，引发了长度不够、非作者ID、分隔符错误、查询统计困难、性能低下，等等一系列问题。</p>
<ul>
<li>Prodcuts</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">product_id</th>
<th style="text-align:center">product_name</th>
<th style="text-align:center">account_id</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">blog</td>
<td style="text-align:center">1,3</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">crm</td>
<td style="text-align:center">1,2,4</td>
</tr>
</tbody>
</table>
<h3 id="解决方案-创建一张交叉表"> 解决方案：创建一张交叉表</h3>
<p>多值属性建议使用交叉表来存储，有利于CURD，避免不可信赖的用户输入。</p>
<ul>
<li>ProductAccounts</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">product_id</th>
<th style="text-align:center">account_id</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">4</td>
</tr>
</tbody>
</table>
<h3 id="感悟-oracle实现分隔符转多行"> 感悟：Oracle实现分隔符转多行</h3>
<p>逗号分隔的做法在一些非常老的系统里很常见。比如伯俊BOS2.0，或许因为存活年份实在太久，迭代需要考虑兼容性，其大量的构思、数据结构、算法简直是开发届的 <strong>经典反面案例</strong> 。存在的问题年代久远根深蒂固，错误的基础上已经堆积了很多高层建筑，联系千丝万缕，牵一发而动全身，一不小心就会轰然倒塌。若重构成符合规范，其代价不亚于全新重写一个，所以很多时候也只有姑息处理，一声长叹。</p>
<div><pre><code><span>-- 伯俊BOS2.0采用Oracle数据库，其零售明细表</span>
<span>-- 一条明细用一个字段存放数量不定的导购，其分成比例也是一个字段，都采用逗号分隔</span>
<span>SELECT</span>
  Z<span>.</span>ID<span>,</span>                                                                 <span>-- 零售明细编号</span>
  Z<span>.</span>TOT_AMT_ACTUAL<span>,</span>                                                     <span>-- 明细成交金额</span>
  Z<span>.</span>QTY<span>,</span>                                                                <span>-- 明细成交数量</span>
  REGEXP_SUBSTR<span>(</span>Z<span>.</span>SALESREPS_ID<span>,</span><span>'[^,]+'</span><span>,</span> <span>1</span><span>,</span> L<span>)</span> SALESREPS_ID<span>,</span>             <span>-- 多个导购编号</span>
  NVL<span>(</span>REGEXP_SUBSTR<span>(</span>Z<span>.</span>SALESREPS_RATE<span>,</span><span>'[^,]+'</span><span>,</span> <span>1</span><span>,</span> L<span>)</span><span>,</span> <span>1</span><span>)</span> SALESREPS_RATE<span>,</span> <span>-- 多个分成比例</span>
  L
<span>FROM</span>
  M_RETAILITEM Z<span>,</span>                                                       <span>-- 零售明细表</span>
  <span>(</span><span>SELECT</span> <span>LEVEL</span> L <span>FROM</span> DUAL <span>CONNECT</span> <span>BY</span> <span>LEVEL</span> <span>&lt;=</span> <span>10</span><span>)</span><span>;</span>                    <span>-- 层级深度小于10</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><h2 id="三、单纯的树"> 三、单纯的树</h2>
<h3 id="目的-分层存储与查询-cte"> 目的：分层存储与查询（CTE）</h3>
<p>由于《SQL反模式》成书在2011年，且默认使用的是MySQL，当时还不支持SQL-99标准的WITH语句和CTE递归查询。作者表示，虽然使用“邻接表”数据结构没问题，但递归查询实现困难，所以采用了“路径枚举”、“嵌套集”、“闭包表”等数据结构来实现。时至今日，目前的MySQL、MariaDB和主流数据库都支持CTE递归查询了。所以，简洁有效的解决方案是“邻接表”数据结构加“SQL公用表表达式(CTE)递归实现。CTE可以解决无限分类、族谱、目录、树、公交站点等等多个经典问题。</p>
<h3 id="反模式-总是依赖父节点"> 反模式：总是依赖父节点</h3>
<p>一颗总是依赖父节点的树。</p>
<div><pre><code>1、这个Bug的成因是什么（Fran）
|-- 2、我觉得是一个空指针（Ollie）
|   `-- 3、不，我查过了（Fran）
`-- 4、我们需要查无效输入（Kukla）
    |-- 5、是的，那是个问题（Ollie）
    `-- 6、好，查一下吧（Fran）
        `-- 7、解决了（Kukla）
            `-- 8、非常棒（Fran）
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id="解决方案-邻接表-cte"> 解决方案：邻接表 + CTE</h3>
<div><pre><code><span>-- 表结构</span>
<span>CREATE</span> <span>TABLE</span> Comments <span>(</span>
  comment_id <span>SERIAL</span> <span>PRIMARY</span> <span>KEY</span><span>,</span>
  parent_id <span>BIGINT</span> <span>UNSIGNED</span><span>,</span>
  author <span>VARCHAR</span><span>(</span><span>20</span><span>)</span><span>,</span>
  content <span>VARCHAR</span><span>(</span><span>255</span><span>)</span>
<span>)</span><span>;</span>

<span>-- 插入数据</span>
<span>INSERT</span> <span>INTO</span> Comments <span>(</span>comment_id<span>,</span> parent_id<span>,</span> author<span>,</span> content<span>)</span> <span>VALUES</span>
<span>(</span><span>1</span><span>,</span> <span>null</span><span>,</span> <span>'Fran'</span><span>,</span> <span>'这个Bug的成因是什么'</span><span>)</span><span>,</span>
<span>(</span><span>2</span><span>,</span> <span>1</span><span>,</span> <span>'Ollie'</span><span>,</span> <span>'我觉得是一个空指针'</span><span>)</span><span>,</span>
<span>(</span><span>3</span><span>,</span> <span>2</span><span>,</span> <span>'Fran'</span><span>,</span> <span>'不，我查过了'</span><span>)</span><span>,</span>
<span>(</span><span>4</span><span>,</span> <span>1</span><span>,</span> <span>'Kukla'</span><span>,</span> <span>'我们需要查无效输入'</span><span>)</span><span>,</span>
<span>(</span><span>5</span><span>,</span> <span>4</span><span>,</span> <span>'Ollie'</span><span>,</span> <span>'是的，那是个问题'</span><span>)</span><span>,</span>
<span>(</span><span>6</span><span>,</span> <span>4</span><span>,</span> <span>'Fran'</span><span>,</span> <span>'好，查一下吧'</span><span>)</span><span>,</span>
<span>(</span><span>7</span><span>,</span> <span>6</span><span>,</span> <span>'Kukla'</span><span>,</span> <span>'解决了'</span><span>)</span><span>,</span>
<span>(</span><span>8</span><span>,</span> <span>7</span><span>,</span> <span>'Fran'</span><span>,</span> <span>'非常棒'</span><span>)</span><span>;</span>

<span>-- 递归查找评论id为4的所有子评论</span>
<span>WITH</span> RECURSIVE cte <span>AS</span> <span>(</span>
  <span>SELECT</span> <span>*</span> <span>FROM</span> Comments <span>WHERE</span> comment_id <span>=</span> <span>4</span>    <span>-- 条件：评论id = 4</span>
  <span>UNION</span>                                          <span>-- 递归：父评论id为此评论id的评论</span>
  <span>SELECT</span> c<span>.</span><span>*</span> <span>FROM</span> Comments c <span>JOIN</span> cte t <span>WHERE</span> c<span>.</span>parent_id <span>=</span> t<span>.</span>comment_id
<span>)</span>
<span>SELECT</span> <span>*</span> <span>FROM</span> cte<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br></div></div><h3 id="感悟-邻接表实现与转换"> 感悟：邻接表实现与转换</h3>
<ul>
<li>实现：<a href="https://www.cnblogs.com/f-ck-need-u/p/8875863.html" target="_blank" rel="noopener noreferrer">MariaDB表达式：CTE</a></li>
<li>转换：<a href="https://github.com/yi-ge/js-tree-list" target="_blank" rel="noopener noreferrer">js-tree-list</a></li>
</ul>
<h2 id="四、需要id"> 四、需要ID</h2>
<h3 id="目的-建立主键规范-pk"> 目的：建立主键规范（PK）</h3>
<p>这一章我就不多说了，一个联合主键（联合唯一）问题上纲上线了。其实主键命名为“id”没那么恐怖，仅仅因为可以使用“USING”？</p>
<p>问题并不是出在id，而是出在没有联合唯一，有点牵强附会，莫须有嘛。id表示，这个锅我还真不背。</p>
<p>尽信书则不如无书，千万别不加思索的照搬照抄。无则加勉，有则改之吧。正如作者说的： <strong>规则仅仅在它有帮助的时候才是好的</strong> 。</p>
<h3 id="反模式-以不变应万变"> 反模式：以不变应万变</h3>
<div><pre><code><span>-- bug_id、product_id没有唯一，当然可以出现重复值啦</span>
<span>CREATE</span> <span>TABLE</span> BugProducts <span>(</span>
  id            <span>SERIAL</span> <span>PRIMARY</span> <span>KEY</span><span>,</span>
  bug_id        <span>BIGINT</span> <span>UNSIGNED</span> <span>NOT</span> <span>NULL</span><span>,</span>
  product_id    <span>BIGINT</span> <span>UNSIGNED</span> <span>NOT</span> <span>NULL</span><span>,</span>
  <span>FOREIGN</span> <span>KEY</span> <span>(</span>bug_id<span>)</span> <span>REFERENCES</span> Bugs<span>(</span>bug_id<span>)</span><span>,</span>
  <span>FOREIGN</span> <span>KEY</span> <span>(</span>product_id<span>)</span> <span>REFERENCES</span> Bugs<span>(</span>product_id<span>)</span>
<span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id="解决方案-剪裁设计"> 解决方案：剪裁设计</h3>
<div><pre><code><span>CREATE</span> <span>TABLE</span> BugProducts <span>(</span>
  bug_id        <span>BIGINT</span> <span>UNSIGNED</span> <span>NOT</span> <span>NULL</span><span>,</span>
  product_id    <span>BIGINT</span> <span>UNSIGNED</span> <span>NOT</span> <span>NULL</span><span>,</span>
  <span>PRIMARY</span> <span>KEY</span> <span>(</span>bug_id<span>,</span> product_id<span>)</span><span>,</span>                 <span>-- 放大招，此处应有掌声</span>
  <span>FOREIGN</span> <span>KEY</span> <span>(</span>bug_id<span>)</span> <span>REFERENCES</span> Bugs<span>(</span>bug_id<span>)</span><span>,</span>
  <span>FOREIGN</span> <span>KEY</span> <span>(</span>product_id<span>)</span> <span>REFERENCES</span> Bugs<span>(</span>product_id<span>)</span>
<span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h3 id="感悟-主键的选择与设计"> 感悟：主键的选择与设计</h3>
<ul>
<li>尽量使用逻辑主键，尽量避免使用业务主键。</li>
<li>若一定要使用业务主键必须保证业务逻辑不改变。比如手机做主键，一但换号，各种逻辑必须随之改变。</li>
<li>主键不能交由用户修改，特别是业务主键。</li>
<li>除交叉表外，尽量不使用复合主键。</li>
<li>分布式需要考虑使用uuid、uuid_short、Snowflake，而不仅仅是自增主键（可参考MongoDB的ObjectId）。</li>
</ul>
<h2 id="五、不用钥匙的入口"> 五、不用钥匙的入口</h2>
<h3 id="目的-简化数据库架构-fk"> 目的：简化数据库架构（FK）</h3>
<p>抛开剂量谈毒性，都是耍流氓。到底要不要用外键？不提前提条件和场景，单说啥需要或者不需要的，都是伪科学。</p>
<ul>
<li>传统派需要注意，原著上的分条执行SQL的打时间差的碰瓷行为，完全属于误导。</li>
</ul>
<div><pre><code><span>-- 分开执行</span>
<span>SELECT</span> account_id <span>FROM</span> Accounts <span>WHERE</span> account_id <span>=</span> <span>1</span><span>;</span>
<span>INSERT</span> <span>INTO</span> Bugs<span>(</span>reported_by<span>)</span> <span>VALUES</span> <span>(</span><span>1</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>SQL难道不能使用子语句最大限度降低时间差的影响吗，何况还有锁行和事物机制？</p>
<div><pre><code><span>-- 子语句执行</span>
<span>INSERT</span> <span>INTO</span> Bugs<span>(</span>reported_by<span>)</span> <span>VALUES</span> <span>(</span>
  <span>SELECT</span> account_id <span>FROM</span> Accounts <span>WHERE</span> account_id <span>=</span> <span>1</span>
<span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><ul>
<li>反对派也别高兴太早，如果场景属于小型应用而且非常注重安全性，你以外键同步更新和删除麻烦来拒绝，也是站不住脚的。难道你不知道外键有“ <strong>级联更新</strong> ”吗？</li>
</ul>
<h3 id="反模式-无视约束"> 反模式：无视约束</h3>
<ul>
<li>使用应用程序保证数据的完整性</li>
<li>不用外键时数据管理简单，操作方便，性能高</li>
<li>分布式部署（分库、分表），约束单纯靠数据库实现已力所难及</li>
</ul>
<h3 id="解决方案-声明约束"> 解决方案：声明约束</h3>
<ul>
<li>由数据库自身保证数据一致性，完整性，更可靠</li>
<li>有主外键的可以增加ER图的可读性，这点在数据库设计时非常重要</li>
<li>外键在一定程度上说明的业务逻辑，会使设计周到具体全面</li>
</ul>
<h3 id="感悟-安全-vs-性能"> 感悟：安全 vs 性能</h3>
<ul>
<li>注重安全：使用外键，由数据库自身保证。适用于小型应用和注重安全的大中型应用。</li>
<li>注重性能：抛弃外键，由程序控制约束。适用于允许数据冗余和容错的大中型应用，比如互联网场景。</li>
</ul>
<h2 id="六、实体-属性-值"> 六、实体-属性-值</h2>
<h3 id="目的-支持可变属性-eav"> 目的：支持可变属性（EAV）</h3>
<p>完美支持弹性可变属性基本算是伪命题，实际应用中却有大量这样的需求。
究其原因，不外乎要么最初对需求分析过于粗放，没有深入到细节，很多本需弹性的需求却被固化了，到发现时为时已晚。</p>
<h3 id="反模式-使用泛型属性表"> 反模式：使用泛型属性表</h3>
<p>将EAV（实体-属性-值：类似于NoSQL的Key-Value）结构用在了关系型数据库。问题如下：</p>
<ul>
<li>数据未定义类型，通常是字符类型的，通常需要转换后才能对比</li>
<li>不可靠的用户输入导致录入格式无法保证，因此数据无法转换</li>
<li>无法保证取值被正确约束，比如状态（Status）值超过规定范围</li>
<li>Key（attr_name）命名不一致，一义多名，导致问题</li>
</ul>
<div><pre><code><span>CREATE</span> <span>TABLE</span> IssueAttributes <span>(</span>
  issue_id    <span>BIGINT</span> <span>UNSIGNED</span> <span>NOT</span> <span>NULL</span><span>,</span>
  attr_name   <span>VARCHAR</span><span>(</span><span>100</span><span>)</span> <span>NOT</span> <span>NULL</span><span>,</span>
  attr_value  <span>VARCHAR</span><span>(</span><span>100</span><span>)</span><span>,</span>
  <span>PRIMARY</span> <span>KEY</span> <span>(</span>issue_id<span>,</span> attr_name<span>)</span><span>,</span>
  <span>FOREIGN</span> <span>KEY</span> <span>(</span>issue_id<span>)</span> <span>REFERENCES</span> Issues<span>(</span>issue_id<span>)</span>
<span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h3 id="解决方案-模型化子类型"> 解决方案：模型化子类型</h3>
<ul>
<li>单表继承：多一个属性，就多创建一列呗，用不到的就空着。</li>
<li>实体表继承：公共的属性拎出来一张主表，不常用的属性加上公共属性另外搞一张表，另类的属性加公共属性再搞一张表，外键关联起来。</li>
<li>类表继承：公共的属性拎出来一张主表，不常用的属性每一个属性搞一张表存着，外键关联起来。</li>
<li>半结构化数据模型：把不常用属性存成JSON或者XML。（吐槽：真是美其名曰了，我想知道跟逗号有什么区别？难道存逗号就不是半结构化，存JSON就高大上了？）</li>
</ul>
<h3 id="感悟-以不变应万变"> 感悟：以不变应万变</h3>
<p>可变属性基本算是一个伪命题，由于属性不确定性，每个属性搞一个字段是能解决数据类型问题，但是你确定要这样做？
一张表一百个字段，用到的就几个，其他全空值？新来一属性，就让DBA<code>ALTER TABLE ADD COLUMN</code>一次？然后招呼程序员改代码？
不是所有人都是DBA，也不是所有人都是程序员，普通的系统管理用户可能连基本的编程代码都不会，怎么办？
个人认为，对付“千变万化”的指导思想是， <strong>存储结构不变</strong> ，数据爱怎么变怎么变，随他变。</p>
<ol>
<li>使用Key-Value，分段存储，动态弹性存储属性，灵活性设计方案；</li>
<li>使用JSON（MySQL的字段已经全面支持JSON类型）或XML半结构化存储，整段存取，也算是Key-Value的变种；</li>
<li>使用特性表<code>Features</code>扩张，不同产品拥有多个特性表（前端表现为多个Tab页），按需迭代，对既有设计的影响尽量做到最小。</li>
</ol>
<div><pre><code><span>-- 特性</span>
<span>CREATE</span> <span>TABLE</span> Features<span>(</span>
  feature_id <span>SERIAL</span> <span>PRIMARY</span> <span>KEY</span><span>,</span>
  name       <span>VARCHAR</span><span>(</span><span>255</span><span>)</span> <span>UNIQUE</span> <span>NOT</span> <span>NULL</span><span>,</span>
  <span>comment</span>    <span>VARCHAR</span><span>(</span><span>255</span><span>)</span> <span>NULL</span>
<span>)</span><span>;</span>
<span>-- 产品特性</span>
<span>CREATE</span> <span>TABLE</span> ProductFeatures <span>(</span>
  product_id  <span>BIGINT</span> <span>UNSIGNED</span> <span>NOT</span> <span>NULL</span><span>,</span>
  feature_id  <span>BIGINT</span> <span>UNSIGNED</span> <span>NOT</span> <span>NULL</span><span>,</span>
  <span>PRIMARY</span> <span>KEY</span> <span>(</span>product_id<span>,</span> feature_id<span>)</span><span>,</span>
  <span>FOREIGN</span> <span>KEY</span> <span>(</span>product_id<span>)</span> <span>REFERENCES</span> Products<span>(</span>product_id<span>)</span><span>,</span>
  <span>FOREIGN</span> <span>KEY</span> <span>(</span>feature_id<span>)</span> <span>REFERENCES</span> Features<span>(</span>feature_id<span>)</span>
<span>)</span><span>;</span>
<span>-- 当表名是变量，可采用存储过程实现，甚至可以使用循环</span>
<span>SET</span> <span>@sql</span> <span>=</span> concat<span>(</span>
    <span>'SELECT * FROM '</span><span>,</span>
    <span>(</span><span>SELECT</span> name <span>FROM</span> features <span>WHERE</span> feature_id <span>=</span> <span>1</span><span>)</span>
<span>)</span><span>;</span>
<span>PREPARE</span> stmt <span>FROM</span> <span>@sql</span><span>;</span>
<span>EXECUTE</span> stmt<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div><h2 id="七、多态关联"> 七、多态关联</h2>
<h3 id="目的-引用多个父表-1nf"> 目的：引用多个父表（1NF）</h3>
<p>Comments（评论表）可能被Bugs（错误表）和特性表（Features）同时用到。
其实原著中有一句话我非常赞同： <strong>当你看清楚问题的根源时，解决方案将变得异常简单：多态关联是一个反向关联。</strong></p>
<h3 id="反模式-使用双用途外键"> 反模式：使用双用途外键</h3>
<p>Comments里面多了个type字段说明是评论来自Bugs还是来自Features的。就像一个孩子有两个父亲。</p>
<ul>
<li>Bugs</li>
</ul>
<table>
<thead>
<tr>
<th>bug_id</th>
<th>product_id</th>
<th>name</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>1</td>
<td>产品拥有多个作者</td>
</tr>
<tr>
<td>2</td>
<td>1</td>
<td>评论需要分层</td>
</tr>
<tr>
<td>3</td>
<td>2</td>
<td>根据关键字统计引用量出错</td>
</tr>
</tbody>
</table>
<ul>
<li>Features</li>
</ul>
<table>
<thead>
<tr>
<th>feature_id</th>
<th>product_id</th>
<th>name</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>1</td>
<td>完美支持多作者</td>
</tr>
<tr>
<td>2</td>
<td>1</td>
<td>树形多层评论</td>
</tr>
<tr>
<td>3</td>
<td>2</td>
<td>支持关键字统计</td>
</tr>
</tbody>
</table>
<ul>
<li>Comments</li>
</ul>
<table>
<thead>
<tr>
<th>comment_id</th>
<th>issue_type</th>
<th>issue_id</th>
<th>comment</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>bug</td>
<td>1</td>
<td>bug 1</td>
</tr>
<tr>
<td>2</td>
<td>feature</td>
<td>1</td>
<td>feture 1</td>
</tr>
<tr>
<td>3</td>
<td>bug</td>
<td>2</td>
<td>bug 2</td>
</tr>
</tbody>
</table>
<h3 id="解决方案-让关系变得简单"> 解决方案：让关系变得简单</h3>
<p>使用交叉表。</p>
<ul>
<li>Bugs（同上）</li>
<li>Featrues（同上）</li>
<li>Commnets（变为基础表，不再关联其他表）</li>
</ul>
<table>
<thead>
<tr>
<th>comment_id</th>
<th>parent_id</th>
<th>commnet</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>null</td>
<td>bug 1</td>
</tr>
<tr>
<td>2</td>
<td>null</td>
<td>feature 1</td>
</tr>
<tr>
<td>3</td>
<td>1</td>
<td>re bug 1</td>
</tr>
</tbody>
</table>
<ul>
<li>BugsComments（交叉表）</li>
</ul>
<table>
<thead>
<tr>
<th>bug_id</th>
<th>comment_id</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>1</td>
</tr>
</tbody>
</table>
<ul>
<li>FeatruesComments（交叉表）</li>
</ul>
<table>
<thead>
<tr>
<th>feature_id</th>
<th>comment_id</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>2</td>
</tr>
</tbody>
</table>
<h3 id="感悟-投胎很重要-看清楚谁是你爸"> 感悟：投胎很重要，看清楚谁是你爸！</h3>
<p>说白了，就是一个父亲有两亲生孩子正常，一孩子有两个亲生父亲？要不要打听一下隔壁是不是姓王？
所以，评论表才是父亲，错误评论和特性评论表才是孩子。可怜的娃，认子作父！</p>
<p>同样的，我见过很多设计，在规划附件表（Attachments）的时候犯同样的错误，总以为附件从属于文章（插图等），附件从属于产品（说明书等），附件从属于门店（照片等）。
重度耦合，导致同一份文件副本被存储多次，文件存储系统管理混乱，臃肿不堪，无法去重。说实话，别再认贼作父了，附件才是真正的老子。</p>
<h2 id="八、多列属性"> 八、多列属性</h2>
<h3 id="目的-存储多值属性-又是1nf"> 目的：存储多值属性（又是1NF）</h3>
<p>给Bugs打标签，一个Bugs有多个标签。</p>
<h3 id="反模式-创建多个列"> 反模式：创建多个列</h3>
<p>创建多个tag列，你能确保一个Bugs最多只能有三个标签？假如最多有100个，tag100？</p>
<ul>
<li>Bugs</li>
</ul>
<table>
<thead>
<tr>
<th>bug_id</th>
<th>description</th>
<th>tag1</th>
<th>tag2</th>
<th>tag3</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>保存时崩溃</td>
<td>crash</td>
<td>null</td>
<td>null</td>
</tr>
<tr>
<td>2</td>
<td>打印输出缓慢</td>
<td>printing</td>
<td>preformance</td>
<td>null</td>
</tr>
<tr>
<td>3</td>
<td>需要支持XML</td>
<td>null</td>
<td>null</td>
<td>null</td>
</tr>
</tbody>
</table>
<h3 id="解决方案-创建从属表"> 解决方案：创建从属表</h3>
<ul>
<li>Bugs</li>
</ul>
<table>
<thead>
<tr>
<th>bug_id</th>
<th>description</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>保存时崩溃</td>
</tr>
<tr>
<td>2</td>
<td>打印输出缓慢</td>
</tr>
<tr>
<td>3</td>
<td>需要支持XML</td>
</tr>
</tbody>
</table>
<ul>
<li>Tags</li>
</ul>
<table>
<thead>
<tr>
<th>tag_id</th>
<th>name</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>crash</td>
</tr>
<tr>
<td>2</td>
<td>printing</td>
</tr>
<tr>
<td>3</td>
<td>preformance</td>
</tr>
</tbody>
</table>
<ul>
<li>BugsTags</li>
</ul>
<table>
<thead>
<tr>
<th>bug_id</th>
<th>tag_id</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>1</td>
</tr>
<tr>
<td>2</td>
<td>2</td>
</tr>
<tr>
<td>2</td>
<td>3</td>
</tr>
</tbody>
</table>
<h3 id="感悟-如此穷追不舍-1nf表示受够了"> 感悟：如此穷追不舍，1NF表示受够了！</h3>
<p>1NF这个问题又拿出来讲，作者真有点过分了，说逗号分隔是“乱穿马路”我忍了，然后又来了，把逗号改成多列，每列命名一下，说是“多列属性”，又拿来炒！这个真不能忍！</p>
<h2 id="九、元数据分裂"> 九、元数据分裂</h2>
<h3 id="支持可扩展性-partition"> 支持可扩展性（PARTITION）</h3>
<p>数量极为庞大的时候，考虑到空间和性能，需要进行分表操作。但如果手动分表，由于没有自动化的系统逻辑联系，会造成数据唯一性、完整性、同步性、跨表查询等各种问题，以及创建新表，迁移业务导致业务暂停的问题。自动化、标准化的分表请参考数据表分区技术<code>PARTITION</code>。</p>
<h3 id="反模式-克隆表与克隆列"> 反模式：克隆表与克隆列</h3>
<div><pre><code><span>CREATE</span> <span>TABLE</span> Bugs_2007<span>(</span>bug_id <span>SERIAL</span> <span>PRIMARY</span> <span>KEY</span><span>,</span> date_reported <span>DATE</span> <span>/* other columns*/</span><span>)</span><span>;</span>
<span>CREATE</span> <span>TABLE</span> Bugs_2008<span>(</span>bug_id <span>SERIAL</span> <span>PRIMARY</span> <span>KEY</span><span>,</span> date_reported <span>DATE</span> <span>/* other columns*/</span><span>)</span><span>;</span>
<span>CREATE</span> <span>TABLE</span> Bugs_2009<span>(</span>bug_id <span>SERIAL</span> <span>PRIMARY</span> <span>KEY</span><span>,</span> date_reported <span>DATE</span> <span>/* other columns*/</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h3 id="解决方案-分区及标准化"> 解决方案：分区及标准化</h3>
<div><pre><code><span>CREATE</span> <span>TABLE</span> Bugs <span>(</span>
  bug_id <span>SERIAL</span> <span>PRIMARY</span> <span>KEY</span><span>,</span>
  date_reported <span>DATE</span>
  <span>-- other columns</span>
<span>)</span> PARTTION <span>BY</span> <span>HASH</span> <span>(</span><span>YEAR</span><span>(</span>date_reported<span>)</span><span>)</span> PARTTIONS <span>4</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h3 id="感悟-前车之鉴-后车之师"> 感悟：前车之鉴，后车之师</h3>
<p>很多方案其实都是现成的，学会借鉴很重要。康庄大道通罗马，可惜有人偏偏钻进了死胡同。</p>
<h2 id="十、取整错误"> 十、取整错误</h2>
<h3 id="目的-使用小数取代整数-decimal"> 目的：使用小数取代整数（DECIMAL)</h3>
<p><code>IEEE 754</code>的浮点数精度问题会导致计算结果偏差。很多数据库引擎的<code>FLOAT</code>类型就是一个非精确值。</p>
<h3 id="反模式-使用float类型"> 反模式：使用FLOAT类型</h3>
<div><pre><code><span>-- 字段该加在哪张表？时薪难道常年不变？我就不吐槽了。</span>
<span>ALTER</span> <span>TABLE</span> Bugs <span>ADD</span> <span>COLUMN</span> <span>hour</span> <span>FLOAT</span><span>;</span>
<span>ALTER</span> <span>TABLE</span> Accounts <span>ADD</span> <span>COLUMN</span> hour_rate <span>FLOAT</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h3 id="解决方案-使用decimal类型"> 解决方案：使用DECIMAL类型</h3>
<div><pre><code><span>ALTER</span> <span>TABLE</span> Bugs <span>ADD</span> <span>COLUMN</span> <span>hour</span> <span>DECIMAL</span><span>(</span><span>9</span><span>,</span> <span>2</span><span>)</span><span>;</span>
<span>ALTER</span> <span>TABLE</span> Accounts <span>ADD</span> <span>COLUMN</span> hour_rate <span>DECIMAL</span><span>(</span><span>9</span><span>,</span> <span>2</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h3 id="感悟-float不可靠-地球人都知道"> 感悟：FLOAT不可靠，地球人都知道</h3>
<p>其实也算是非数据库程序员经常会犯的错误，很多程序设计语言并没有<code>DECIMAL</code>类型，高精度计算需要用到数学库。
比如<code>JavaScript</code>只有<code>number</code>类型，高精度计算需要用到<a href="http://mathjs.org" target="_blank" rel="noopener noreferrer">math.js</a>。</p>
<h2 id="十一、每日新花样"> 十一、每日新花样</h2>
<h3 id="目的-限定列的有效值-enum"> 目的：限定列的有效值（ENUM）</h3>
<p>Status（状态）取值必须有效。但是，Status取值却不是固定的，有可能会添加Status的值。</p>
<h3 id="反模式-在列定义上指定可选值"> 反模式：在列定义上指定可选值</h3>
<p>使用<code>CHECK</code>或者<code>ENUM</code>定义在列上，当要动态添加取值的时候，会导致要求DBA去修改数据结构。</p>
<div><pre><code><span>CREATE</span> <span>TABLE</span> Bugs <span>(</span>
  <span>-- other columns</span>
  <span>status</span> <span>ENUM</span><span>(</span><span>'NEW'</span><span>,</span> <span>'IN PROGRESS'</span><span>,</span> <span>'FIXED'</span><span>)</span>
<span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="解决方案-在数据中指定值"> 解决方案：在数据中指定值</h3>
<ul>
<li>BugsStatus</li>
</ul>
<div><pre><code><span>CREATE</span> <span>TABLE</span> BugsStatus <span>(</span>
  <span>status</span> <span>VARCHAR</span><span>(</span><span>20</span><span>)</span> <span>PRIMARY</span> <span>KEY</span>
<span>)</span><span>;</span>
<span>INSERT</span> <span>INTO</span> BugsStatus <span>(</span><span>status</span><span>)</span> <span>VALUES</span>
<span>(</span><span>'NEW'</span><span>)</span><span>,</span> <span>(</span><span>'IN PROGRESS'</span><span>,</span> <span>(</span><span>'FIXED'</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><ul>
<li>Bugs</li>
</ul>
<div><pre><code><span>CREATE</span> <span>TABLE</span> Bugs<span>(</span>
  <span>-- other columns</span>
  <span>status</span> <span>VARCHAR</span><span>(</span><span>20</span><span>)</span><span>,</span>
  <span>FOREIGN</span> <span>KEY</span> <span>(</span><span>status</span><span>)</span> <span>REFERENCES</span> BugsStauts<span>(</span><span>status</span><span>)</span>
    <span>ON</span> <span>UPDATE</span> <span>CASCADE</span>
<span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h3 id="感悟-慎用enum-枚举类型"> 感悟：慎用ENUM（枚举类型）</h3>
<p>大多数SQL引擎并不支持枚举类型，除非固化不动，尽量慎用。增删改的时候需要专业人员使用DDL（数据库定义语言），而不是普通用户可以使用的DML（数据操纵语言）。</p>
<h2 id="十二、幽灵文件"> 十二、幽灵文件</h2>
<h3 id="目标-存储图片或其他多媒体大文件-blob"> 目标：存储图片或其他多媒体大文件（BLOB）</h3>
<p>这个问题见仁见智了，其实大量的做法是用<code>VARCHAR</code>存储文件路径，原著推荐使用<code>BLOB</code>二进制格式存储到数据库。你认为那种正确？我能告诉你都错了吗？</p>
<h3 id="反模式-假设你必须使用文件系统-也就是存储文件路径啦"> 反模式：假设你必须使用文件系统（也就是存储文件路径啦）</h3>
<div><pre><code><span>CREATE</span> <span>TABLE</span> Screenshots<span>(</span>
  bug_id            <span>BIGINT</span> <span>UNSIGNED</span> <span>NOT</span> <span>NULL</span><span>,</span>
  image_id          <span>BIGINT</span> <span>UNSIGNED</span> <span>NOT</span> <span>NULL</span><span>,</span>
  screenshot_path   <span>VARCHAR</span><span>(</span><span>100</span><span>)</span><span>,</span>
  caption           <span>VARCHAR</span><span>(</span><span>100</span><span>)</span><span>,</span>
  <span>PRIMARY</span> <span>KEY</span> <span>(</span>bug_id<span>,</span> image_id<span>)</span><span>,</span>
  <span>FOREIGN</span> <span>KEY</span> <span>(</span>bug_id<span>)</span> <span>REFERENCES</span> Bugs<span>(</span>bug_id<span>)</span>
<span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>原著列举了几大罪状：</p>
<ul>
<li>文件不支持DELETE</li>
<li>文件不支持事物隔离</li>
<li>文件不支持回滚操作</li>
<li>文件不支持数据库备份工具</li>
<li>文件不支持SQL的访问权限设置</li>
<li>文件不是SQL数据类型</li>
</ul>
<h3 id="解决方案-在需要时使用blob类型"> 解决方案：在需要时使用BLOB类型</h3>
<div><pre><code><span>CREATE</span> <span>TABLE</span> Screenshots<span>(</span>
  bug_id            <span>BIGINT</span> <span>UNSIGNED</span> <span>NOT</span> <span>NULL</span><span>,</span>
  image_id          <span>BIGINT</span> <span>UNSIGNED</span> <span>NOT</span> <span>NULL</span><span>,</span>
  screenshot_path   <span>BLOB</span><span>,</span>
  caption           <span>VARCHAR</span><span>(</span><span>100</span><span>)</span><span>,</span>
  <span>PRIMARY</span> <span>KEY</span> <span>(</span>bug_id<span>,</span> image_id<span>)</span><span>,</span>
  <span>FOREIGN</span> <span>KEY</span> <span>(</span>bug_id<span>)</span> <span>REFERENCES</span> Bugs<span>(</span>bug_id<span>)</span>
<span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>其实反模式里面的罪状都可以用程序控制的办法解决。
时至今日，静态内容使用分层存储更有甚者使用对象存储，是时候考虑一下问题了：</p>
<ul>
<li>文件如何去重，特别是大文件？</li>
<li>流媒体文件如何在线播放？</li>
<li>动辄5G、10G的文件也要存BOLB吗？</li>
<li>不同的bug引用了同一份文件副本，有几份存几份BLOB么？</li>
<li>为了快速加载，要支持CDN，如何操作？</li>
<li>如何迁移到云存储？
<ul>
<li><a href="https://aws.amazon.com" target="_blank" rel="noopener noreferrer">Amazon S3</a></li>
<li><a href="https://www.aliyun.com/product/oss" target="_blank" rel="noopener noreferrer">阿里云OSS</a></li>
<li><a href="https://cloud.tencent.com/product/cos" target="_blank" rel="noopener noreferrer">腾讯COS</a></li>
<li><a href="https://www.qiniu.com" target="_blank" rel="noopener noreferrer">七牛云</a></li>
<li><a href="https://www.firebase.com" target="_blank" rel="noopener noreferrer">Firebase</a></li>
</ul>
</li>
<li>如何支持私有云？
<ul>
<li><a href="https://ceph.com" target="_blank" rel="noopener noreferrer">Ceph</a></li>
<li><a href="https://www.seafile.com" target="_blank" rel="noopener noreferrer">SeaFile</a></li>
</ul>
</li>
</ul>
<h3 id="感悟-我说都错了-你信吗"> 感悟：我说都错了，你信吗？</h3>
<ol>
<li>文件存储逐步从传统文件系统迁移到了对象存储服务。还在用BLOB存入数据库？就在记忆里画一个叉吧。</li>
<li>原著在数据结构设计上欠妥，主次关系混乱了。正如我在中提到的，文件其实属于基类。以下为建议数据结构：</li>
</ol>
<div><pre><code><span>CREATE</span> <span>TABLE</span> files <span>(</span>
  id          <span>CHAR</span><span>(</span><span>32</span><span>)</span> <span>PRIMARY</span> <span>KEY</span><span>,</span>       <span>-- 文件HASH，文件名，一般是MD5</span>
  mime        <span>VARCHAR</span><span>(</span><span>255</span><span>)</span> <span>NOT</span> <span>NULL</span><span>,</span>      <span>-- 文件MIME，可计算为文件扩展名</span>
  size        <span>BIGINT</span> <span>UNSIGNED</span> <span>NOT</span> <span>NULL</span>    <span>-- 文件大小</span>
  <span>-- 无path？因为有buckets表和file_buckets表，二者结合解决存放位置问题</span>
<span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><div><pre><code><span>CREATE</span> <span>TABLE</span> BugFiles <span>(</span>
  bug_id  <span>BIGINT</span> <span>UNSIGNED</span> <span>NOT</span> <span>NULL</span><span>,</span>
  file_id <span>BIGINT</span> <span>UNSIGNED</span> <span>NOT</span> <span>NULL</span><span>,</span>
  <span>PRIMARY</span> <span>KEY</span> <span>(</span>bug_id<span>,</span> file_id<span>)</span><span>,</span>
  <span>FOREIGN</span> <span>KEY</span> <span>(</span>bug_id<span>)</span> <span>REFERENCES</span> Bugs<span>(</span>bug_id<span>)</span><span>,</span>
  <span>FOREIGN</span> <span>KEY</span> <span>(</span>file_id<span>)</span> <span>REFERENCES</span> files<span>(</span>id<span>)</span>
<span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h2 id="十三、乱用索引"> 十三、乱用索引</h2>
<h3 id="目标-优化性能-index"> 目标：优化性能（INDEX)</h3>
<p>改善性能最好的技术就是在数据库中合理的使用索引。</p>
<h3 id="反模式-无规划的使用索引"> 反模式：无规划的使用索引</h3>
<ul>
<li>无索引或者索引不足：导致历遍全表</li>
<li>使用了太多的索引或者使用了一些无效索引：导致不必要的额外开销</li>
<li>执行一些让索引无能为力的查询：根本没有用到索引</li>
</ul>
<h3 id="解决方案-mentor你的索引"> 解决方案：MENTOR你的索引</h3>
<ul>
<li>Measure（测量）：查看“慢查询”日志</li>
<li>Explain（解释）：查询执行计划（QEP）</li>
<li>Nominate（挑选）：查询分析器</li>
<li>Test（测试）：把找出来的问题做相应测试</li>
<li>Optimize（优化）：优化索引性能</li>
<li>Rebuild（重建）：重建索引</li>
</ul>
<h3 id="感悟-合理利用数据查询分析工具"> 感悟：合理利用数据查询分析工具</h3>
<p>没有索引翻箱倒柜，索引太多打草惊蛇。过犹不及，有和没有都会引起不必要的内耗，导致性能问题，合理的安排索引非常重要。</p>
<h2 id="十四、对未知的恐惧"> 十四、对未知的恐惧</h2>
<h3 id="目标-辨别悬空值-null"> 目标：辨别悬空值（NULL)</h3>
<p>获取全名的时候，将中间名的列声明成了<code>NULL</code>，导致中间名为<code>NULL</code>的全名也成了<code>NULL</code>。</p>
<div><pre><code><span>SELECT</span> CONCAT<span>(</span>first_name<span>,</span> middle_initial<span>,</span> last_name<span>)</span> <span>FROM</span> Accounts<span>;</span>
<span>-- output: NULL</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h3 id="反模式-将null作为普通的值-反之亦然"> 反模式：将NULL作为普通的值，反之亦然</h3>
<ul>
<li>将所有列一律声明为<code>NOT NULL</code></li>
<li>列中的每一个值都必须存在且有意义的时候，却用了<code>NULL</code></li>
</ul>
<h3 id="解决方案-将null视为特殊值"> 解决方案：将NULL视为特殊值</h3>
<p>值必须存在且有意义的时候，请务必声明为<code>NOT NULL</code>，可结合<code>DEFAULT</code>赋予默认值。</p>
<h3 id="感悟-null-or-not-null-that-is-the-question"> 感悟：NULL or NOT NULL，that is the question</h3>
<ul>
<li>传统程序员：<code>true</code>、<code>false</code></li>
<li>数据库程序员：<code>true</code>、<code>false</code>、<code>null</code></li>
<li>JavaScript程序员：<code>true</code>、<code>false</code>、<code>null</code>、<code>undefined</code>、<code>NaN</code>、<code>Infinity</code>、……</li>
</ul>
<h2 id="十五、模棱两可的分组"> 十五、模棱两可的分组</h2>
<h3 id="目标-获取每组的最大值-group-by"> 目标：获取每组的最大值（GROUP BY）</h3>
<p>使用 <code>GROUP BY</code> 获取正确的数据。</p>
<ul>
<li>Bugs</li>
</ul>
<table>
<thead>
<tr>
<th>product_name</th>
<th>date_reported</th>
<th>bug_id</th>
</tr>
</thead>
<tbody>
<tr>
<td>Open RoundFile</td>
<td>2009-12-19</td>
<td><s>1234</s></td>
</tr>
<tr>
<td>Open RoundFile</td>
<td><s>2010-06-01</s></td>
<td>2248</td>
</tr>
<tr>
<td>Visual TurboBuilder</td>
<td>2010-02-16</td>
<td>3456</td>
</tr>
<tr>
<td>Visual TurboBuilder</td>
<td>2010-02-10</td>
<td>4077</td>
</tr>
<tr>
<td>Visual TurboBuilder</td>
<td>2010-02-16</td>
<td>5150</td>
</tr>
<tr>
<td>ReConsider</td>
<td>2010-01-01</td>
<td>5678</td>
</tr>
<tr>
<td>ReConsider</td>
<td>2009-11-09</td>
<td>8063</td>
</tr>
</tbody>
</table>
<h3 id="反模式-引用非分组列"> 反模式：引用非分组列</h3>
<div><pre><code><span>SELECT</span> product_name<span>,</span> <span>max</span><span>(</span>date_reported<span>)</span> <span>AS</span> latest<span>,</span> bug_id
<span>FROM</span> bugs <span>GROUP</span> <span>BY</span> product_name <span>ORDER</span> <span>BY</span> bug_id<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><p>结果如下：</p>
<table>
<thead>
<tr>
<th>product_name</th>
<th>date_reported</th>
<th>bug_id</th>
</tr>
</thead>
<tbody>
<tr>
<td>Open RoundFile</td>
<td><s>2010-06-01</s></td>
<td><s>1234</s></td>
</tr>
<tr>
<td>Visual TurboBuilder</td>
<td>2010-02-16</td>
<td>3456</td>
</tr>
<tr>
<td>ReConsider</td>
<td>2010-01-01</td>
<td>5678</td>
</tr>
</tbody>
</table>
<ul>
<li>请注意第一行的<code>date_reported</code>与<code>bug_id</code>并不匹配，已用删除线标记</li>
<li>Visual TurboBuilder 其实有两行数据都是 2010-02-16 的</li>
</ul>
<h3 id="解决方法-无歧义的使用列"> 解决方法：无歧义的使用列</h3>
<p>原著给出的方案，我粗略看了一些，依然是问题重重：</p>
<ul>
<li>只查询功能依赖的列product_name, max(date_reported)：我就要对应bug_id怎么办？</li>
<li>使用关联子查询：给出了相当复杂的SQL，有效性有待验证</li>
<li>使用衍生表：给出了相当复杂的SQL，有效性有待验证</li>
<li>使用JOIN：给出了相当复杂的SQL，有效性有待验证</li>
<li>对额外列使用聚合函数MAX(bug_id)：万一bug_id并不MAX呢？</li>
<li>连同组所有值，用<code>GROPU_CONCAT</code>连接成bug_id_list：说好的我只要对应的bug_id你给我一堆？</li>
</ul>
<h3 id="感悟-思维务必要清晰"> 感悟：思维务必要清晰</h3>
<p>其实没那么复杂，使用聚合函数时思维务必要清晰，父子主次分清楚，否则一片混沌。上列解法如下，简单吧？</p>
<div><pre><code><span>SELECT</span> product_name<span>,</span> date_reported<span>,</span> bug_id <span>FROM</span> bugs
<span>WHERE</span> date_reported <span>IN</span> <span>(</span><span>SELECT</span> <span>max</span><span>(</span>date_reported<span>)</span> <span>FROM</span> bugs b <span>GROUP</span> <span>BY</span> product_name<span>)</span>
<span>ORDER</span> <span>BY</span> date_reported <span>DESC</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h2 id="十六、随机选择"> 十六、随机选择</h2>
<h3 id="目标-获取样本记录-rand"> 目标：获取样本记录（RAND）</h3>
<p>从大量记录中获取一条随机记录。</p>
<h3 id="反模式-随机排序"> 反模式：随机排序</h3>
<p>著名的将<code>RAND()</code>放<code>ORDER BY</code>，历遍全表加重复扫描，性能不出问题才怪。</p>
<div><pre><code><span>SELECT</span> <span>*</span> <span>FROM</span> Bugs <span>ORDER</span> <span>BY</span> RAND<span>(</span><span>)</span> <span>LIMIT</span> <span>1</span><span>;</span>
</code></pre>
<div><span>1</span><br></div></div><h3 id="解决方案-没有具体的顺序"> 解决方案：没有具体的顺序</h3>
<p>原著中给了很多方法，性能倒是改善了。我也不多做评价了，一句话，有必要搞这么复杂吗？</p>
<h3 id="感悟-简单点不好吗"> 感悟：简单点不好吗？</h3>
<div><pre><code><span>SELECT</span> <span>*</span> <span>FROM</span> Bugs
<span>WHERE</span> bug_id <span>>=</span> <span>(</span><span>SELECT</span> FLOOR<span>(</span>RAND<span>(</span><span>)</span> <span>*</span> <span>(</span><span>SELECT</span> <span>MAX</span><span>(</span>bug_id<span>)</span> <span>FROM</span> Bugs<span>)</span><span>)</span><span>)</span>
<span>ORDER</span> <span>BY</span> bug_id <span>LIMIT</span> <span>1</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h2 id="十七、可怜人的搜索引擎"> 十七、可怜人的搜索引擎</h2>
<h3 id="目标-全文搜索-fulltext"> 目标：全文搜索（FULLTEXT）</h3>
<p>通过关键字搜索字符串，通过字符串搜索全文。</p>
<h3 id="反模式-模式匹配断言"> 反模式：模式匹配断言</h3>
<p>使用<code>LIKE</code>性能和效率都非常的低，大量数据全文检索的情况下速度实在令人无法接受。</p>
<div><pre><code><span>SELECT</span> <span>*</span> <span>FROM</span> Bugs <span>WHERE</span> description <span>LIKE</span> <span>'%crash'</span><span>;</span>
</code></pre>
<div><span>1</span><br></div></div><h3 id="解决方案-使用正确的工具"> 解决方案：使用正确的工具</h3>
<ul>
<li>添加全文索引：FULLTEXT（MySQL5.7开始支持ngram自然语言分词）</li>
<li>第三方搜索引擎：Apache Lucene、Sphinx Search（估计可以进博物馆了）</li>
</ul>
<div><pre><code><span># my.cnf</span>
<span><span>[</span><span>mysqld</span><span>]</span></span>
<span>ngram_token_size</span><span>=</span><span>2</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code><span>CREATE</span> <span>TABLE</span> Bugs <span>(</span>
  bug_id        <span>SERIAL</span> <span>PRIMARY</span> <span>KEY</span><span>,</span>
  description    <span>TEXT</span><span>,</span>
  <span>-- other columns,</span>
  FULLTEXT<span>(</span>description<span>)</span> <span>WITH</span> PARSER ngram
<span>)</span><span>;</span>
<span>SELECT</span> <span>*</span> <span>FROM</span> bugs
<span>WHERE</span> <span>MATCH</span> <span>(</span>description<span>)</span> AGAINST <span>(</span><span>'计算机'</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id="感悟-中文全文检索"> 感悟：中文全文检索</h3>
<p>从MySQL 5.7开始，MySQL内置了， <strong>ngram全文检索插件</strong> 支持中文分词，并且对MyISAM和InnoDB引擎有效。
但实际应用上还是有或多或少的问题，比如著名的“杭州市长春药店”问题。</p>
<ul>
<li><a href="https://juejin.im/entry/5adb5deff265da0b9d77cb3b" target="_blank" rel="noopener noreferrer">MySQL 8.0 安装踩坑指南</a></li>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/fulltext-search-ngram.html" target="_blank" rel="noopener noreferrer">ngram全文检索插件</a></li>
</ul>
<h2 id="十八、意大利面条式查询"> 十八、意大利面条式查询</h2>
<h3 id="目标-减少sql查询数量-sql"> 目标：减少SQL查询数量（SQL）</h3>
<p>如何正确、简单、高效完成复杂的SQL查询。</p>
<h3 id="反模式-使用一步操作解决复杂问题"> 反模式：使用一步操作解决复杂问题</h3>
<p>SQL开发人员常常仅用一句SQL查询完成一个复杂问题。</p>
<h3 id="解决方案-分而治之"> 解决方案：分而治之</h3>
<p>尽管SQL支持用一行代码解决复杂问题，但也别做不切实际的事情。</p>
<h3 id="感悟-大道至简-把复杂变简单其实没那么简单"> 感悟：大道至简，把复杂变简单其实没那么简单</h3>
<p>常用的复杂的SQL查询，其实可以创建视图（VIEW）。</p>
<h2 id="十九、隐式的列"> 十九、隐式的列</h2>
<h3 id="目标-减少输入"> 目标：减少输入（*)</h3>
<p>描述为“获取正确的列”更妥当。</p>
<h3 id="反模式-捷径会让你迷失方向"> 反模式：捷径会让你迷失方向</h3>
<p>在非调试模式使用<code>*</code>，会带来很多的问题，比如列名覆盖、系统开销、安全隐患等等。</p>
<div><pre><code><span>-- a.title = 书的标题、b.title = 作者的称呼</span>
<span>-- 应用程序的 res.title = b.title，得不到正确的标题</span>
<span>SELECT</span> <span>*</span> <span>FROM</span> Books a <span>JOIN</span> Authors b <span>ON</span> a<span>.</span>author_id <span>=</span> b<span>.</span>author_id<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h3 id="解决方案-明确列出列名"> 解决方案：明确列出列名</h3>
<div><pre><code><span>SELECT</span> a<span>.</span>title<span>,</span> b<span>.</span>name<span>,</span> b<span>.</span>title author_title
<span>FROM</span> Books a
<span>JOIN</span> Authors b <span>ON</span> b<span>.</span>author_id <span>=</span> a<span>.</span>author_id<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h3 id="感悟-是把双刃剑"> 感悟：<code>*</code>是把双刃剑</h3>
<p>开发调试的时候可以快速排查，但非调试模式下尽量少用。</p>
<h2 id="二十、明文密码"> 二十、明文密码</h2>
<h3 id="目标-恢复或重置密码-hash"> 目标：恢复或重置密码（HASH）</h3>
<p>密码可以重置，但永远不能被提供或破解。</p>
<h3 id="反模式-使用明文存储密码"> 反模式：使用明文存储密码</h3>
<p>明文存储密码！居然还真有人这么干了！</p>
<h3 id="解决方案-先哈希-后存储"> 解决方案：先哈希，后存储</h3>
<p>哈希安全字串加密码。</p>
<h3 id="感悟-天王盖地虎-宝塔镇河妖"> 感悟：天王盖地虎，宝塔镇河妖！</h3>
<ul>
<li>蛮荒时代：明文，赤裸裸的明文。CSDN，你出来解释一下！</li>
<li>封建王朝：<code>MD5</code>一下完事。这就完了？不知道MD5可以爆破吗？已知MD求明文，社工库笑了。</li>
<li>现代社会：前端哈希<code>password</code>送出，后端加点盐再哈希一下，后端读取的跟前端送出的不要一致。</li>
</ul>
<h2 id="二十一、sql注入"> 二十一、SQL注入</h2>
<h3 id="目标-编写sql动态查询-injection"> 目标：编写SQL动态查询（Injection）</h3>
<p>防范应用程序变量插入SQL查询中带来的安全问题。</p>
<h3 id="反模式-将未经验证的输入作为代码执行"> 反模式：将未经验证的输入作为代码执行</h3>
<div><pre><code><span><span>&lt;?php</span>
<span>$bug_id</span> <span>=</span> <span>$_REQUEST</span><span>[</span><span>'bug_id'</span><span>]</span><span>;</span>     <span>// 输入：1234; DELETE FROM Bugs;</span>
<span>$pdo</span><span>-></span><span>query</span><span>(</span><span>"SELECT * FROM Bugs WHERE bug_id = <span><span>$bug_id</span></span>"</span><span>)</span><span>;</span>
</span></code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h3 id="解决方案-不信任任何人"> 解决方案：不信任任何人</h3>
<p>原著中就事论事的给出了解决方案，其实很多并不能解决注入问题：</p>
<ul>
<li>过滤输入内容：转换为数字</li>
<li>参数化动态内容：使用SQL参数</li>
<li>给动态输入的值加引号：数字变成字符串</li>
<li>将用户与代码隔离：不直接使用输入全局变量</li>
<li>找个可靠的人来帮你审查代码：出门靠朋友？</li>
</ul>
<h3 id="感悟-道高一尺魔高一丈"> 感悟：道高一尺魔高一丈</h3>
<ul>
<li>转义字符伪装注入更可怕，<code>\</code>、<code>--</code>、<code>/* */</code>都能被注入！</li>
<li>善用语言、扩展、模块自带的防注入工具
<ul>
<li>PHP：<code>mysql_real_escape_string()</code>、<code>stripslashes()</code>、<code>magic_quotes_gpc()</code></li>
<li>node-mysql：<code>escape()</code>、<code>escapeId()</code>、<code>format()</code></li>
</ul>
</li>
<li>可接合SQL占位符拼接SQL语句</li>
<li>提高防范意识，多检查，多测试</li>
</ul>
<h2 id="二十二、伪键洁癖"> 二十二、伪键洁癖</h2>
<h3 id="目标-整理数据-guid"> 目标：整理数据（GUID）</h3>
<p>使数据编号连续。</p>
<h3 id="反模式-填充角落"> 反模式：填充角落</h3>
<p>随着数据库的使用，有些行会被删除。比如原来连续编号的1234，3被删除了，变成124。
强迫症患者新增记录的时候会找出缺失的3，然后把新记录填充进去，编号为3。
或者当编号3被删除时强制把编号4更新为编号3。由于编号已被各种关联，引起一堆问题。</p>
<h3 id="解决方案-克服心理障碍"> 解决方案：克服心理障碍</h3>
<ul>
<li>使用<code>ROW_NUMBER()</code>定义行号</li>
<li>使用<code>GUID</code></li>
</ul>
<h3 id="感悟-我觉得可以抢救一下"> 感悟：我觉得可以抢救一下</h3>
<p>早发现，早治疗，正确面对，主动配合，还你健康人生。
杭州七院24小时心理援助热线：<code>0571-85029595</code>。</p>
<h2 id="二十三、非礼勿视"> 二十三、非礼勿视</h2>
<h3 id="目标-写更少的代码-debug"> 目标：写更少的代码（Debug）</h3>
<p>用更少的代码来提高代码的优雅程度？我怎么觉得是：如何正确展现错误并快速的排除错误呢？</p>
<h3 id="反模式-无米之炊"> 反模式：无米之炊</h3>
<ul>
<li>用户界面没有错误提示，用户一脸茫然</li>
<li>难以被发现的代码错误，码农一脸懵逼</li>
</ul>
<h3 id="解决方案-优雅的从错误中恢复"> 解决方案：优雅的从错误中恢复</h3>
<ul>
<li>使用捕捉机制<code>try...catch...</code></li>
<li>利用日志机制调试</li>
</ul>
<h3 id="感悟-排错是基本功"> 感悟：排错是基本功</h3>
<p>出错了，要给用户必要的明确的提示，给码农完整的详尽的提示。</p>
<h2 id="二十四、外交豁免权"> 二十四、外交豁免权</h2>
<h3 id="目标-采用最佳实践-project-management"> 目标：采用最佳实践（Project Management）</h3>
<ul>
<li>版本控制</li>
<li>自动化测试</li>
<li>文档</li>
</ul>
<h3 id="反模式-将sql视为二等公民"> 反模式：将SQL视为二等公民</h3>
<p>数据开发工作未被软件工程最佳实践纳入。</p>
<h3 id="解决方案-建立一个质量至上的文化"> 解决方案：建立一个质量至上的文化</h3>
<p>将数据库设计开发工作纳入软件工程管理范畴，并提供最佳实践。</p>
<h3 id="感悟-数据为王"> 感悟：数据为王</h3>
<ul>
<li>谁敢说SQL是二等公民？马爸爸说了，接下是DT（Data Technology）时代。</li>
<li>软件工程最佳实践又何止版本、测试、文档三方面。</li>
</ul>
<h2 id="二十五、魔豆"> 二十五、魔豆</h2>
<h3 id="目标-简化mvc模型-design-pattern"> 目标：简化MVC模型（Design pattern）</h3>
<p>低耦合、高内聚。清晰的领会模型的意义。</p>
<h3 id="反模式-模型仅仅是活动记录"> 反模式：模型仅仅是活动记录</h3>
<p>一个领域模型（Model）对应一个数据库表（Table），导致大量代码别复制粘贴，而不能很好的被复用。高耦合，低内聚，业务逻辑混乱。
其实这是对<code>Active Record</code>理解的问题，也属于设计模式问题，一个领域模型对应一个具体表还一个业务逻辑模型的问题。</p>
<h3 id="解决方案-模型包含活动记录"> 解决方案：模型包含活动记录</h3>
<p>原著推荐《领域驱动设计：软件核心复杂性应对之道》，模型设计围绕程序逻辑，而不是数据库层面，将模型和表解耦，业务逻辑与实体表分层。</p>
<h3 id="感悟-运用之道-存乎一心"> 感悟：运用之道，存乎一心</h3>
<p>深入理解设计模式，并将它正确的运用在开发过程中。</p>
<h2 id="总结"> 总结</h2>
<ul>
<li><strong>思维方式</strong> ： SQL语法是基础是手段，思维方式是指导思想，如果思维误入歧途，再好的手段也只能是南辕北辙；</li>
<li><strong>数据结构</strong> ：虽然原著对“多态关联”和“可变属性”等数据结构做了阐述并解决，但有意无意中也在犯着同样的错误，透彻的分析并理解数据结构非常重要；</li>
<li><strong>第一范式</strong> ：原著对于第一范式（1NF）的理解还是比较透彻的，大约用了三章阐述类似的问题，略啰嗦；</li>
<li><strong>下划线命名法</strong> ：原著中采用驼峰命名法，其实在大多数数据库系统中大小写不敏感，ProductBugs和PRODUCTBUGS并没有什么区别，所以建议命名为：product_bugs；</li>
<li><strong>约定大于配置</strong> ：原著中所有的ID，都使用了“表名（单数）_id”，并不符合“约定大于配置”的现代开发理念。主表ID还是建议用id，引用表外键建议用“主表（单数）_id”；</li>
<li><strong>分布式分层部署</strong> ：原著中的实践环境并没有考虑到分布式及分层式部署，特别是<code>BLOB</code>格式存储文件，这样的设计相对已经很落后了，请大家借鉴着阅读，以防踩坑。</li>
</ul>
<h2 id="声明"> 声明</h2>
<ul>
<li>版权所有，未经作者同意不得用于商业用途。</li>
<li>欢迎转载，敬请保留作者信息。</li>
</ul>
<blockquote>
<p>方跃明
2018-05-31</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>UmiJS之我见</title>
      <link>https://blog.fangyueming.cn/umijs-ux/</link>
      <guid>https://blog.fangyueming.cn/umijs-ux/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">UmiJS之我见</source>
      <pubDate>Sun, 23 Feb 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="umijs之我见"> UmiJS之我见</h1>
<p>到目前为止，UmiJS还不算严谨成熟的框架，像小孩捏的泥人，随意松散，慎用。</p>
<ul>
<li>仅简单整合了Redux、Router、Saga，未系统化为有机体</li>
<li>配置未考虑各种场景，没有统一接口和方法（不仅仅是配置）</li>
<li>将原本赏心悦目得Webpack配置拆得七零八落，何苦来哉</li>
<li>未提供框架必要的参数（如：app、routes）存取方法，大面积污染全局window变量</li>
<li>未显式引入插件和中间件机制，需自行实现，相关文件都扔src/utils下，plugins目录居然是系统保留</li>
<li>每级路由都需要加入显示加入404，相当丑陋</li>
<li>Layout和Page在路由里同级均视为组件，导致路由设置层级过深，需各种判断</li>
<li>文件、常量、变量规范很随意，大小写混淆，且互相不对应（model/setting -&gt; state.settings）</li>
<li>使用了不恰当的代码检查配置，且提交时自动格式化代码，极不人性</li>
</ul>
<blockquote>
<p>方跃明
2020-02-23</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>vi基本操作</title>
      <link>https://blog.fangyueming.cn/vi/</link>
      <guid>https://blog.fangyueming.cn/vi/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">vi基本操作</source>
      <pubDate>Fri, 10 May 2019 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="vi基本操作"> vi基本操作</h1>
<p>Linux上有大量的配置操作，需要掌握文本编辑器，通常使用vi。
vi是上Linux非常常用的编辑器，很多Linux发行版都默认安装了vi。
vi命令繁多但是如果使用灵活之后将会大大提高效率。
vi是“visual interface”的缩写，vim是vi IMproved(增强版的vi)。
在一般的系统管理维护中vi就够用，如果想使用代码加亮的话可以使用vim。</p>
<div><pre><code><span>vi</span> <span>[</span>filename<span>]</span>     <span># 用vi打开文件filename</span>
</code></pre>
<div><span>1</span><br></div></div><h2 id="command-mode-命令模式"> command mode（命令模式）</h2>
<p>任何时候，不管用户处于何种模式，只要按一下“ESC”键，即可使vi进入命令行模式；我们在shell环境（提示符为$）下输入启动vi命令，进入编辑器时，也是处于该模式下。在该模式下，用户可以输入各种合法的vi命令，用于管理自己的文档。此时从键盘上输入的任何字符都被当做编辑命令来解释，若输入的字符是合法的vi命令，则vi在接受用户命令之后完成相应的动作。但需注意的是，所输入的命令并不在屏幕上显示出来。若输入的字符不是vi的合法命令，vi会响铃报警。</p>
<h2 id="input-mode-编辑模式"> input mode（编辑模式）</h2>
<p>在命令模式下输入插入命令i（insert）、附加命令a （append）、打开命令o（open）、修改命令c（change）、取代命令r或替换命令s都可以进入文本输入模式。在该模式下，用户输入的任何字符都被vi当做文件内容保存起来，并将其显示在屏幕上。在文本输入过程中，若想回到命令模式下，按&quot;ESC&quot;键即可。</p>
<h2 id="last-line-mode-行末模式"> last line mode（行末模式）</h2>
<p>末行模式也称ex转义模式。vi和Ex编辑器的功能是相同的，二者主要区别是用户界面。在vi中，命令通常是单个键，例如i、a、o等；而在Ex中，命令是以按回车键结束的正文行。vi有一个专门的“转义”命令，可访问很多面向行的Ex命令。在命令模式下，用户按“:”键即可进入末行模式下，此时vi会在显示窗口的最后一行（通常也是屏幕的最后一行）显示一个“:”作为末行模式的提示符，等待用户输入命令。多数文件管理命令都是在此模式下执行的（如把编辑缓冲区的内容写到文件中等）。末行命令执行完后，vi自动回到命令模式。</p>
<p><img src="./vi-keymap.png" alt="vi-keymap" /></p>
<table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:w</code></td>
<td>保存文件</td>
</tr>
<tr>
<td><code>:w filename</code></td>
<td>保存至filename文件</td>
</tr>
<tr>
<td><code>:q</code></td>
<td>退出编辑器（文件未被修改）</td>
</tr>
<tr>
<td><code>:q!</code></td>
<td>退出编辑器，且不保存</td>
</tr>
<tr>
<td><code>:wq</code></td>
<td>退出编辑器，且保存文件</td>
</tr>
<tr>
<td><code>:x</code></td>
<td>退出编辑器，且保存文件</td>
</tr>
<tr>
<td><code>:set nu</code></td>
<td>显示行号</td>
</tr>
<tr>
<td><code>:set nonu</code></td>
<td>取消显示行号</td>
</tr>
<tr>
<td><code>:set fileformat=unix</code></td>
<td>将文件修改为unix格式，如win下面的文本文件在linux下会出现^M</td>
</tr>
<tr>
<td><code>:s/old/new</code></td>
<td>用new替换行中首次出现的old</td>
</tr>
<tr>
<td><code>:s/old/new/g</code></td>
<td>用new替换行中所有的old</td>
</tr>
<tr>
<td><code>:n,m s/old/new/g</code></td>
<td>用new替换从n到m行里所有的old</td>
</tr>
<tr>
<td><code>:%s/old/new/g</code></td>
<td>用new替换当前文件里所有的old</td>
</tr>
<tr>
<td><code>:e otherfilename</code></td>
<td>编辑文件名为otherfilename的文件</td>
</tr>
<tr>
<td><code>/keyword</code></td>
<td>向光标下搜索keyword字符串</td>
</tr>
<tr>
<td><code>?keyword</code></td>
<td>向光标上搜索keyword字符串</td>
</tr>
<tr>
<td><code>a</code></td>
<td>在当前光标位置的右边添加文本</td>
</tr>
<tr>
<td><code>i</code></td>
<td>在当前光标位置的左边添加文本</td>
</tr>
<tr>
<td><code>A</code></td>
<td>在当前行的末尾位置添加文本</td>
</tr>
<tr>
<td><code>I</code></td>
<td>在当前行的开始处添加文本(非空字符的行首)</td>
</tr>
<tr>
<td><code>O</code></td>
<td>在当前行的上面新建一行</td>
</tr>
<tr>
<td><code>o</code></td>
<td>在当前行的下面新建一行</td>
</tr>
<tr>
<td><code>R</code></td>
<td>替换(覆盖)当前光标位置及后面的若干文本</td>
</tr>
<tr>
<td><code>J</code></td>
<td>合并光标所在行及下一行为一行(依然在命令模式)</td>
</tr>
<tr>
<td><code>x</code></td>
<td>删除当前字符</td>
</tr>
<tr>
<td><code>nx</code></td>
<td>删除从光标开始的n个字符</td>
</tr>
<tr>
<td><code>dd</code></td>
<td>删除当前行</td>
</tr>
<tr>
<td><code>ndd</code></td>
<td>向下删除当前行在内的n行</td>
</tr>
<tr>
<td><code>u</code></td>
<td>撤销上一步操作</td>
</tr>
<tr>
<td><code>U</code></td>
<td>撤销对当前行的所有操作</td>
</tr>
<tr>
<td><code>yy</code></td>
<td>将当前行复制到缓存区</td>
</tr>
<tr>
<td><code>ayy</code></td>
<td>复制当前行到a缓冲区，a也可以替换为a到z的任意字母，可以完成多个复制任务</td>
</tr>
<tr>
<td><code>nyy</code></td>
<td>将当前行向下n行复制到缓冲区</td>
</tr>
<tr>
<td><code>anyy</code></td>
<td>复制前行向下n行到a 缓冲区，a也可以替换为a到z的任意字母，可以完成多个复制任务</td>
</tr>
<tr>
<td><code>yw</code></td>
<td>复制从光标开始到词尾的字符</td>
</tr>
<tr>
<td><code>nyw</code></td>
<td>复制从光标开始的n个单词</td>
</tr>
<tr>
<td><code>y^</code></td>
<td>复制从光标到行首的内容</td>
</tr>
<tr>
<td><code>y$</code></td>
<td>复制从光标到行尾的内容</td>
</tr>
<tr>
<td><code>p</code></td>
<td>粘贴剪切板里的内容在光标后，如果使用了前面的自定义缓冲区，建议使用ap进行粘贴</td>
</tr>
<tr>
<td><code>P</code></td>
<td>粘贴剪切板里的内容在光标前，如果使用了前面的自定义缓冲区，建议使用aP进行粘贴</td>
</tr>
<tr>
<td><code>h</code></td>
<td>向左</td>
</tr>
<tr>
<td><code>j</code></td>
<td>向下</td>
</tr>
<tr>
<td><code>k</code></td>
<td>向上</td>
</tr>
<tr>
<td><code>l</code></td>
<td>向右</td>
</tr>
<tr>
<td><code>Space</code></td>
<td>向右</td>
</tr>
<tr>
<td><code>Backspace</code></td>
<td>向左</td>
</tr>
<tr>
<td><code>Enter</code></td>
<td>移动到下一行首</td>
</tr>
<tr>
<td><code>-</code></td>
<td>移动到上一行首</td>
</tr>
<tr>
<td><code>n</code></td>
<td>向下搜索前一个搜素动作</td>
</tr>
<tr>
<td><code>N</code></td>
<td>向上搜索前一个搜索动作</td>
</tr>
<tr>
<td><code>n+</code></td>
<td>向下跳n行</td>
</tr>
<tr>
<td><code>n-</code></td>
<td>向上跳n行</td>
</tr>
<tr>
<td><code>nG</code></td>
<td>跳到行号为n的行</td>
</tr>
<tr>
<td><code>G</code></td>
<td>跳至文件的底部</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>Vue父子组件通信</title>
      <link>https://blog.fangyueming.cn/vue-props/</link>
      <guid>https://blog.fangyueming.cn/vue-props/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">Vue父子组件通信</source>
      <pubDate>Sun, 30 Sep 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="vue父子组件通信"> Vue父子组件通信</h1>
<h2 id="理解"> 理解</h2>
<ul>
<li><code>component</code>：相当于一个函数，<code>props =&gt; { return event =&gt; $emit }</code></li>
<li><code>props</code>：相当于传统意义上类的<code>public</code>属性，但此属性不能被自身初始化</li>
<li><code>data</code>：相当于传统意义上类的<code>private</code>属性，此属性必须被自身初始化</li>
<li><code>$emit('event')</code>：里的<code>event</code>相当于传统意义上类的<code>callback</code>回调</li>
<li><code>methods</code>: 里的方法相当于传统意义上类的<code>private</code>方法</li>
<li><code>mounted()</code>：相当于传统意义上类的构造函数</li>
</ul>
<h2 id="官方文档"> 官方文档</h2>
<ul>
<li><a href="https://cn.vuejs.org/v2/guide/components-props.html" target="_blank" rel="noopener noreferrer">props</a></li>
<li><a href="https://cn.vuejs.org/v2/guide/components-custom-events.html#sync-%E4%BF%AE%E9%A5%B0%E7%AC%A6" target="_blank" rel="noopener noreferrer">.sync</a></li>
</ul>
<h2 id="分析"> 分析</h2>
<ul>
<li>子组件
<ul>
<li>定义<code>props</code>，父组件调用子组件时，父组件可直接改变绑定的<code>props</code>值</li>
<li>通过<code>this.$emit('event', val)</code>传递事件（<code>event</code>）和值（<code>val</code>）到父组件</li>
</ul>
</li>
<li>父组件
<ul>
<li>调用子组件，其中<code>props</code>值的变化，直接被传递到子组件</li>
<li>子组件若要将<code>props</code>的值传给父组件，需要通过<code>emit</code>发射事件和值到父组件</li>
</ul>
</li>
</ul>
<p><img src="./vue-props.png" alt="Vue父子组件通信" /></p>
<h2 id="示例"> 示例</h2>
<div><pre><code><span>&lt;!-- Children.vue --></span>
<span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>id</span><span><span>=</span><span>"</span>children<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>h3</span><span>></span></span>Children<span><span><span>&lt;/</span>h3</span><span>></span></span>
    <span><span><span>&lt;</span>button</span> <span>@click</span><span><span>=</span><span>"</span>toParent<span>"</span></span><span>></span></span>get data from Children<span><span><span>&lt;/</span>button</span><span>></span></span>
    <span><span><span>&lt;</span>div</span><span>></span></span>{{message}}<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  name<span>:</span> <span>'Children'</span><span>,</span>
  props<span>:</span> <span>[</span><span>'message'</span><span>]</span><span>,</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>

    <span>}</span>
  <span>}</span><span>,</span>
  methods<span>:</span> <span>{</span>
    <span>toParent</span><span>(</span><span>)</span> <span>{</span>
      <span>this</span><span>.</span><span>$emit</span><span>(</span><span>'monitor'</span><span>,</span><span>'click: data from Children'</span><span>)</span><span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div><div><pre><code><span>&lt;!-- Parent.vue --></span>
<span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>id</span><span><span>=</span><span>"</span>parent<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>h3</span><span>></span></span>Parent<span><span><span>&lt;/</span>h3</span><span>></span></span>
    <span><span><span>&lt;</span>children</span> <span>:message</span><span><span>=</span><span>"</span>fromParent<span>"</span></span> <span>@monitor</span><span><span>=</span><span>"</span>fromChildren<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>children</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>import</span> Children <span>from</span> <span>'./Children'</span>
<span>export</span> <span>default</span> <span>{</span>
  name<span>:</span> <span>'Parent'</span><span>,</span>
  components<span>:</span> <span>{</span>
    Children
  <span>}</span><span>,</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      fromParent<span>:</span> <span>'init: data from Parent'</span>
    <span>}</span>
  <span>}</span><span>,</span>
  methods<span>:</span> <span>{</span>
    <span>fromChildren</span><span>(</span><span>val</span><span>)</span> <span>{</span>
      <span>this</span><span>.</span>fromParent <span>=</span> val
    <span>}</span>
  <span>}</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Internet技术概览</title>
      <link>https://blog.fangyueming.cn/web-internet/</link>
      <guid>https://blog.fangyueming.cn/web-internet/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">Internet技术概览</source>
      <pubDate>Tue, 20 Dec 2016 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="internet技术概览"> Internet技术概览</h1>
<p><img src="./web-internet.jpg" alt="Internet技术概览" /></p>
]]></content:encoded>
    </item>
    <item>
      <title>WEB前端编码变迁记</title>
      <link>https://blog.fangyueming.cn/web-component/</link>
      <guid>https://blog.fangyueming.cn/web-component/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">WEB前端编码变迁记</source>
      <pubDate>Mon, 19 Dec 2016 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="web前端编码变迁记"> WEB前端编码变迁记</h1>
<p>话说天下大势，分久必合，合久必分。 —— 《三国演义》</p>
<p>参禅之初，看山是山，看水是水；禅有悟时，看山不是山，看水不是水；禅中彻悟，看山仍然山，看水仍然是水。—— 行思</p>
<h2 id="一、逐鹿中原"> 一、逐鹿中原</h2>
<p>HTML、CSS、JS 无关联堆砌</p>
<blockquote>
<p>特点</p>
</blockquote>
<ul>
<li>代码杂糅HTML、CSS、JS</li>
<li>无规范可循，缩进、引号一团糟，必要标签缺失是常态</li>
<li>各种硬编码，width、height、px满天飞</li>
<li>HTML标签内置javascript、style随处可见</li>
<li>兼容性极差，不同系统、不同浏览器、不同终端展现结果不可预期</li>
<li>难以维护，甚至写代码的本人过一段时间后都搞不明白当初写的是什么</li>
<li>需求变更导致大量改编甚至重写</li>
</ul>
<blockquote>
<p>目录</p>
</blockquote>
<div><pre><code>├── index.htm
├── po.html
├── css.css
├── img
│   ├── 订单20161219.jpg
│   ├── 工单截图.jpeg
│   └── logo.GIF
└── js
    └── jquery.js
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><blockquote>
<p>代码</p>
</blockquote>
<div><pre><code><span><span><span>&lt;</span>title</span><span>></span></span>进度跟踪表<span><span><span>&lt;/</span>title</span><span>></span></span>
<span><span><span>&lt;</span>link</span> <span>rel</span><span><span>=</span><span>"</span>stylesheet<span>"</span></span> <span>type</span><span><span>=</span><span>"</span>text/css<span>"</span></span> <span>href</span><span><span>=</span><span>"</span>css/style.css<span>"</span></span> <span>/></span></span>
<span><span><span>&lt;</span>script</span> <span>type</span><span><span>=</span><span>"</span>text/javascript<span>"</span></span> <span>src</span><span><span>=</span><span>"</span>js/jquery.js<span>"</span></span><span>></span></span><span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
<span><span><span>&lt;</span>script</span> <span>type</span><span><span>=</span><span>"</span>text/javascript<span>"</span></span> <span>src</span><span><span>=</span><span>"</span>js/function.js<span>"</span></span><span>></span></span><span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
<span><span><span>&lt;</span>body</span> <span><span>style</span><span><span>=</span><span>"</span><span><span>margin</span><span>:</span>0<span>;</span> <span>padding</span><span>:</span>0<span>;</span> <span>background-color</span><span>:</span>#FFFFFF<span>;</span> </span><span>"</span></span></span><span>></span></span>
<span><span><span>&lt;</span>TABLE</span> <span>id</span><span><span>=</span><span>'</span>jdtrth<span>'</span></span> <span>class</span><span><span>=</span><span>'</span>tablehkled<span>'</span></span> <span>cellspacing</span><span><span>=</span><span>'</span>0<span>'</span></span> <span>cellpadding</span><span><span>=</span><span>'</span>0<span>'</span></span> <span>width</span><span><span>=</span><span>'</span>1094px<span>'</span></span> <span>></span></span>
<span><span><span>&lt;</span>tr</span> <span>align</span><span><span>=</span><span>'</span>center<span>'</span></span> <span>class</span><span><span>=</span><span>'</span>jdtrth<span>'</span></span> <span>></span></span>
<span><span><span>&lt;</span>th</span> <span><span>style</span><span><span>=</span><span>'</span><span><span>width</span><span>:</span>40px<span>;</span></span><span>'</span></span></span><span>></span></span>序号<span><span><span>&lt;/</span>th</span><span>></span></span>
<span><span><span>&lt;</span>th</span> <span><span>style</span><span><span>=</span><span>'</span><span><span>width</span><span>:</span>100px<span>;</span></span><span>'</span></span></span> <span><span>onclick</span><span><span>=</span><span>'</span><span>javascript<span>:</span><span>openpo</span><span>(</span><span>)</span><span>;</span></span><span>'</span></span></span><span>></span></span>订单<span><span><span>&lt;/</span>th</span><span>></span></span>
<span><span><span>&lt;</span>th</span> <span><span>style</span><span><span>=</span><span>'</span><span><span>width</span><span>:</span>100px<span>;</span></span><span>'</span></span></span><span>></span></span>工单<span><span><span>&lt;/</span>th</span><span>></span></span>
<span><span><span>&lt;</span>th</span> <span><span>style</span><span><span>=</span><span>'</span><span><span>width</span><span>:</span>200px<span>;</span></span><span>'</span></span></span><span>></span></span>产品<span><span><span>&lt;/</span>th</span><span>></span></span>
<span><span><span>&lt;</span>th</span> <span><span>style</span><span><span>=</span><span>'</span><span><span>width</span><span>:</span>80px<span>;</span></span><span>'</span></span></span><span>></span></span>要求交期<span><span><span>&lt;/</span>th</span><span>></span></span>
<span><span><span>&lt;</span>th</span> <span><span>style</span><span><span>=</span><span>'</span><span><span>width</span><span>:</span>60px<span>;</span></span><span>'</span></span></span><span>></span></span>订单数量<span><span><span>&lt;/</span>th</span><span>></span></span>
<span><span><span>&lt;</span>th</span> <span><span>style</span><span><span>=</span><span>'</span><span><span>width</span><span>:</span>60px<span>;</span></span><span>'</span></span></span><span>></span></span>入库数量<span><span><span>&lt;/</span>th</span><span>></span></span>
<span><span><span>&lt;</span>th</span> <span><span>style</span><span><span>=</span><span>'</span><span><span>width</span><span>:</span>60px<span>;</span></span><span>'</span></span></span><span>></span></span>销货数量<span><span><span>&lt;/</span>th</span><span>></span></span>
<span><span><span>&lt;/</span>tr</span><span>></span></span><span><span><span>&lt;/</span>table</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><h2 id="二、三分天下"> 二、三分天下</h2>
<p><a href="https://book.douban.com/subject/1230451/" target="_blank" rel="noopener noreferrer">《网站重构》</a>倡导的结构、表现、行为分离</p>
<blockquote>
<p>特点</p>
</blockquote>
<ul>
<li>目录结构清晰，HTML（结构）、CSS（表现）、JS（行为）各司其职</li>
<li>遵循某种编码规范，缩进、引号、标签高度统一</li>
<li>JS文件引入，容易引起全局变量污染</li>
<li>JS、CSS、HTML分离，耦合度高，修改某一文件可能引起关联文件功能失效</li>
<li>编码需同时查看编写多个文件，影响效率</li>
</ul>
<blockquote>
<p>目录</p>
</blockquote>
<div><pre><code>├── index.html
├── css
│   └── css.css
├── js
│   ├── app.js
│   └── page.js
├── html
│   ├── blog.html
│   └── about.html
└── img
    ├── logo.png
    ├── favicon.ico
    └── apple-icon.png
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><blockquote>
<p>代码</p>
</blockquote>
<div><pre><code><span><span>&lt;!</span><span>DOCTYPE</span> <span>html</span><span>></span></span>
<span><span><span>&lt;</span>html</span> <span>lang</span><span><span>=</span><span>"</span>zh-cn<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>head</span><span>></span></span>
    <span><span><span>&lt;</span>meta</span> <span>charset</span><span><span>=</span><span>"</span>utf-8<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>meta</span> <span>http-equiv</span><span><span>=</span><span>"</span>X-UA-Compatible<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>IE=edge<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>meta</span> <span>name</span><span><span>=</span><span>"</span>viewport<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>width=device-width, initial-scale=1<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>title</span><span>></span></span>Bootstrap 101 Template<span><span><span>&lt;/</span>title</span><span>></span></span>

    <span>&lt;!-- Bootstrap --></span>
    <span><span><span>&lt;</span>link</span> <span>href</span><span><span>=</span><span>"</span>css/bootstrap.min.css<span>"</span></span> <span>rel</span><span><span>=</span><span>"</span>stylesheet<span>"</span></span><span>></span></span>

    <span>&lt;!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries --></span>
    <span>&lt;!-- WARNING: Respond.js doesn't work if you view the page via file:// --></span>
    <span>&lt;!--[if lt IE 9]>
      &lt;script src="http://cdn.bootcss.com/html5shiv/3.7.2/html5shiv.min.js">&lt;/script>
      &lt;script src="http://cdn.bootcss.com/respond.js/1.4.2/respond.min.js">&lt;/script>
    &lt;![endif]--></span>
  <span><span><span>&lt;/</span>head</span><span>></span></span>
  <span><span><span>&lt;</span>body</span><span>></span></span>
    <span><span><span>&lt;</span>h1</span><span>></span></span>你好，世界！<span><span><span>&lt;/</span>h1</span><span>></span></span>

    <span>&lt;!-- jQuery (necessary for Bootstrap's JavaScript plugins) --></span>
    <span><span><span>&lt;</span>script</span> <span>src</span><span><span>=</span><span>"</span>http://cdn.bootcss.com/jquery/1.11.1/jquery.min.js<span>"</span></span><span>></span></span><span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
    <span>&lt;!-- Include all compiled plugins (below), or include individual files as needed --></span>
    <span><span><span>&lt;</span>script</span> <span>src</span><span><span>=</span><span>"</span>js/bootstrap.min.js<span>"</span></span><span>></span></span><span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
  <span><span><span>&lt;/</span>body</span><span>></span></span>
<span><span><span>&lt;/</span>html</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div><h2 id="三、分久必合"> 三、分久必合</h2>
<p>React、Vue.js的WEB组件化</p>
<blockquote>
<p>特点</p>
</blockquote>
<ul>
<li>遵循编码规范的“HTML、CSS、JS”组合体，请注意引号</li>
<li>共同实现某一项特定功能、提供外界通信接口</li>
<li>可重复利用，模块化、组件化</li>
<li>请特别注意与“看山是山看水是水”的区别</li>
</ul>
<blockquote>
<p>目录结构（典型情况）</p>
</blockquote>
<div><pre><code>├── index.html
├── src
│   ├── main.js
│   ├── App.vue
│   └── components
│       └── home.vue
├── dist
│   ├── build.js
│   └── assets
│       └── logo.png
└── node_modules
    ├── vue
    └── webpack
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><blockquote>
<p>代码</p>
</blockquote>
<div><pre><code><span>// React</span>
ReactDOM<span>.</span><span>render</span><span>(</span>
  <span><span><span>&lt;</span>h1</span><span>></span></span><span>Hello, world!</span><span><span><span>&lt;/</span>h1</span><span>></span></span><span>,</span>
  document<span>.</span><span>getElementById</span><span>(</span><span>'root'</span><span>)</span>
<span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><pre><code>// Vue.js
<span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>id</span><span><span>=</span><span>"</span>home<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>h3</span><span>></span></span>Home<span><span><span>&lt;/</span>h3</span><span>></span></span>
    <span><span><span>&lt;</span>div</span><span>></span></span>
      Here maybe a silder, but nothing ...
    <span><span><span>&lt;/</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>div</span><span>></span></span>
      Here maybe a news lists, but nothing ...
    <span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>export</span> <span>default</span> <span>{</span>
    name<span>:</span> <span>'home'</span>
  <span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>

<span><span><span>&lt;</span>style</span> <span>scoped</span><span>></span></span><span><span>
</span></span><span><span><span>&lt;/</span>style</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div><blockquote>
<p>方跃明
2016-12-19</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>Webpack编译移除控制台输出</title>
      <link>https://blog.fangyueming.cn/webpack-drop-console/</link>
      <guid>https://blog.fangyueming.cn/webpack-drop-console/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">Webpack编译移除控制台输出</source>
      <pubDate>Tue, 14 Dec 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="webpack编译移除控制台输出"> Webpack编译移除控制台输出</h1>
<p>前端程序员在开发的时候经常会使用<code>console.log</code>来调试。
然而，出于安全渗透和代码审计需要，生产环境往往需要移除控制台（<code>console</code>系列函数）输出。
一个个去删除难免漏网之鱼，而且有时候开发环境仍需要用到。
此时使用 <a href="https://webpack.js.org/plugins/terser-webpack-plugin/" target="_blank" rel="noopener noreferrer">terser-webpack-plugin</a> 不失为一个好办法。</p>
<p>本文以 <a href="https://cli.vuejs.org/zh/" target="_blank" rel="noopener noreferrer">Vue CLI</a> 为例来实现，当前 <a href="https://cli.vuejs.org/zh/" target="_blank" rel="noopener noreferrer">Vue CLI</a> 对应适配的 <a href="https://webpack.js.org/plugins/terser-webpack-plugin/" target="_blank" rel="noopener noreferrer">terser-webpack-plugin</a> 版本为：<code>4.2.3</code>。</p>
<h2 id="安装"> 安装</h2>
<div><pre><code><span>yarn</span> <span>add</span> terser-webpack-plugin@4.2.3
</code></pre>
<div><span>1</span><br></div></div><h2 id="配置"> 配置</h2>
<div><pre><code><span>// vue.config.js</span>
<span>const</span> TerserPlugin <span>=</span> <span>require</span><span>(</span><span>'terser-webpack-plugin'</span><span>)</span>

module<span>.</span>exports <span>=</span> <span>{</span>
 configureWebpack<span>:</span> <span>{</span>
   optimization<span>:</span> <span>{</span>
     minimizer<span>:</span> <span>[</span>
       <span>new</span> <span>TerserPlugin</span><span>(</span><span>{</span>
         terserOptions<span>:</span> <span>{</span>
           ecma<span>:</span> <span>undefined</span><span>,</span>
           warnings<span>:</span> <span>false</span><span>,</span>
           parse<span>:</span> <span>{</span><span>}</span><span>,</span>
           compress<span>:</span> <span>{</span>
             drop_console<span>:</span> <span>true</span><span>,</span>
             drop_debugger<span>:</span> <span>false</span><span>,</span>
             <span>// pure_funcs: ['console.log'], // 移除console</span>
           <span>}</span>
         <span>}</span>
       <span>}</span><span>)</span>
     <span>]</span>
   <span>}</span>
 <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div><h2 id="编译"> 编译</h2>
<div><pre><code><span>yarn</span> build
</code></pre>
<div><span>1</span><br></div></div><p>至此，<code>console</code>系列函数已不会在编译后的代码里从控制台输出了。</p>
<blockquote>
<p>方跃明
2021-12-14</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>WebVirtCloud部署笔记</title>
      <link>https://blog.fangyueming.cn/webvirt-cloud/</link>
      <guid>https://blog.fangyueming.cn/webvirt-cloud/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">WebVirtCloud部署笔记</source>
      <pubDate>Mon, 30 Dec 2013 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="webvirtcloud部署笔记"> WebVirtCloud部署笔记</h1>
<h2 id="系统配置"> 系统配置</h2>
<h3 id="selinux"> SELinux</h3>
<p>允许<code>WebVirtCloud</code>通行</p>
<div><pre><code><span>sudo</span> semanage fcontext -a -t httpd_sys_content_t <span>"/srv/webvirtcloud(/.*)"</span>
</code></pre>
<div><span>1</span><br></div></div><p>或关闭<code>SELINUX</code></p>
<div><pre><code><span>vi</span> /etc/selinux/config
</code></pre>
<div><span>1</span><br></div></div><div><pre><code><span>SELINUX</span><span>=</span><span>disabled</span>
</code></pre>
<div><span>1</span><br></div></div><h3 id="防火墙"> 防火墙</h3>
<p>允许<code>nginx</code>和<code>novnc</code>通行。</p>
<div><pre><code>firewall-cmd --zone<span>=</span>public --add-port<span>=</span><span>80</span>/tcp --permanent      <span># nginx</span>
firewall-cmd --zone<span>=</span>public --add-port<span>=</span><span>6080</span>/tcp --permanent    <span># novnc</span>
firewall-cmd --reload
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h2 id="安装kvm"> 安装KVM</h2>
<h3 id="虚拟化支持"> 虚拟化支持</h3>
<p>执行以下命令，若有高亮<code>vmx</code>或<code>svm</code>输出表示硬件支持虚拟化。</p>
<div><pre><code><span>egrep</span> <span>'(vmx|svm)'</span> --color<span>=</span>always /proc/cpuinfo
</code></pre>
<div><span>1</span><br></div></div><h3 id="设置网桥"> 设置网桥</h3>
<p>网桥相当于外网和虚拟机之间的交换机。</p>
<div><pre><code>             +-----------+     +----------+     +----------+
Internet --- | HOST eth0 | --- | HOST br0 | --- | VMs eth0 | --- VMs
             +-----------+     +----------+     +----------+
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code><span>cp</span> /etc/sysconfig/network-scripts/ifcfg-enp2s0 /etc/sysconfig/network-scripts/ifcfg-br0
</code></pre>
<div><span>1</span><br></div></div><div><pre><code><span>TYPE</span><span>=</span><span>Bridge                                   # 类型为网桥</span>
<span>PROXY_METHOD</span><span>=</span><span>none</span>
<span>BROWSER_ONLY</span><span>=</span><span>no</span>
<span>BOOTPROTO</span><span>=</span><span>dhcp                                # MAC未绑定IP时建议配置静态IP</span>
<span>DEFROUTE</span><span>=</span><span>yes</span>
<span>IPV4_FAILURE_FATAL</span><span>=</span><span>no</span>
<span>IPV6INIT</span><span>=</span><span>yes</span>
<span>IPV6_AUTOCONF</span><span>=</span><span>yes</span>
<span>IPV6_DEFROUTE</span><span>=</span><span>yes</span>
<span>IPV6_FAILURE_FATAL</span><span>=</span><span>no</span>
<span>IPV6_ADDR_GEN_MODE</span><span>=</span><span>stable-privacy</span>
<span>NAME</span><span>=</span><span>br0                                      # 名称</span>
<span># UUID=87cd35a1-1421-4066-a7bc-9d8ba4e727d5   # 注释掉</span>
<span>DEVICE</span><span>=</span><span>br0                                    # 设备</span>
<span>ONBOOT</span><span>=</span><span>yes</span>
<span>ZONE</span><span>=</span><span>public</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><div><pre><code><span>vi</span> /etc/sysconfig/network-scripts/ifcfg-enp2s0
</code></pre>
<div><span>1</span><br></div></div><div><pre><code><span>BRIDGE</span><span>=</span><span>br0</span>
<span>TYPE</span><span>=</span><span>Ethernet</span>
<span>PROXY_METHOD</span><span>=</span><span>none</span>
<span>BROWSER_ONLY</span><span>=</span><span>no</span>
<span>BOOTPROTO</span><span>=</span><span>dhcp</span>
<span>DEFROUTE</span><span>=</span><span>yes</span>
<span>IPV4_FAILURE_FATAL</span><span>=</span><span>no</span>
<span>IPV6INIT</span><span>=</span><span>yes</span>
<span>IPV6_AUTOCONF</span><span>=</span><span>yes</span>
<span>IPV6_DEFROUTE</span><span>=</span><span>yes</span>
<span>IPV6_FAILURE_FATAL</span><span>=</span><span>no</span>
<span>IPV6_ADDR_GEN_MODE</span><span>=</span><span>stable-privacy</span>
<span>NAME</span><span>=</span><span>enp2s0</span>
<span>UUID</span><span>=</span><span>87cd35a1-1421-4066-a7bc-9d8ba4e727d5</span>
<span>DEVICE</span><span>=</span><span>enp2s0</span>
<span>ONBOOT</span><span>=</span><span>yes</span>
<span>ZONE</span><span>=</span><span>public</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><div><pre><code>systemctl restart network
brctl show
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h3 id="安装kvm依赖"> 安装KVM依赖</h3>
<div><pre><code>yum <span>install</span> kvm qemu-kvm qemu-kvm-tools libvirt libvirt-python libvirt-client
yum <span>install</span> virt-install python-virtinst bridge-utils libguestfs-tools
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><table>
<thead>
<tr>
<th>名称</th>
<th>必须</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>kvm</td>
<td>是</td>
<td>KVM核心，KVM虚拟机模块</td>
</tr>
<tr>
<td>qemu-kvm</td>
<td>是</td>
<td>QEMU模拟器，QEMU KVM虚拟化模拟器</td>
</tr>
<tr>
<td>qemu-kvm-tools</td>
<td>是</td>
<td>QEMU工具，QEMU工具</td>
</tr>
<tr>
<td>libvirt</td>
<td>是</td>
<td>虚拟化API，虚拟化平台的开源的API</td>
</tr>
<tr>
<td>libvirt-python</td>
<td>是</td>
<td>libvirt Python语言支持</td>
</tr>
<tr>
<td>libvirt-client</td>
<td></td>
<td>libvirt 客户端</td>
</tr>
<tr>
<td>virt-install</td>
<td></td>
<td>虚拟机安装工具</td>
</tr>
<tr>
<td>python-virtinst</td>
<td></td>
<td>虚拟机安装工具Python语言支持</td>
</tr>
<tr>
<td>brige-utils</td>
<td></td>
<td>网桥管理工具</td>
</tr>
<tr>
<td>libguestfs-tools</td>
<td></td>
<td>虚拟机镜像管理工具</td>
</tr>
<tr>
<td>virt-manager</td>
<td></td>
<td>虚拟机管理工具，需要GUI</td>
</tr>
<tr>
<td>virt-viewer</td>
<td></td>
<td>虚拟机查看工具，需要GUI</td>
</tr>
<tr>
<td>virt-v2v</td>
<td></td>
<td>虚拟机镜像转换工具</td>
</tr>
</tbody>
</table>
<h3 id="设置服务"> 设置服务</h3>
<div><pre><code>systemctl <span>enable</span> libvirtd   <span># 设置服务自启动</span>
systemctl start libvirtd    <span># 启动服务</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h2 id="安装webvirtcloud"> 安装WebVirtCloud</h2>
<p>参见：<a href="https://github.com/retspen/webvirtcloud" target="_blank" rel="noopener noreferrer">https://github.com/retspen/webvirtcloud</a></p>
<h3 id="更新-hypervisor-gstfsd"> 更新 hypervisor gstfsd</h3>
<div><pre><code><span>wget</span> -O - https://clck.ru/9VMRH <span>|</span> <span>sudo</span> <span>tee</span> -a /usr/local/bin/gstfsd
<span>sudo</span> <span>service</span> supervisor restart
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h3 id="获取secret-key"> 获取SECRET_KEY</h3>
<div><pre><code><span>vi</span> /srv/webvirtcloud/webvirtcloud/settings.py
</code></pre>
<div><span>1</span><br></div></div><div><pre><code><span>import</span> random<span>,</span> string
haystack <span>=</span> string<span>.</span>ascii_letters <span>+</span> string<span>.</span>digits <span>+</span> string<span>.</span>punctuation
<span>print</span><span>(</span><span>''</span><span>.</span>join<span>(</span><span>[</span>random<span>.</span>SystemRandom<span>(</span><span>)</span><span>.</span>choice<span>(</span>haystack<span>)</span> <span>for</span> _ <span>in</span> <span>range</span><span>(</span><span>50</span><span>)</span><span>]</span><span>)</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h3 id="安装webvirtcloud控制台"> 安装WebVirtCloud控制台</h3>
<h4 id="安装webvirtcloud依赖"> 安装WebVirtCloud依赖</h4>
<div><pre><code>yum <span>install</span> python-virtualenv python-devel libvirt-devel
yum <span>install</span> glibc gcc nginx supervisor python-lxml <span>git</span> python-libguestfs
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h4 id="克隆仓库"> 克隆仓库</h4>
<div><pre><code><span>sudo</span> <span>mkdir</span> /srv <span>&amp;&amp;</span> <span>cd</span> /srv
<span>sudo</span> <span>git</span> clone https://github.com/retspen/webvirtcloud <span>&amp;&amp;</span> <span>cd</span> webvirtcloud
<span>cp</span> webvirtcloud/settings.py.template webvirtcloud/settings.py
<span># now put secret key to webvirtcloud/settings.py</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h4 id="开始安装webvirtcloud"> 开始安装WebVirtCloud</h4>
<div><pre><code><span>sudo</span> virtualenv venv
<span>sudo</span> <span>source</span> venv/bin/activate
<span>sudo</span> venv/bin/pip <span>install</span> -r conf/requirements.txt
<span>sudo</span> <span>cp</span> conf/nginx/webvirtcloud.conf /etc/nginx/conf.d/
<span>sudo</span> venv/bin/python manage.py migrate
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h4 id="配置supervisor"> 配置supervisor</h4>
<div><pre><code><span>vi</span> /etc/supervisord.conf
</code></pre>
<div><span>1</span><br></div></div><div><pre><code><span># 把以下内容添加到 [include] 段的 `files = ...` 之后</span>
<span><span>[</span><span>program:webvirtcloud</span><span>]</span></span>
<span>command</span><span>=</span><span>/srv/webvirtcloud/venv/bin/gunicorn webvirtcloud.wsgi:application -c /srv/webvirtcloud/gunicorn.conf.py</span>
<span>directory</span><span>=</span><span>/srv/webvirtcloud</span>
<span>user</span><span>=</span><span>nginx</span>
<span>autostart</span><span>=</span><span>true</span>
<span>autorestart</span><span>=</span><span>true</span>
<span>redirect_stderr</span><span>=</span><span>true</span>
<span><span>[</span><span>program:novncd</span><span>]</span></span>
<span>command</span><span>=</span><span>/srv/webvirtcloud/venv/bin/python /srv/webvirtcloud/console/novncd</span>
<span>directory</span><span>=</span><span>/srv/webvirtcloud</span>
<span>user</span><span>=</span><span>nginx</span>
<span>autostart</span><span>=</span><span>true</span>
<span>autorestart</span><span>=</span><span>true</span>
<span>redirect_stderr</span><span>=</span><span>true</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div><h4 id="配置nginx"> 配置nginx</h4>
<p>注释<code>nginx</code>原有<code>server</code>段相关配置</p>
<div><pre><code><span>vi</span> /etc/nginx/nginx.conf
</code></pre>
<div><span>1</span><br></div></div><div><pre><code><span>#    server {</span>
<span>#        listen       80 default_server;</span>
<span>#        listen       [::]:80 default_server;</span>
<span>#        server_name  _;</span>
<span>#        root         /usr/share/nginx/html;</span>
<span>#</span>
<span>#        # Load configuration files for the default server block.</span>
<span>#        include /etc/nginx/default.d/*.conf;</span>
<span>#</span>
<span>#        location / {</span>
<span>#        }</span>
<span>#</span>
<span>#        error_page 404 /404.html;</span>
<span>#            location = /40x.html {</span>
<span>#        }</span>
<span>#</span>
<span>#        error_page 500 502 503 504 /50x.html;</span>
<span>#            location = /50x.html {</span>
<span>#        }</span>
<span>#    }</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div><p>确保webvirtcloud.conf配置正确</p>
<div><pre><code><span>cat</span> /etc/nginx/conf.d/webvirtcloud.conf
</code></pre>
<div><span>1</span><br></div></div><div><pre><code><span><span>upstream</span> gunicorn_server</span> <span>{</span>
    <span>#server unix:/srv/webvirtcloud/venv/wvcloud.socket fail_timeout=0;</span>
    <span><span>server</span> 127.0.0.1:8000 fail_timeout=0</span><span>;</span>
<span>}</span>
<span><span>server</span></span> <span>{</span>
    <span><span>listen</span> <span>80</span></span><span>;</span>

    <span><span>server_name</span> servername.domain.com</span><span>;</span>
    <span><span>access_log</span> /var/log/nginx/webvirtcloud-access_log</span><span>;</span>

    <span><span>location</span> /static/</span> <span>{</span>
        <span><span>root</span> /srv/webvirtcloud</span><span>;</span>
        <span><span>expires</span> max</span><span>;</span>
    <span>}</span>

    <span><span>location</span> /</span> <span>{</span>
        <span><span>proxy_pass</span> http://gunicorn_server</span><span>;</span>
        <span><span>proxy_set_header</span> X-Real-IP <span>$remote_addr</span></span><span>;</span>
        <span><span>proxy_set_header</span> X-Forwarded-for <span>$proxy_add_x_forwarded_for</span></span><span>;</span>
        <span><span>proxy_set_header</span> Host <span>$host</span>:<span>$server_port</span></span><span>;</span>
        <span><span>proxy_set_header</span> X-Forwarded-Proto <span>$remote_addr</span></span><span>;</span>
        <span><span>proxy_connect_timeout</span> <span>600</span></span><span>;</span>
        <span><span>proxy_read_timeout</span> <span>600</span></span><span>;</span>
        <span><span>proxy_send_timeout</span> <span>600</span></span><span>;</span>
        <span><span>client_max_body_size</span> <span>1024M</span></span><span>;</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div><h3 id="用户和组设置"> 用户和组设置</h3>
<div><pre><code><span>useradd</span> webvirtmgr
<span>usermod</span> -G kvm -a webvirtmgr
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h3 id="启动服务"> 启动服务</h3>
<div><pre><code>systemctl restart nginx
systemctl restart supervisord
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><div><pre><code>supervisorctl status
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>gstfsd             RUNNING   pid 24662, uptime 6:01:40
novncd             RUNNING   pid 24661, uptime 6:01:40
webvirtcloud       RUNNING   pid 24660, uptime 6:01:40
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h3 id="添加ssh-key"> 添加SSH KEY</h3>
<p>用于控制台添加基础架构</p>
<div><pre><code><span>su</span> -s /bin/bash nginx
ssh-keygen
ssh-copy-id root@serverip
you need to accept <span>add</span> key
<span>exit</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id="控制台"> 控制台</h2>
<h3 id="进入控制台"> 进入控制台</h3>
<div><pre><code><span>open</span> http://serverip
<span># username: admin</span>
<span># password: admin</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h3 id="基础架构"> 基础架构</h3>
<p><img src="./compute.png" alt="compute" /></p>
<h3 id="存储池"> 存储池</h3>
<div><pre><code><span>chmod</span> <span>755</span> -R /home/webvirtmgr
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>/home/webvirtmgr
|-- images          # 磁盘镜像
`-- iso             # 光盘镜像
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p><img src="./storage.png" alt="storage" /></p>
<h3 id="网络"> 网络</h3>
<p><img src="./network.png" alt="network" /></p>
<h3 id="实例"> 实例</h3>
<p><img src="./instance.png" alt="instance" /></p>
<h3 id="会话"> 会话</h3>
<p><img src="./console.png" alt="console" /></p>
]]></content:encoded>
    </item>
    <item>
      <title>Zabbix安装笔记</title>
      <link>https://blog.fangyueming.cn/zabbix-install/</link>
      <guid>https://blog.fangyueming.cn/zabbix-install/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">Zabbix安装笔记</source>
      <pubDate>Fri, 11 Nov 2011 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="zabbix安装笔记"> Zabbix安装笔记</h1>
<p>详细安装步骤参见：<a href="https://www.zabbix.com/documentation/3.0/manual/installation/install_from_packages" target="_blank" rel="noopener noreferrer">官方安装手册</a></p>
<h2 id="zabbix-server"> Zabbix Server</h2>
<p><img src="./zabbix-schema.jpg" alt="Zabbix部署示意图" /></p>
<h3 id="安装数据库"> 安装数据库</h3>
<div><pre><code><span># 安装 MariaDB 服务器和客户端</span>
yum <span>install</span> mariadb-server mariadb
systemctl start mariadb
mysql -uroot -ppassword    <span># 进入MySQL命令行</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><div><pre><code><span>-- MariaDB新建zabbix用户</span>
<span>UPDATE</span> <span>user</span> <span>SET</span> password<span>=</span>PASSWORD<span>(</span><span>'zabbix'</span><span>)</span> <span>WHERE</span> <span>user</span><span>=</span><span>'zabbix'</span><span>;</span>
<span>CREATE</span> <span>DATABASE</span> <span>IF</span> <span>NOT</span> <span>EXISTS</span> zabbix <span>DEFAULT</span> <span>CHARACTER</span> <span>SET</span> utf8 <span>COLLATE</span> utf8_general_ci<span>;</span>
FLUSH <span>PRIVILEGES</span><span>;</span>
QUIT
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h3 id="安装服务端"> 安装服务端</h3>
<div><pre><code><span>rpm</span> -ivh http://repo.zabbix.com/zabbix/3.0/rhel/7/x86_64/zabbix-release-3.0-1.el7.noarch.rpm
yum <span>install</span> zabbix-server-mysql zabbix-web-mysql
<span>cd</span> /usr/share/doc/zabbix-server-mysql-3.0.3
zcat create.sql.gz <span>|</span> mysql -uzabbix -pzabbix zabbix
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="修改服务器配置"> 修改服务器配置</h3>
<div><pre><code><span>## vi /etc/zabbix/zabbix_server.conf</span>
<span>DBHost</span><span>=</span><span>localhost</span>
<span>DBName</span><span>=</span><span>zabbix</span>
<span>DBUser</span><span>=</span><span>zabbix</span>
<span>DBPassword</span><span>=</span><span>zabbix</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h3 id="修改web服务器配置文件"> 修改WEB服务器配置文件</h3>
<div><pre><code><span>## vi /etc/httpd/conf.d/zabbix.conf</span>
php_value data.timezone Asia/Shanghai
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h3 id="启动zabbix服务器和web服务器"> 启动Zabbix服务器和WEB服务器</h3>
<div><pre><code>systemctl start zabbix-server
systemctl start httpd
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h2 id="zabbix-agent"> Zabbix Agent</h2>
<p><img src="./zabbix-proxy.png" alt="Zabbix分布式部署示意图" /></p>
<h3 id="centos"> CentOS</h3>
<h4 id="安装"> 安装</h4>
<div><pre><code>yum <span>install</span> zabbix-agent
</code></pre>
<div><span>1</span><br></div></div><h4 id="配置"> 配置</h4>
<div><pre><code><span># vi /etc/zabbix/zabbix_agent.conf</span>
<span>LogFile</span><span>=</span><span>/var/log/zabbix/zabbix_agentd.log   # 日志</span>
<span>Server</span><span>=</span><span>127.0.0.1                            # Zabbix Server（直接连接）或者Zabbix Proxy（通过Proxy）</span>
<span>Hostname</span><span>=</span><span>Zabbix Server                      # 对应zabbix web里面的host，不一定是os本机名称</span>
<span>ServerActive</span><span>=</span><span>127.0.0.1                      # Zabbix Server或Zabbix Proxy</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h4 id="配置防火墙-打开zabbix-agent端口-默认入站端口10050"> 配置防火墙，打开Zabbix Agent端口（默认入站端口10050）</h4>
<div><pre><code>systemctl start zabbix-agent
</code></pre>
<div><span>1</span><br></div></div><h3 id="windows"> Windows</h3>
<h4 id="下载并解压到运行目录"> 下载并解压到运行目录</h4>
<p><a href="http://www.zabbix.com/download.php" target="_blank" rel="noopener noreferrer">Zabbix pre-compiled agents for Windows</a></p>
<h4 id="配置conf-conf-zabbix-agentd-win-conf"> 配置conf(conf\zabbix-agentd.win.conf)</h4>
<div><pre><code><span>LogFile</span><span>=</span><span>c:\zabbix_agentd.log  # 日志</span>
<span>Server</span><span>=</span><span>127.0.0.1              # Zabbix服务器</span>
<span>Hostname</span><span>=</span><span>Windows Host         # 对应zabbix web里面的host，不一定是本机名称</span>
<span>ServerActive</span><span>=</span><span>127.0.0.1        # Zabbix服务器</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><ul>
<li>注册为Windows服务：<code>bin\zabbix_agentd.exe -c \conf\zabbix_agentd.win.conf –i</code></li>
<li>打开Zabbix Agent端口（默认入站端口10050）</li>
<li>从Windows服务启动Zabbix Agent客户端</li>
</ul>
<h2 id="zabbix-proxy"> Zabbix Proxy</h2>
<h3 id="安装服务器"> 安装服务器</h3>
<div><pre><code><span>rpm</span> -ivh http://repo.zabbix.com/zabbix/3.0/rhel/7/x86_64/zabbix-release-3.0-1.el7.noarch.rpm
yum <span>install</span> mariadb-server mariadb zabbix-proxy-mysql
systemctl start mariadb
mysql                       <span># 进入MySQL命令行</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="分配帐号、授权及建立数据库"> 分配帐号、授权及建立数据库</h3>
<div><pre><code><span>UPDATE</span> <span>user</span> <span>SET</span> password<span>=</span>PASSWORD<span>(</span><span>'zabbix'</span><span>)</span> <span>WHERE</span> <span>user</span><span>=</span><span>'zabbix'</span><span>;</span>
FLUSH <span>PRIVILEGES</span><span>;</span>
<span>CREATE</span> <span>DATABASE</span> <span>IF</span> <span>NOT</span> <span>EXISTS</span> zabbix_proxy <span>DEFAULT</span> <span>CHARACTER</span> <span>SET</span> utf8 <span>COLLATE</span> utf8_general_ci<span>;</span>
QUIT
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="导入数据库"> 导入数据库</h3>
<div><pre><code><span># cd /usr/share/doc/zabbix-proxy-mysql-3.0.3</span>
zcat schema.sql.gz <span>|</span> mysql -uzabbix -pzabbix zabbix_proxy
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h3 id="修改服务器配置文件"> 修改服务器配置文件</h3>
<div><pre><code><span># vi /etc/zabbix/zabbix_proxy.conf</span>
<span>Server</span><span>=</span><span>zabbix.server.url      # Zabbix Server 所在IP或者DNS Name</span>
<span>Hostname</span><span>=</span><span>proxy.zabbix.name    # Zabbix Proxy 名字（对应Server里的Proxies名字）</span>
<span>DBHost</span><span>=</span><span>localhost</span>
<span>DBName</span><span>=</span><span>zabbix_proxy</span>
<span>DBUser</span><span>=</span><span>zabbix</span>
<span>DBPassword</span><span>=</span><span>zabbix</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h3 id="打开zabbix-agent端口-默认入站端口10050"> 打开Zabbix Agent端口（默认入站端口10050）</h3>
<h3 id="启动zabbix服务器"> 启动Zabbix服务器</h3>
<div><pre><code>systemctl start zabbix-proxy
</code></pre>
<div><span>1</span><br></div></div><h3 id="zabbix-server-web-对应的设置"> Zabbix Server Web 对应的设置</h3>
<ul>
<li>添加代理：Administration -&gt; Proxies -&gt; Create proxy -&gt; Proxy name -&gt; proxy.zabbix.name</li>
<li>添加代理下的主机：Configuration -&gt; Hosts -&gt; Create Host -&gt; Monitored by proxy -&gt; proxy.zabbix.name</li>
</ul>
<h3 id="注意事项"> 注意事项</h3>
<ul>
<li>Proxy只能使用proxy的数据库，不能使用Server的数据库</li>
<li>注意Server端和Proxy端的IP/DNS名称、配置主机名称、Web端名称、各选项正确且一一对应</li>
</ul>
<h2 id="zabbix-snmp"> Zabbix SNMP</h2>
<ul>
<li>
<p>Windows Server 2008 R2</p>
<ul>
<li>客户机端安装：SNMP Service</li>
<li>客户机端设置：服务 -&gt; SNMP Service -&gt; 安全 -&gt; 接受的社区名称：public，只读 -&gt; 添加接受主机：Zabbix服务器</li>
<li>客户机端防火墙：入站规则 -&gt; 默认端口161 -&gt; 协议UDP</li>
<li>Zabbix Web端添加SNMP主机及端口号</li>
</ul>
</li>
<li>
<p>CentOS</p>
<ul>
<li>安装：<code>yum install net-snmp net-snmp-utils</code></li>
<li>参见：<a href="https://blog.csdn.net/sinat_21302587/article/details/75099915" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/sinat_21302587/article/details/75099915</a></li>
</ul>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Git subtree</title>
      <link>https://blog.fangyueming.cn/git-subtree/</link>
      <guid>https://blog.fangyueming.cn/git-subtree/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">Git subtree</source>
      <pubDate>Thu, 20 Aug 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="git-subtree"> Git subtree</h1>
<p>和<code>Git Submodule</code>一样，<code>Git Subtree</code>也是多人协作开发利器。</p>
<ul>
<li><a href="https://git-scm.com/book/zh/v2" target="_blank" rel="noopener noreferrer">官方文档</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html" target="_blank" rel="noopener noreferrer">Git教程</a></li>
<li><a href="https://segmentfault.com/a/1190000012002151" target="_blank" rel="noopener noreferrer">简明教程</a></li>
<li><a href="https://segmentfault.com/a/1190000003969060" target="_blank" rel="noopener noreferrer">双向同步</a></li>
</ul>
<p><strong>注意：</strong></p>
<ul>
<li>若子分支为主分支一个目录，请勿同名</li>
<li>若子分支污染主分支，请注意同步更新避免冲突</li>
<li>若子分支为独立分支，不污染主分支，切换以操作不同分支</li>
</ul>
<h2 id="新建并关联子分支"> 新建并关联子分支</h2>
<div><pre><code><span># 新建空分支并提交到远程</span>
<span>git</span> checkout --orphan subtree-branch
<span>git</span> <span>rm</span> -rf <span>.</span>
<span>git</span> <span>add</span> --all
<span>git</span> commit -m <span>"chore: init subtree"</span>
<span>git</span> push --set-upstream origin subtree-branch
<span># 切换到主分支并关联子分支</span>
<span>git</span> checkout master
<span>git</span> branch -d subtree-branch
<span>git</span> subtree <span>add</span> --prefix<span>=</span>subtree-branch origin subtree-branch
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><h2 id="若对应子分支已存在"> 若对应子分支已存在</h2>
<div><pre><code><span># 克隆项目</span>
<span>git</span> clone https://github.com/axolo/your-project
<span># 关联并拉取子分支</span>
<span># git subtree pull -P &lt;prefix> &lt;repository> &lt;ref></span>
<span>git</span> subtree pull --prefix<span>=</span>www origin gh-pages
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id="主分支操作同步到子分支"> 主分支操作同步到子分支</h2>
<div><pre><code><span># 主分支正常操作：改动www目录下的内容</span>
<span>git</span> <span>add</span> --all
<span>git</span> commit -m <span>"modify subtree"</span>
<span>git</span> push
<span># 提交到子分支</span>
<span>git</span> subtree push --prefix<span>=</span>www origin gh-pages
<span># 拉取子分支</span>
<span>git</span> subtree pull --prefix<span>=</span>www origin gh-pages
<span># 在子分支生成新分支hotfix-001</span>
<span>git</span> subtree push --prefix<span>=</span>www origin hotfix-001
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><h2 id="子分支独立操作"> 子分支独立操作</h2>
<div><pre><code><span># 切换到子分支</span>
<span>git</span> checkout subtree-branch
<span># working in subtree</span>
<span>git</span> <span>add</span> --all
<span>git</span> commit -m <span>"modify"</span>
<span>git</span> push
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><blockquote>
<p>方跃明
2020-08-20</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>CentOS入坑指南</title>
      <link>https://blog.fangyueming.cn/centos-starting/</link>
      <guid>https://blog.fangyueming.cn/centos-starting/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">CentOS入坑指南</source>
      <pubDate>Thu, 09 May 2019 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="centos入坑指南"> CentOS入坑指南</h1>
<ol>
<li>基本命令</li>
<li>网络配置</li>
<li>安装EPEL</li>
<li>开启SSH</li>
<li>配置防火墙</li>
<li>配置SELinux</li>
<li>查看系统信息</li>
</ol>
<h2 id="基本命令"> 基本命令</h2>
<p>若没有命令行基础，操作Linux将寸步难行。
最好的学习命令的方法是使用<code>--help</code>参数查看在线帮助。</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>help</code></td>
<td>系统帮助</td>
</tr>
<tr>
<td><code>ls --help</code></td>
<td>ls命令的系统帮助</td>
</tr>
<tr>
<td><code>ls -la</code></td>
<td>格式化列出当前目录下所有文件（含隐藏文件）</td>
</tr>
<tr>
<td><code>ls | grep 'user'</code></td>
<td>搜索ls命令输出匹配user的部分</td>
</tr>
<tr>
<td><code>ll</code></td>
<td>即<code>ls -l</code>，通常情况下ll是Linux的一个别名，使用频繁的命令建议定义别名</td>
</tr>
<tr>
<td><code>find -name 'user'</code></td>
<td>查找当前目录及子目录含有user的文件和目录</td>
</tr>
<tr>
<td><code>grep 'user' file</code></td>
<td>查找file文件包含user的内容</td>
</tr>
<tr>
<td><code>cd ~</code></td>
<td>切换到用户主目录</td>
</tr>
<tr>
<td><code>mkdir dir</code></td>
<td>在当前目录下新建dir目录</td>
</tr>
<tr>
<td><code>rm file</code></td>
<td>删除当前目录下的file文件</td>
</tr>
<tr>
<td><code>rm -rf dir</code></td>
<td>强制删除dir目录且不提示（<strong>传说中的从删库到跑路</strong>）</td>
</tr>
<tr>
<td><code>cp file1 file2</code></td>
<td>将文件file1复制到file2</td>
</tr>
<tr>
<td><code>cp -r dir1 dir2</code></td>
<td>将目录dir1复制到dir2</td>
</tr>
<tr>
<td><code>mv file1 file2</code></td>
<td>将file1重命名为file2；若file2是已存在目录，则将file1移动到file2目录下</td>
</tr>
<tr>
<td><code>ln -s file link</code></td>
<td>创建file的符号连接link</td>
</tr>
<tr>
<td><code>cat &gt;&gt; file &lt;&lt;EOF</code></td>
<td>将标准输入写入file并创建（换行输入EOF结束）</td>
</tr>
<tr>
<td><code>cat file | more</code></td>
<td>查看文件</td>
</tr>
<tr>
<td><code>ps</code></td>
<td>显示当前活动进程</td>
</tr>
<tr>
<td><code>kill pid</code></td>
<td>杀掉id为pid的进程</td>
</tr>
<tr>
<td><code>chmod -R 755 web</code></td>
<td>将web目录及子目录设置读写权限为755</td>
</tr>
<tr>
<td><code>tar -zxf file.tar.gz -C ~</code></td>
<td>将file.tar.gz解压到用户主目录</td>
</tr>
<tr>
<td><code>df</code></td>
<td>显示磁盘占用情况</td>
</tr>
<tr>
<td><code>free</code></td>
<td>显示内存及交换器占用情况</td>
</tr>
<tr>
<td><code>rpm -ivh file.rpm</code></td>
<td>全新安装file.rpm</td>
</tr>
<tr>
<td><code>./configure &amp;&amp; make &amp;&amp; make install</code></td>
<td>编译源码并安装</td>
</tr>
<tr>
<td><code>ping host</code></td>
<td>查询到host主机的网络连接情况</td>
</tr>
<tr>
<td><code>wget url-to-file/file</code></td>
<td>下载<code>url-to-file/file</code>到当前目录</td>
</tr>
<tr>
<td><code>exit</code></td>
<td>注销当前会话</td>
</tr>
</tbody>
</table>
<h2 id="网络配置"> 网络配置</h2>
<p>一般情况下，Linux安装完成后第一项任务是将其联网。</p>
<div><pre><code><span># 默认情况第一张网卡为ifcfg-eth0，不排除被命名成其他名称的可能</span>
<span># 一般情况下只需要指定IPADDR、NETMASK、GATEWAY和DNS1、DNS2即可</span>
<span>vi</span> /etc/sysconfig/network-scripts/ifcfg-eth0
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code><span>TYPE</span><span>=</span><span>Ethernet</span>
<span>BOOTPROTO</span><span>=</span><span>static</span>
<span>IPADDR</span><span>=</span><span>192.168.20.25</span>
<span>NETMASK</span><span>=</span><span>255.255.252.0</span>
<span>GATEWAY</span><span>=</span><span>192.168.20.1</span>
<span>DNS1</span><span>=</span><span>8.8.8.8</span>
<span>DNS2</span><span>=</span><span>8.8.4.4</span>
<span>NETWORK</span><span>=</span><span>192.168.20.0</span>
<span>BROADCAST</span><span>=</span><span>192.168.23.255</span>
<span>DEFROUTE</span><span>=</span><span>yes</span>
<span>PEERDNS</span><span>=</span><span>no</span>
<span>PEERROUTES</span><span>=</span><span>yes</span>
<span>IPV4_FAILURE_FATAL</span><span>=</span><span>no</span>
<span>IPV6INIT</span><span>=</span><span>yes</span>
<span>IPV6_AUTOCONF</span><span>=</span><span>yes</span>
<span>IPV6_DEFROUTE</span><span>=</span><span>yes</span>
<span>IPV6_PEERDNS</span><span>=</span><span>yes</span>
<span>IPV6_PEERROUTES</span><span>=</span><span>yes</span>
<span>IPV6_FAILURE_FATAL</span><span>=</span><span>no</span>
<span>NAME</span><span>=</span><span>eth0</span>
<span>UUID</span><span>=</span><span>5b0a7d76-1602-4e19-aee6-29f57618ca01</span>
<span>ONBOOT</span><span>=</span><span>no</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div><div><pre><code><span>vi</span> /etc/resolv.conf       <span># 配置DNS</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code><span># /etc/resolv.conf</span>
nameserver 114.114.114.114
nameserver 8.8.8.8
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code><span>service</span> network restart     <span># 重启网络服务使其生效</span>
</code></pre>
<div><span>1</span><br></div></div><table>
<thead>
<tr>
<th>参数</th>
<th>可选值</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>DEVICE</td>
<td>name</td>
<td>设备名称通常是eth0</td>
</tr>
<tr>
<td>BOOTPROTO</td>
<td>proto</td>
<td>proto为none、static、dhcp、bootp，IP分配协议</td>
</tr>
<tr>
<td>IPADDR</td>
<td>addr</td>
<td>IP地址</td>
</tr>
<tr>
<td>NETMASK</td>
<td>mask</td>
<td>子网掩码</td>
</tr>
<tr>
<td>GATEWAY</td>
<td>addr</td>
<td>网关地址</td>
</tr>
<tr>
<td>DNS1</td>
<td>dns</td>
<td>DNS1服务器IP</td>
</tr>
<tr>
<td>DNS2</td>
<td>dns</td>
<td>DNS2服务器IP</td>
</tr>
<tr>
<td>NETWORK</td>
<td>addr</td>
<td>所属网络</td>
</tr>
<tr>
<td>BROADCAST</td>
<td>addr</td>
<td>广播地址</td>
</tr>
<tr>
<td>HWADDR</td>
<td>mac</td>
<td>MAC地址</td>
</tr>
<tr>
<td>ONBOOT</td>
<td>answer</td>
<td>answer为yes或no，是否系统启动时激活连接</td>
</tr>
<tr>
<td>USERCTL</td>
<td>answer</td>
<td>answer为yes或no，非root用户是否可以控制该设备</td>
</tr>
<tr>
<td>PEERDNS</td>
<td>answer</td>
<td>answer为yes或no，是否重写/etc/resolv.conf</td>
</tr>
</tbody>
</table>
<h2 id="安装epel和net-tools"> 安装EPEL和net-tools</h2>
<p>EPEL (Extra Packages for Enterprise Linux)是基于Fedora的一个项目，为“红帽系”的操作系统提供额外的软件包，适用于RHEL、CentOS和Fedora.
CentOS最小安装默认不带基本的网络命令，需要手动安装net-tools。</p>
<div><pre><code>yum <span>install</span> epel-release
yum <span>install</span> net-tools
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h2 id="开启ssh"> 开启SSH</h2>
<p>Linux主机一般通过SSH来远程管理</p>
<div><pre><code><span># 除非自定义取消，CentOS默认安装包含了OpenSSH Server</span>
yum list installed <span>|</span> <span>grep</span> openssh-server
<span># 若此处没有openssh-server信息，请务必安装</span>
yum <span>install</span> openssh-server
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h2 id="防火墙firewalld"> 防火墙firewalld</h2>
<p>CentOS 7 使用新的防火墙系统firewalld，大多数服务需要开启防火墙端口才能被正确访问。</p>
<div><pre><code><span>## 开启80端口</span>
firewall-cmd --zone<span>=</span>public --add-port<span>=</span><span>80</span>/tcp --permanent  <span># success</span>
firewall-cmd --reload
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><table>
<thead>
<tr>
<th>参数</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>--zone</td>
<td>作用域</td>
</tr>
<tr>
<td>--add-port=80/tcp</td>
<td>添加端口，格式为：端口/通讯协议</td>
</tr>
<tr>
<td>--permanent</td>
<td>永久生效，没有此参数重启后失效</td>
</tr>
</tbody>
</table>
<div><pre><code><span>## 常用服务</span>
systemctl start   firewalld   <span># 启动</span>
systemctl stop    firewalld   <span># 停止</span>
systemctl restart firewalld   <span># 重启</span>
systemctl status  firewalld   <span># 状态</span>
systemctl disable firewalld   <span># 禁用</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><div><pre><code><span>## 常用配置</span>
firewall-cmd --version                            <span># 查看版本</span>
firewall-cmd --help                               <span># 查看帮助</span>
firewall-cmd --state                              <span># 状态</span>
firewall-cmd --reload                             <span># 更新防火墙规则</span>
firewall-cmd --complete-reload                    <span># 更新防火墙规则（断开连接）</span>
firewall-cmd --panic-on                           <span># 拒绝所有包</span>
firewall-cmd --panic-off                          <span># 取消拒绝状态</span>
firewall-cmd --query-panic                        <span># 查看是否拒绝</span>
firewall-cmd --get-active-zones                   <span># 查看区域信息</span>
firewall-cmd --set-default-zone<span>=</span>public            <span># 设置默认区域</span>
firewall-cmd --get-zone-of-interface<span>=</span>eth0         <span># 查看指定接口所属区域</span>
firewall-cmd --zone<span>=</span>dmz --list-ports              <span># 查看所有打开的端口</span>
firewall-cmd --zone<span>=</span>public --add-interface<span>=</span>eth0   <span># 指定区域加入接口</span>
firewall-cmd --zone<span>=</span>dmz --add-port<span>=</span><span>8080</span>/tcp       <span># 加入一个端口到区域</span>
firewall-cmd --zone<span>=</span>work --add-service<span>=</span>smtp       <span># 添加一个服务</span>
firewall-cmd --zone<span>=</span>work --remove-service<span>=</span>smtp    <span># 移除一个服务</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><h2 id="配置selinux"> 配置SELinux</h2>
<p>很多应用需要禁用SELinux才能正常运行，配置文件位于/etc/sysconfig/selinux，
修改配置后重启系统生效，设置为<code>SELINUX=disabled</code>关闭。</p>
<div><pre><code><span># This file controls the state of SELinux on the system.</span>
<span># SELINUX= can take one of these three values:</span>
<span>#       enforcing - SELinux security policy is enforced.</span>
<span>#       permissive - SELinux prints warnings instead of enforcing.</span>
<span>#       disabled - SELinux is fully disabled.</span>
<span>SELINUX</span><span>=</span><span>disabled</span>

<span># SELINUXTYPE= type of policy in use. Possible values are:</span>
<span>#       targeted - Only targeted network daemons are protected.</span>
<span>#       strict - Full SELinux protection.</span>
<span>SELINUXTYPE</span><span>=</span><span>targeted</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code>getenforce      <span># 查询状态</span>
<span># disabled</span>
setenforce <span>0</span>    <span># 临时设置</span>
<span># setenforce 1 设置SELinux 成为enforcing模式</span>
<span># setenforce 0 设置SELinux 成为permissive模式</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id="查看系统信息"> 查看系统信息</h2>
<div><pre><code><span>rpm</span> -ql nginx                 <span># 查看nginx软件包的安装位置</span>
<span>rpm</span> -qa                       <span># 查看所有安装的软件包</span>
<span>uname</span> -a                      <span># 查看内核/操作系统/CPU信息的linux系统信息命令</span>
<span>head</span> -n <span>1</span> /etc/issue          <span># 查看操作系统版本，是数字1不是字母L</span>
<span>cat</span> /proc/cpuinfo             <span># 查看CPU信息的linux系统信息命令</span>
<span>hostname</span>                      <span># 查看计算机名的linux系统信息命令</span>
lspci -tv                     <span># 列出所有PCI设备</span>
lsusb -tv                     <span># 列出所有USB设备的linux系统信息命令</span>
lsmod                         <span># 列出加载的内核模块</span>
<span>env</span>                           <span># 查看环境变量资源</span>
<span>free</span> -m                       <span># 查看内存使用量和交换区使用量</span>
<span>df</span> -h                         <span># 查看各分区使用情况</span>
<span>du</span> -sh                        <span># 查看指定目录的大小</span>
<span>grep</span> MemTotal /proc/meminfo   <span># 查看内存总量</span>
<span>grep</span> MemFree /proc/meminfo    <span># 查看空闲内存量</span>
<span>uptime</span>                        <span># 查看系统运行时间、用户数、负载</span>
<span>cat</span> /proc/loadavg             <span># 查看系统负载磁盘和分区</span>
<span>mount</span> <span>|</span> <span>column</span> -t             <span># 查看挂接的分区状态</span>
<span>fdisk</span> -l                      <span># 查看所有分区</span>
<span>swapon</span> -s                     <span># 查看所有交换分区</span>
hdparm -i /dev/hda            <span># 查看磁盘参数(仅适用于IDE设备)</span>
<span>dmesg</span> <span>|</span> <span>grep</span> IDE              <span># 查看启动时IDE设备检测状况网络</span>
<span>ifconfig</span>                      <span># 查看所有网络接口的属性</span>
iptables -L                   <span># 查看防火墙设置</span>
route -n                      <span># 查看路由表</span>
<span>netstat</span> -lntp                 <span># 查看所有监听端口</span>
<span>netstat</span> -antp                 <span># 查看所有已经建立的连接</span>
<span>netstat</span> -s                    <span># 查看网络统计信息进程</span>
<span>ps</span> -ef                        <span># 查看所有进程</span>
<span>top</span>                           <span># 实时显示进程状态用户</span>
w                             <span># 查看活动用户</span>
<span>id</span>                            <span># 查看指定用户信息</span>
last                          <span># 查看用户登录日志</span>
<span>cut</span> -d: -f1 /etc/passwd       <span># 查看系统所有用户</span>
<span>cut</span> -d: -f1 /etc/group        <span># 查看系统所有组</span>
<span>crontab</span> -l                    <span># 查看当前用户的计划任务服务</span>
<span>chkconfig</span> –list               <span># 列出所有系统服务</span>
<span>chkconfig</span> –list <span>|</span> <span>grep</span> on     <span># 列出所有启动的系统服务程序</span>
<span>cat</span> /proc/cpuinfo             <span># 查看CPU相关参数的linux系统命令</span>
<span>cat</span> /proc/partitions          <span># 查看linux硬盘和分区信息的系统信息命令</span>
<span>cat</span> /proc/meminfo             <span># 查看linux系统内存信息的linux系统命令</span>
<span>cat</span> /proc/version             <span># 查看版本，类似uname -r</span>
<span>cat</span> /proc/ioports             <span># 查看设备io端口</span>
<span>cat</span> /proc/interrupts          <span># 查看中断</span>
<span>cat</span> /proc/pci                 <span># 查看pci设备的信息</span>
<span>cat</span> /proc/swaps               <span># 查看所有swap分区的信息</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>CentOS Network</title>
      <link>https://blog.fangyueming.cn/centos-network/</link>
      <guid>https://blog.fangyueming.cn/centos-network/</guid>
      <source url="https://blog.fangyueming.cn/rss.xml">CentOS Network</source>
      <pubDate>Wed, 25 Dec 2019 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="centos-network"> CentOS Network</h1>
<h2 id="nmcli方式"> nmcli方式</h2>
<p><code>CentOS 7</code>开始默认使用<code>network-manager</code>来配置网络，虽然传统方式依然可以配置但不推荐。</p>
<p>以下为配置无线连接，其他网络管理命令参照帮助。</p>
<div><pre><code><span># 扫描并查看wifi情况</span>
nmcli d wifi connect password iface
<span># 获取网卡描述，一般默认wlan0，连接KFC_free，密码12345678</span>
nmcli d wifi connect <span>"KFC_free"</span> password <span>"12345678"</span> wlan0
<span># 禁用连接</span>
nmcli dev dis wlan0
<span># 断开连接</span>
nmcli con del KFC_free
<span># 获取到当前设备所有连接过多的历史连接及对应UUID号码</span>
nmcli c
<span># 删除连接</span>
nmcli c del 72ffd5f4-71f8-0001-b434-6122908cfd4e
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><h2 id="dhcp方式"> dhcp方式</h2>
<p>设置网卡为开机自动连接，开启DHCP，然后在路由器上配置MAC和IP绑定，家庭和小型局域网推荐使用。</p>
<h2 id="传统方式"> 传统方式</h2>
<div><pre><code><span># 默认情况第一张网卡为ifcfg-eth0，不排除被命名成其他名称的可能</span>
<span># 一般情况下只需要指定IPADDR、NETMASK、GATEWAY和DNS1、DNS2即可</span>
<span>vi</span> /etc/sysconfig/network-scripts/ifcfg-eth0
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code><span>TYPE</span><span>=</span><span>Ethernet</span>
<span>BOOTPROTO</span><span>=</span><span>static</span>
<span>IPADDR</span><span>=</span><span>192.168.20.25</span>
<span>NETMASK</span><span>=</span><span>255.255.252.0</span>
<span>GATEWAY</span><span>=</span><span>192.168.20.1</span>
<span>DNS1</span><span>=</span><span>8.8.8.8</span>
<span>DNS2</span><span>=</span><span>8.8.4.4</span>
<span>NETWORK</span><span>=</span><span>192.168.20.0</span>
<span>BROADCAST</span><span>=</span><span>192.168.23.255</span>
<span>DEFROUTE</span><span>=</span><span>yes</span>
<span>PEERDNS</span><span>=</span><span>no</span>
<span>PEERROUTES</span><span>=</span><span>yes</span>
<span>IPV4_FAILURE_FATAL</span><span>=</span><span>no</span>
<span>IPV6INIT</span><span>=</span><span>yes</span>
<span>IPV6_AUTOCONF</span><span>=</span><span>yes</span>
<span>IPV6_DEFROUTE</span><span>=</span><span>yes</span>
<span>IPV6_PEERDNS</span><span>=</span><span>yes</span>
<span>IPV6_PEERROUTES</span><span>=</span><span>yes</span>
<span>IPV6_FAILURE_FATAL</span><span>=</span><span>no</span>
<span>NAME</span><span>=</span><span>eth0</span>
<span>UUID</span><span>=</span><span>5b0a7d76-1602-4e19-aee6-29f57618ca01</span>
<span>ONBOOT</span><span>=</span><span>no</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div><div><pre><code><span>vi</span> /etc/resolv.conf       <span># 配置DNS</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code><span># /etc/resolv.conf</span>
nameserver 114.114.114.114
nameserver 8.8.8.8
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code><span>service</span> network restart     <span># 重启网络服务使其生效</span>
</code></pre>
<div><span>1</span><br></div></div><table>
<thead>
<tr>
<th>参数</th>
<th>可选值</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>DEVICE</td>
<td>name</td>
<td>设备名称通常是eth0</td>
</tr>
<tr>
<td>BOOTPROTO</td>
<td>proto</td>
<td>proto为none、static、dhcp、bootp，IP分配协议</td>
</tr>
<tr>
<td>IPADDR</td>
<td>addr</td>
<td>IP地址</td>
</tr>
<tr>
<td>NETMASK</td>
<td>mask</td>
<td>子网掩码</td>
</tr>
<tr>
<td>GATEWAY</td>
<td>addr</td>
<td>网关地址</td>
</tr>
<tr>
<td>DNS1</td>
<td>dns</td>
<td>DNS1服务器IP</td>
</tr>
<tr>
<td>DNS2</td>
<td>dns</td>
<td>DNS2服务器IP</td>
</tr>
<tr>
<td>NETWORK</td>
<td>addr</td>
<td>所属网络</td>
</tr>
<tr>
<td>BROADCAST</td>
<td>addr</td>
<td>广播地址</td>
</tr>
<tr>
<td>HWADDR</td>
<td>mac</td>
<td>MAC地址</td>
</tr>
<tr>
<td>ONBOOT</td>
<td>answer</td>
<td>answer为yes或no，是否系统启动时激活连接</td>
</tr>
<tr>
<td>USERCTL</td>
<td>answer</td>
<td>answer为yes或no，非root用户是否可以控制该设备</td>
</tr>
<tr>
<td>PEERDNS</td>
<td>answer</td>
<td>answer为yes或no，是否重写/etc/resolv.conf</td>
</tr>
</tbody>
</table>
<blockquote>
<p>方跃明
2019-12-25</p>
</blockquote>
]]></content:encoded>
    </item>
  </channel>
</rss>